// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/prediction/proto/network_layers.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Apollo.Prediction {

  /// <summary>Holder for reflection information generated from modules/prediction/proto/network_layers.proto</summary>
  public static partial class NetworkLayersReflection {

    #region Descriptor
    /// <summary>File descriptor for modules/prediction/proto/network_layers.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NetworkLayersReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci1tb2R1bGVzL3ByZWRpY3Rpb24vcHJvdG8vbmV0d29ya19sYXllcnMucHJv",
            "dG8SEWFwb2xsby5wcmVkaWN0aW9uIi4KD1RlbnNvclBhcmFtZXRlchIMCgRk",
            "YXRhGAEgAygCEg0KBXNoYXBlGAIgAygFIkQKDklucHV0UGFyYW1ldGVyEhMK",
            "C2lucHV0X3NoYXBlGAEgAygFEg0KBWR0eXBlGAIgASgJEg4KBnNwYXJzZRgD",
            "IAEoCCKsAQoORGVuc2VQYXJhbWV0ZXISDQoFdW5pdHMYASABKAUSEgoKYWN0",
            "aXZhdGlvbhgCIAEoCRIQCgh1c2VfYmlhcxgDIAEoCBIzCgd3ZWlnaHRzGAQg",
            "ASgLMiIuYXBvbGxvLnByZWRpY3Rpb24uVGVuc29yUGFyYW1ldGVyEjAKBGJp",
            "YXMYBSABKAsyIi5hcG9sbG8ucHJlZGljdGlvbi5UZW5zb3JQYXJhbWV0ZXIi",
            "qAEKD0NvbnYxZFBhcmFtZXRlchINCgVzaGFwZRgBIAMoBRIQCgh1c2VfYmlh",
            "cxgCIAEoCBIyCgZrZXJuZWwYAyABKAsyIi5hcG9sbG8ucHJlZGljdGlvbi5U",
            "ZW5zb3JQYXJhbWV0ZXISMAoEYmlhcxgEIAEoCzIiLmFwb2xsby5wcmVkaWN0",
            "aW9uLlRlbnNvclBhcmFtZXRlchIOCgZzdHJpZGUYBSABKAUiOQoSTWF4UG9v",
            "bDFkUGFyYW1ldGVyEhMKC2tlcm5lbF9zaXplGAEgASgFEg4KBnN0cmlkZRgC",
            "IAEoBSI5ChJBdmdQb29sMWRQYXJhbWV0ZXISEwoLa2VybmVsX3NpemUYASAB",
            "KAUSDgoGc3RyaWRlGAIgASgFIrUCChtCYXRjaE5vcm1hbGl6YXRpb25QYXJh",
            "bWV0ZXISDwoHZXBzaWxvbhgBIAEoARIMCgRheGlzGAIgASgFEg4KBmNlbnRl",
            "chgDIAEoCBINCgVzY2FsZRgEIAEoCBIQCghtb21lbnR1bRgFIAEoAhIuCgJt",
            "dRgGIAEoCzIiLmFwb2xsby5wcmVkaWN0aW9uLlRlbnNvclBhcmFtZXRlchIx",
            "CgVzaWdtYRgHIAEoCzIiLmFwb2xsby5wcmVkaWN0aW9uLlRlbnNvclBhcmFt",
            "ZXRlchIxCgVnYW1tYRgIIAEoCzIiLmFwb2xsby5wcmVkaWN0aW9uLlRlbnNv",
            "clBhcmFtZXRlchIwCgRiZXRhGAkgASgLMiIuYXBvbGxvLnByZWRpY3Rpb24u",
            "VGVuc29yUGFyYW1ldGVyIskHCg1MU1RNUGFyYW1ldGVyEg0KBXVuaXRzGAEg",
            "ASgFEhgKEHJldHVybl9zZXF1ZW5jZXMYAiABKAgSEAoIc3RhdGVmdWwYAyAB",
            "KAgSEgoKYWN0aXZhdGlvbhgEIAEoCRIcChRyZWN1cnJlbnRfYWN0aXZhdGlv",
            "bhgFIAEoCRIQCgh1c2VfYmlhcxgGIAEoCBIYChB1bml0X2ZvcmdldF9iaWFz",
            "GAcgASgIEhQKDGdvX2JhY2t3YXJkcxgIIAEoCBIOCgZ1bnJvbGwYCSABKAgS",
            "FgoOaW1wbGVtZW50YXRpb24YCiABKAUSOQoNd2VpZ2h0c19pbnB1dBgPIAEo",
            "CzIiLmFwb2xsby5wcmVkaWN0aW9uLlRlbnNvclBhcmFtZXRlchI6Cg53ZWln",
            "aHRzX2ZvcmdldBgQIAEoCzIiLmFwb2xsby5wcmVkaWN0aW9uLlRlbnNvclBh",
            "cmFtZXRlchI4Cgx3ZWlnaHRzX2NlbGwYESABKAsyIi5hcG9sbG8ucHJlZGlj",
            "dGlvbi5UZW5zb3JQYXJhbWV0ZXISOgoOd2VpZ2h0c19vdXRwdXQYEiABKAsy",
            "Ii5hcG9sbG8ucHJlZGljdGlvbi5UZW5zb3JQYXJhbWV0ZXISNgoKYmlhc19p",
            "bnB1dBgTIAEoCzIiLmFwb2xsby5wcmVkaWN0aW9uLlRlbnNvclBhcmFtZXRl",
            "chI3CgtiaWFzX2ZvcmdldBgUIAEoCzIiLmFwb2xsby5wcmVkaWN0aW9uLlRl",
            "bnNvclBhcmFtZXRlchI1CgliaWFzX2NlbGwYFSABKAsyIi5hcG9sbG8ucHJl",
            "ZGljdGlvbi5UZW5zb3JQYXJhbWV0ZXISNwoLYmlhc19vdXRwdXQYFiABKAsy",
            "Ii5hcG9sbG8ucHJlZGljdGlvbi5UZW5zb3JQYXJhbWV0ZXISQwoXcmVjdXJy",
            "ZW50X3dlaWdodHNfaW5wdXQYGSABKAsyIi5hcG9sbG8ucHJlZGljdGlvbi5U",
            "ZW5zb3JQYXJhbWV0ZXISRAoYcmVjdXJyZW50X3dlaWdodHNfZm9yZ2V0GBog",
            "ASgLMiIuYXBvbGxvLnByZWRpY3Rpb24uVGVuc29yUGFyYW1ldGVyEkIKFnJl",
            "Y3VycmVudF93ZWlnaHRzX2NlbGwYGyABKAsyIi5hcG9sbG8ucHJlZGljdGlv",
            "bi5UZW5zb3JQYXJhbWV0ZXISRAoYcmVjdXJyZW50X3dlaWdodHNfb3V0cHV0",
            "GBwgASgLMiIuYXBvbGxvLnByZWRpY3Rpb24uVGVuc29yUGFyYW1ldGVyIikK",
            "E0FjdGl2YXRpb25QYXJhbWV0ZXISEgoKYWN0aXZhdGlvbhgBIAEoCSISChBG",
            "bGF0dGVuUGFyYW1ldGVyIiQKFENvbmNhdGVuYXRlUGFyYW1ldGVyEgwKBGF4",
            "aXMYASABKAUinwUKDkxheWVyUGFyYW1ldGVyEgwKBHR5cGUYASABKAkSDAoE",
            "bmFtZRgCIAEoCRIUCgxvcmRlcl9udW1iZXIYAyABKAUSMgoFaW5wdXQYBCAB",
            "KAsyIS5hcG9sbG8ucHJlZGljdGlvbi5JbnB1dFBhcmFtZXRlckgAEjwKCmFj",
            "dGl2YXRpb24YBSABKAsyJi5hcG9sbG8ucHJlZGljdGlvbi5BY3RpdmF0aW9u",
            "UGFyYW1ldGVySAASMgoFZGVuc2UYBiABKAsyIS5hcG9sbG8ucHJlZGljdGlv",
            "bi5EZW5zZVBhcmFtZXRlckgAEk0KE2JhdGNoX25vcm1hbGl6YXRpb24YByAB",
            "KAsyLi5hcG9sbG8ucHJlZGljdGlvbi5CYXRjaE5vcm1hbGl6YXRpb25QYXJh",
            "bWV0ZXJIABIwCgRsc3RtGAggASgLMiAuYXBvbGxvLnByZWRpY3Rpb24uTFNU",
            "TVBhcmFtZXRlckgAEjYKB2ZsYXR0ZW4YCSABKAsyIy5hcG9sbG8ucHJlZGlj",
            "dGlvbi5GbGF0dGVuUGFyYW1ldGVySAASPgoLY29uY2F0ZW5hdGUYCiABKAsy",
            "Jy5hcG9sbG8ucHJlZGljdGlvbi5Db25jYXRlbmF0ZVBhcmFtZXRlckgAEjQK",
            "BmNvbnYxZBgLIAEoCzIiLmFwb2xsby5wcmVkaWN0aW9uLkNvbnYxZFBhcmFt",
            "ZXRlckgAEjoKCW1heHBvb2wxZBgMIAEoCzIlLmFwb2xsby5wcmVkaWN0aW9u",
            "Lk1heFBvb2wxZFBhcmFtZXRlckgAEjoKCWF2Z3Bvb2wxZBgNIAEoCzIlLmFw",
            "b2xsby5wcmVkaWN0aW9uLkF2Z1Bvb2wxZFBhcmFtZXRlckgAQg4KDG9uZW9m",
            "X2xheWVyc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Prediction.TensorParameter), global::Apollo.Prediction.TensorParameter.Parser, new[]{ "Data", "Shape" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Prediction.InputParameter), global::Apollo.Prediction.InputParameter.Parser, new[]{ "InputShape", "Dtype", "Sparse" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Prediction.DenseParameter), global::Apollo.Prediction.DenseParameter.Parser, new[]{ "Units", "Activation", "UseBias", "Weights", "Bias" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Prediction.Conv1dParameter), global::Apollo.Prediction.Conv1dParameter.Parser, new[]{ "Shape", "UseBias", "Kernel", "Bias", "Stride" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Prediction.MaxPool1dParameter), global::Apollo.Prediction.MaxPool1dParameter.Parser, new[]{ "KernelSize", "Stride" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Prediction.AvgPool1dParameter), global::Apollo.Prediction.AvgPool1dParameter.Parser, new[]{ "KernelSize", "Stride" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Prediction.BatchNormalizationParameter), global::Apollo.Prediction.BatchNormalizationParameter.Parser, new[]{ "Epsilon", "Axis", "Center", "Scale", "Momentum", "Mu", "Sigma", "Gamma", "Beta" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Prediction.LSTMParameter), global::Apollo.Prediction.LSTMParameter.Parser, new[]{ "Units", "ReturnSequences", "Stateful", "Activation", "RecurrentActivation", "UseBias", "UnitForgetBias", "GoBackwards", "Unroll", "Implementation", "WeightsInput", "WeightsForget", "WeightsCell", "WeightsOutput", "BiasInput", "BiasForget", "BiasCell", "BiasOutput", "RecurrentWeightsInput", "RecurrentWeightsForget", "RecurrentWeightsCell", "RecurrentWeightsOutput" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Prediction.ActivationParameter), global::Apollo.Prediction.ActivationParameter.Parser, new[]{ "Activation" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Prediction.FlattenParameter), global::Apollo.Prediction.FlattenParameter.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Prediction.ConcatenateParameter), global::Apollo.Prediction.ConcatenateParameter.Parser, new[]{ "Axis" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Prediction.LayerParameter), global::Apollo.Prediction.LayerParameter.Parser, new[]{ "Type", "Name", "OrderNumber", "Input", "Activation", "Dense", "BatchNormalization", "Lstm", "Flatten", "Concatenate", "Conv1D", "Maxpool1D", "Avgpool1D" }, new[]{ "OneofLayers" }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class TensorParameter : pb::IMessage<TensorParameter> {
    private static readonly pb::MessageParser<TensorParameter> _parser = new pb::MessageParser<TensorParameter>(() => new TensorParameter());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TensorParameter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Prediction.NetworkLayersReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TensorParameter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TensorParameter(TensorParameter other) : this() {
      data_ = other.data_.Clone();
      shape_ = other.shape_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TensorParameter Clone() {
      return new TensorParameter(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private static readonly pb::FieldCodec<float> _repeated_data_codec
        = pb::FieldCodec.ForFloat(10);
    private readonly pbc::RepeatedField<float> data_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> Data {
      get { return data_; }
    }

    /// <summary>Field number for the "shape" field.</summary>
    public const int ShapeFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_shape_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> shape_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Shape {
      get { return shape_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TensorParameter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TensorParameter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!data_.Equals(other.data_)) return false;
      if(!shape_.Equals(other.shape_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= data_.GetHashCode();
      hash ^= shape_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      data_.WriteTo(output, _repeated_data_codec);
      shape_.WriteTo(output, _repeated_shape_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += data_.CalculateSize(_repeated_data_codec);
      size += shape_.CalculateSize(_repeated_shape_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TensorParameter other) {
      if (other == null) {
        return;
      }
      data_.Add(other.data_);
      shape_.Add(other.shape_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 13: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
          case 18:
          case 16: {
            shape_.AddEntriesFrom(input, _repeated_shape_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class InputParameter : pb::IMessage<InputParameter> {
    private static readonly pb::MessageParser<InputParameter> _parser = new pb::MessageParser<InputParameter>(() => new InputParameter());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InputParameter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Prediction.NetworkLayersReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InputParameter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InputParameter(InputParameter other) : this() {
      inputShape_ = other.inputShape_.Clone();
      dtype_ = other.dtype_;
      sparse_ = other.sparse_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InputParameter Clone() {
      return new InputParameter(this);
    }

    /// <summary>Field number for the "input_shape" field.</summary>
    public const int InputShapeFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_inputShape_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> inputShape_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> InputShape {
      get { return inputShape_; }
    }

    /// <summary>Field number for the "dtype" field.</summary>
    public const int DtypeFieldNumber = 2;
    private string dtype_ = "";
    /// <summary>
    /// data type of the input
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Dtype {
      get { return dtype_; }
      set {
        dtype_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sparse" field.</summary>
    public const int SparseFieldNumber = 3;
    private bool sparse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Sparse {
      get { return sparse_; }
      set {
        sparse_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InputParameter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InputParameter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!inputShape_.Equals(other.inputShape_)) return false;
      if (Dtype != other.Dtype) return false;
      if (Sparse != other.Sparse) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= inputShape_.GetHashCode();
      if (Dtype.Length != 0) hash ^= Dtype.GetHashCode();
      if (Sparse != false) hash ^= Sparse.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      inputShape_.WriteTo(output, _repeated_inputShape_codec);
      if (Dtype.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Dtype);
      }
      if (Sparse != false) {
        output.WriteRawTag(24);
        output.WriteBool(Sparse);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += inputShape_.CalculateSize(_repeated_inputShape_codec);
      if (Dtype.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Dtype);
      }
      if (Sparse != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InputParameter other) {
      if (other == null) {
        return;
      }
      inputShape_.Add(other.inputShape_);
      if (other.Dtype.Length != 0) {
        Dtype = other.Dtype;
      }
      if (other.Sparse != false) {
        Sparse = other.Sparse;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 8: {
            inputShape_.AddEntriesFrom(input, _repeated_inputShape_codec);
            break;
          }
          case 18: {
            Dtype = input.ReadString();
            break;
          }
          case 24: {
            Sparse = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DenseParameter : pb::IMessage<DenseParameter> {
    private static readonly pb::MessageParser<DenseParameter> _parser = new pb::MessageParser<DenseParameter>(() => new DenseParameter());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DenseParameter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Prediction.NetworkLayersReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DenseParameter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DenseParameter(DenseParameter other) : this() {
      units_ = other.units_;
      activation_ = other.activation_;
      useBias_ = other.useBias_;
      Weights = other.weights_ != null ? other.Weights.Clone() : null;
      Bias = other.bias_ != null ? other.Bias.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DenseParameter Clone() {
      return new DenseParameter(this);
    }

    /// <summary>Field number for the "units" field.</summary>
    public const int UnitsFieldNumber = 1;
    private int units_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Units {
      get { return units_; }
      set {
        units_ = value;
      }
    }

    /// <summary>Field number for the "activation" field.</summary>
    public const int ActivationFieldNumber = 2;
    private string activation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Activation {
      get { return activation_; }
      set {
        activation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "use_bias" field.</summary>
    public const int UseBiasFieldNumber = 3;
    private bool useBias_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UseBias {
      get { return useBias_; }
      set {
        useBias_ = value;
      }
    }

    /// <summary>Field number for the "weights" field.</summary>
    public const int WeightsFieldNumber = 4;
    private global::Apollo.Prediction.TensorParameter weights_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.TensorParameter Weights {
      get { return weights_; }
      set {
        weights_ = value;
      }
    }

    /// <summary>Field number for the "bias" field.</summary>
    public const int BiasFieldNumber = 5;
    private global::Apollo.Prediction.TensorParameter bias_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.TensorParameter Bias {
      get { return bias_; }
      set {
        bias_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DenseParameter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DenseParameter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Units != other.Units) return false;
      if (Activation != other.Activation) return false;
      if (UseBias != other.UseBias) return false;
      if (!object.Equals(Weights, other.Weights)) return false;
      if (!object.Equals(Bias, other.Bias)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Units != 0) hash ^= Units.GetHashCode();
      if (Activation.Length != 0) hash ^= Activation.GetHashCode();
      if (UseBias != false) hash ^= UseBias.GetHashCode();
      if (weights_ != null) hash ^= Weights.GetHashCode();
      if (bias_ != null) hash ^= Bias.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Units != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Units);
      }
      if (Activation.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Activation);
      }
      if (UseBias != false) {
        output.WriteRawTag(24);
        output.WriteBool(UseBias);
      }
      if (weights_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Weights);
      }
      if (bias_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Bias);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Units != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Units);
      }
      if (Activation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Activation);
      }
      if (UseBias != false) {
        size += 1 + 1;
      }
      if (weights_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Weights);
      }
      if (bias_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bias);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DenseParameter other) {
      if (other == null) {
        return;
      }
      if (other.Units != 0) {
        Units = other.Units;
      }
      if (other.Activation.Length != 0) {
        Activation = other.Activation;
      }
      if (other.UseBias != false) {
        UseBias = other.UseBias;
      }
      if (other.weights_ != null) {
        if (weights_ == null) {
          weights_ = new global::Apollo.Prediction.TensorParameter();
        }
        Weights.MergeFrom(other.Weights);
      }
      if (other.bias_ != null) {
        if (bias_ == null) {
          bias_ = new global::Apollo.Prediction.TensorParameter();
        }
        Bias.MergeFrom(other.Bias);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Units = input.ReadInt32();
            break;
          }
          case 18: {
            Activation = input.ReadString();
            break;
          }
          case 24: {
            UseBias = input.ReadBool();
            break;
          }
          case 34: {
            if (weights_ == null) {
              weights_ = new global::Apollo.Prediction.TensorParameter();
            }
            input.ReadMessage(weights_);
            break;
          }
          case 42: {
            if (bias_ == null) {
              bias_ = new global::Apollo.Prediction.TensorParameter();
            }
            input.ReadMessage(bias_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Conv1dParameter : pb::IMessage<Conv1dParameter> {
    private static readonly pb::MessageParser<Conv1dParameter> _parser = new pb::MessageParser<Conv1dParameter>(() => new Conv1dParameter());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Conv1dParameter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Prediction.NetworkLayersReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Conv1dParameter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Conv1dParameter(Conv1dParameter other) : this() {
      shape_ = other.shape_.Clone();
      useBias_ = other.useBias_;
      Kernel = other.kernel_ != null ? other.Kernel.Clone() : null;
      Bias = other.bias_ != null ? other.Bias.Clone() : null;
      stride_ = other.stride_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Conv1dParameter Clone() {
      return new Conv1dParameter(this);
    }

    /// <summary>Field number for the "shape" field.</summary>
    public const int ShapeFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_shape_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> shape_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Shape {
      get { return shape_; }
    }

    /// <summary>Field number for the "use_bias" field.</summary>
    public const int UseBiasFieldNumber = 2;
    private bool useBias_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UseBias {
      get { return useBias_; }
      set {
        useBias_ = value;
      }
    }

    /// <summary>Field number for the "kernel" field.</summary>
    public const int KernelFieldNumber = 3;
    private global::Apollo.Prediction.TensorParameter kernel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.TensorParameter Kernel {
      get { return kernel_; }
      set {
        kernel_ = value;
      }
    }

    /// <summary>Field number for the "bias" field.</summary>
    public const int BiasFieldNumber = 4;
    private global::Apollo.Prediction.TensorParameter bias_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.TensorParameter Bias {
      get { return bias_; }
      set {
        bias_ = value;
      }
    }

    /// <summary>Field number for the "stride" field.</summary>
    public const int StrideFieldNumber = 5;
    private int stride_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Stride {
      get { return stride_; }
      set {
        stride_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Conv1dParameter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Conv1dParameter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!shape_.Equals(other.shape_)) return false;
      if (UseBias != other.UseBias) return false;
      if (!object.Equals(Kernel, other.Kernel)) return false;
      if (!object.Equals(Bias, other.Bias)) return false;
      if (Stride != other.Stride) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= shape_.GetHashCode();
      if (UseBias != false) hash ^= UseBias.GetHashCode();
      if (kernel_ != null) hash ^= Kernel.GetHashCode();
      if (bias_ != null) hash ^= Bias.GetHashCode();
      if (Stride != 0) hash ^= Stride.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      shape_.WriteTo(output, _repeated_shape_codec);
      if (UseBias != false) {
        output.WriteRawTag(16);
        output.WriteBool(UseBias);
      }
      if (kernel_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Kernel);
      }
      if (bias_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Bias);
      }
      if (Stride != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Stride);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += shape_.CalculateSize(_repeated_shape_codec);
      if (UseBias != false) {
        size += 1 + 1;
      }
      if (kernel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Kernel);
      }
      if (bias_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bias);
      }
      if (Stride != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Stride);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Conv1dParameter other) {
      if (other == null) {
        return;
      }
      shape_.Add(other.shape_);
      if (other.UseBias != false) {
        UseBias = other.UseBias;
      }
      if (other.kernel_ != null) {
        if (kernel_ == null) {
          kernel_ = new global::Apollo.Prediction.TensorParameter();
        }
        Kernel.MergeFrom(other.Kernel);
      }
      if (other.bias_ != null) {
        if (bias_ == null) {
          bias_ = new global::Apollo.Prediction.TensorParameter();
        }
        Bias.MergeFrom(other.Bias);
      }
      if (other.Stride != 0) {
        Stride = other.Stride;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 8: {
            shape_.AddEntriesFrom(input, _repeated_shape_codec);
            break;
          }
          case 16: {
            UseBias = input.ReadBool();
            break;
          }
          case 26: {
            if (kernel_ == null) {
              kernel_ = new global::Apollo.Prediction.TensorParameter();
            }
            input.ReadMessage(kernel_);
            break;
          }
          case 34: {
            if (bias_ == null) {
              bias_ = new global::Apollo.Prediction.TensorParameter();
            }
            input.ReadMessage(bias_);
            break;
          }
          case 40: {
            Stride = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MaxPool1dParameter : pb::IMessage<MaxPool1dParameter> {
    private static readonly pb::MessageParser<MaxPool1dParameter> _parser = new pb::MessageParser<MaxPool1dParameter>(() => new MaxPool1dParameter());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MaxPool1dParameter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Prediction.NetworkLayersReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaxPool1dParameter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaxPool1dParameter(MaxPool1dParameter other) : this() {
      kernelSize_ = other.kernelSize_;
      stride_ = other.stride_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaxPool1dParameter Clone() {
      return new MaxPool1dParameter(this);
    }

    /// <summary>Field number for the "kernel_size" field.</summary>
    public const int KernelSizeFieldNumber = 1;
    private int kernelSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int KernelSize {
      get { return kernelSize_; }
      set {
        kernelSize_ = value;
      }
    }

    /// <summary>Field number for the "stride" field.</summary>
    public const int StrideFieldNumber = 2;
    private int stride_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Stride {
      get { return stride_; }
      set {
        stride_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MaxPool1dParameter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MaxPool1dParameter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (KernelSize != other.KernelSize) return false;
      if (Stride != other.Stride) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (KernelSize != 0) hash ^= KernelSize.GetHashCode();
      if (Stride != 0) hash ^= Stride.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (KernelSize != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(KernelSize);
      }
      if (Stride != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Stride);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (KernelSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(KernelSize);
      }
      if (Stride != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Stride);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MaxPool1dParameter other) {
      if (other == null) {
        return;
      }
      if (other.KernelSize != 0) {
        KernelSize = other.KernelSize;
      }
      if (other.Stride != 0) {
        Stride = other.Stride;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            KernelSize = input.ReadInt32();
            break;
          }
          case 16: {
            Stride = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AvgPool1dParameter : pb::IMessage<AvgPool1dParameter> {
    private static readonly pb::MessageParser<AvgPool1dParameter> _parser = new pb::MessageParser<AvgPool1dParameter>(() => new AvgPool1dParameter());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AvgPool1dParameter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Prediction.NetworkLayersReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvgPool1dParameter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvgPool1dParameter(AvgPool1dParameter other) : this() {
      kernelSize_ = other.kernelSize_;
      stride_ = other.stride_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvgPool1dParameter Clone() {
      return new AvgPool1dParameter(this);
    }

    /// <summary>Field number for the "kernel_size" field.</summary>
    public const int KernelSizeFieldNumber = 1;
    private int kernelSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int KernelSize {
      get { return kernelSize_; }
      set {
        kernelSize_ = value;
      }
    }

    /// <summary>Field number for the "stride" field.</summary>
    public const int StrideFieldNumber = 2;
    private int stride_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Stride {
      get { return stride_; }
      set {
        stride_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AvgPool1dParameter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AvgPool1dParameter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (KernelSize != other.KernelSize) return false;
      if (Stride != other.Stride) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (KernelSize != 0) hash ^= KernelSize.GetHashCode();
      if (Stride != 0) hash ^= Stride.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (KernelSize != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(KernelSize);
      }
      if (Stride != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Stride);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (KernelSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(KernelSize);
      }
      if (Stride != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Stride);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AvgPool1dParameter other) {
      if (other == null) {
        return;
      }
      if (other.KernelSize != 0) {
        KernelSize = other.KernelSize;
      }
      if (other.Stride != 0) {
        Stride = other.Stride;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            KernelSize = input.ReadInt32();
            break;
          }
          case 16: {
            Stride = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BatchNormalizationParameter : pb::IMessage<BatchNormalizationParameter> {
    private static readonly pb::MessageParser<BatchNormalizationParameter> _parser = new pb::MessageParser<BatchNormalizationParameter>(() => new BatchNormalizationParameter());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchNormalizationParameter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Prediction.NetworkLayersReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchNormalizationParameter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchNormalizationParameter(BatchNormalizationParameter other) : this() {
      epsilon_ = other.epsilon_;
      axis_ = other.axis_;
      center_ = other.center_;
      scale_ = other.scale_;
      momentum_ = other.momentum_;
      Mu = other.mu_ != null ? other.Mu.Clone() : null;
      Sigma = other.sigma_ != null ? other.Sigma.Clone() : null;
      Gamma = other.gamma_ != null ? other.Gamma.Clone() : null;
      Beta = other.beta_ != null ? other.Beta.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchNormalizationParameter Clone() {
      return new BatchNormalizationParameter(this);
    }

    /// <summary>Field number for the "epsilon" field.</summary>
    public const int EpsilonFieldNumber = 1;
    private double epsilon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Epsilon {
      get { return epsilon_; }
      set {
        epsilon_ = value;
      }
    }

    /// <summary>Field number for the "axis" field.</summary>
    public const int AxisFieldNumber = 2;
    private int axis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Axis {
      get { return axis_; }
      set {
        axis_ = value;
      }
    }

    /// <summary>Field number for the "center" field.</summary>
    public const int CenterFieldNumber = 3;
    private bool center_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Center {
      get { return center_; }
      set {
        center_ = value;
      }
    }

    /// <summary>Field number for the "scale" field.</summary>
    public const int ScaleFieldNumber = 4;
    private bool scale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Scale {
      get { return scale_; }
      set {
        scale_ = value;
      }
    }

    /// <summary>Field number for the "momentum" field.</summary>
    public const int MomentumFieldNumber = 5;
    private float momentum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Momentum {
      get { return momentum_; }
      set {
        momentum_ = value;
      }
    }

    /// <summary>Field number for the "mu" field.</summary>
    public const int MuFieldNumber = 6;
    private global::Apollo.Prediction.TensorParameter mu_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.TensorParameter Mu {
      get { return mu_; }
      set {
        mu_ = value;
      }
    }

    /// <summary>Field number for the "sigma" field.</summary>
    public const int SigmaFieldNumber = 7;
    private global::Apollo.Prediction.TensorParameter sigma_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.TensorParameter Sigma {
      get { return sigma_; }
      set {
        sigma_ = value;
      }
    }

    /// <summary>Field number for the "gamma" field.</summary>
    public const int GammaFieldNumber = 8;
    private global::Apollo.Prediction.TensorParameter gamma_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.TensorParameter Gamma {
      get { return gamma_; }
      set {
        gamma_ = value;
      }
    }

    /// <summary>Field number for the "beta" field.</summary>
    public const int BetaFieldNumber = 9;
    private global::Apollo.Prediction.TensorParameter beta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.TensorParameter Beta {
      get { return beta_; }
      set {
        beta_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchNormalizationParameter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchNormalizationParameter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Epsilon != other.Epsilon) return false;
      if (Axis != other.Axis) return false;
      if (Center != other.Center) return false;
      if (Scale != other.Scale) return false;
      if (Momentum != other.Momentum) return false;
      if (!object.Equals(Mu, other.Mu)) return false;
      if (!object.Equals(Sigma, other.Sigma)) return false;
      if (!object.Equals(Gamma, other.Gamma)) return false;
      if (!object.Equals(Beta, other.Beta)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Epsilon != 0D) hash ^= Epsilon.GetHashCode();
      if (Axis != 0) hash ^= Axis.GetHashCode();
      if (Center != false) hash ^= Center.GetHashCode();
      if (Scale != false) hash ^= Scale.GetHashCode();
      if (Momentum != 0F) hash ^= Momentum.GetHashCode();
      if (mu_ != null) hash ^= Mu.GetHashCode();
      if (sigma_ != null) hash ^= Sigma.GetHashCode();
      if (gamma_ != null) hash ^= Gamma.GetHashCode();
      if (beta_ != null) hash ^= Beta.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Epsilon != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Epsilon);
      }
      if (Axis != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Axis);
      }
      if (Center != false) {
        output.WriteRawTag(24);
        output.WriteBool(Center);
      }
      if (Scale != false) {
        output.WriteRawTag(32);
        output.WriteBool(Scale);
      }
      if (Momentum != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Momentum);
      }
      if (mu_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Mu);
      }
      if (sigma_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Sigma);
      }
      if (gamma_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Gamma);
      }
      if (beta_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Beta);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Epsilon != 0D) {
        size += 1 + 8;
      }
      if (Axis != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Axis);
      }
      if (Center != false) {
        size += 1 + 1;
      }
      if (Scale != false) {
        size += 1 + 1;
      }
      if (Momentum != 0F) {
        size += 1 + 4;
      }
      if (mu_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mu);
      }
      if (sigma_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sigma);
      }
      if (gamma_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Gamma);
      }
      if (beta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Beta);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchNormalizationParameter other) {
      if (other == null) {
        return;
      }
      if (other.Epsilon != 0D) {
        Epsilon = other.Epsilon;
      }
      if (other.Axis != 0) {
        Axis = other.Axis;
      }
      if (other.Center != false) {
        Center = other.Center;
      }
      if (other.Scale != false) {
        Scale = other.Scale;
      }
      if (other.Momentum != 0F) {
        Momentum = other.Momentum;
      }
      if (other.mu_ != null) {
        if (mu_ == null) {
          mu_ = new global::Apollo.Prediction.TensorParameter();
        }
        Mu.MergeFrom(other.Mu);
      }
      if (other.sigma_ != null) {
        if (sigma_ == null) {
          sigma_ = new global::Apollo.Prediction.TensorParameter();
        }
        Sigma.MergeFrom(other.Sigma);
      }
      if (other.gamma_ != null) {
        if (gamma_ == null) {
          gamma_ = new global::Apollo.Prediction.TensorParameter();
        }
        Gamma.MergeFrom(other.Gamma);
      }
      if (other.beta_ != null) {
        if (beta_ == null) {
          beta_ = new global::Apollo.Prediction.TensorParameter();
        }
        Beta.MergeFrom(other.Beta);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 9: {
            Epsilon = input.ReadDouble();
            break;
          }
          case 16: {
            Axis = input.ReadInt32();
            break;
          }
          case 24: {
            Center = input.ReadBool();
            break;
          }
          case 32: {
            Scale = input.ReadBool();
            break;
          }
          case 45: {
            Momentum = input.ReadFloat();
            break;
          }
          case 50: {
            if (mu_ == null) {
              mu_ = new global::Apollo.Prediction.TensorParameter();
            }
            input.ReadMessage(mu_);
            break;
          }
          case 58: {
            if (sigma_ == null) {
              sigma_ = new global::Apollo.Prediction.TensorParameter();
            }
            input.ReadMessage(sigma_);
            break;
          }
          case 66: {
            if (gamma_ == null) {
              gamma_ = new global::Apollo.Prediction.TensorParameter();
            }
            input.ReadMessage(gamma_);
            break;
          }
          case 74: {
            if (beta_ == null) {
              beta_ = new global::Apollo.Prediction.TensorParameter();
            }
            input.ReadMessage(beta_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LSTMParameter : pb::IMessage<LSTMParameter> {
    private static readonly pb::MessageParser<LSTMParameter> _parser = new pb::MessageParser<LSTMParameter>(() => new LSTMParameter());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LSTMParameter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Prediction.NetworkLayersReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LSTMParameter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LSTMParameter(LSTMParameter other) : this() {
      units_ = other.units_;
      returnSequences_ = other.returnSequences_;
      stateful_ = other.stateful_;
      activation_ = other.activation_;
      recurrentActivation_ = other.recurrentActivation_;
      useBias_ = other.useBias_;
      unitForgetBias_ = other.unitForgetBias_;
      goBackwards_ = other.goBackwards_;
      unroll_ = other.unroll_;
      implementation_ = other.implementation_;
      WeightsInput = other.weightsInput_ != null ? other.WeightsInput.Clone() : null;
      WeightsForget = other.weightsForget_ != null ? other.WeightsForget.Clone() : null;
      WeightsCell = other.weightsCell_ != null ? other.WeightsCell.Clone() : null;
      WeightsOutput = other.weightsOutput_ != null ? other.WeightsOutput.Clone() : null;
      BiasInput = other.biasInput_ != null ? other.BiasInput.Clone() : null;
      BiasForget = other.biasForget_ != null ? other.BiasForget.Clone() : null;
      BiasCell = other.biasCell_ != null ? other.BiasCell.Clone() : null;
      BiasOutput = other.biasOutput_ != null ? other.BiasOutput.Clone() : null;
      RecurrentWeightsInput = other.recurrentWeightsInput_ != null ? other.RecurrentWeightsInput.Clone() : null;
      RecurrentWeightsForget = other.recurrentWeightsForget_ != null ? other.RecurrentWeightsForget.Clone() : null;
      RecurrentWeightsCell = other.recurrentWeightsCell_ != null ? other.RecurrentWeightsCell.Clone() : null;
      RecurrentWeightsOutput = other.recurrentWeightsOutput_ != null ? other.RecurrentWeightsOutput.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LSTMParameter Clone() {
      return new LSTMParameter(this);
    }

    /// <summary>Field number for the "units" field.</summary>
    public const int UnitsFieldNumber = 1;
    private int units_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Units {
      get { return units_; }
      set {
        units_ = value;
      }
    }

    /// <summary>Field number for the "return_sequences" field.</summary>
    public const int ReturnSequencesFieldNumber = 2;
    private bool returnSequences_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ReturnSequences {
      get { return returnSequences_; }
      set {
        returnSequences_ = value;
      }
    }

    /// <summary>Field number for the "stateful" field.</summary>
    public const int StatefulFieldNumber = 3;
    private bool stateful_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Stateful {
      get { return stateful_; }
      set {
        stateful_ = value;
      }
    }

    /// <summary>Field number for the "activation" field.</summary>
    public const int ActivationFieldNumber = 4;
    private string activation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Activation {
      get { return activation_; }
      set {
        activation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "recurrent_activation" field.</summary>
    public const int RecurrentActivationFieldNumber = 5;
    private string recurrentActivation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RecurrentActivation {
      get { return recurrentActivation_; }
      set {
        recurrentActivation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "use_bias" field.</summary>
    public const int UseBiasFieldNumber = 6;
    private bool useBias_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UseBias {
      get { return useBias_; }
      set {
        useBias_ = value;
      }
    }

    /// <summary>Field number for the "unit_forget_bias" field.</summary>
    public const int UnitForgetBiasFieldNumber = 7;
    private bool unitForgetBias_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UnitForgetBias {
      get { return unitForgetBias_; }
      set {
        unitForgetBias_ = value;
      }
    }

    /// <summary>Field number for the "go_backwards" field.</summary>
    public const int GoBackwardsFieldNumber = 8;
    private bool goBackwards_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool GoBackwards {
      get { return goBackwards_; }
      set {
        goBackwards_ = value;
      }
    }

    /// <summary>Field number for the "unroll" field.</summary>
    public const int UnrollFieldNumber = 9;
    private bool unroll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Unroll {
      get { return unroll_; }
      set {
        unroll_ = value;
      }
    }

    /// <summary>Field number for the "implementation" field.</summary>
    public const int ImplementationFieldNumber = 10;
    private int implementation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Implementation {
      get { return implementation_; }
      set {
        implementation_ = value;
      }
    }

    /// <summary>Field number for the "weights_input" field.</summary>
    public const int WeightsInputFieldNumber = 15;
    private global::Apollo.Prediction.TensorParameter weightsInput_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.TensorParameter WeightsInput {
      get { return weightsInput_; }
      set {
        weightsInput_ = value;
      }
    }

    /// <summary>Field number for the "weights_forget" field.</summary>
    public const int WeightsForgetFieldNumber = 16;
    private global::Apollo.Prediction.TensorParameter weightsForget_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.TensorParameter WeightsForget {
      get { return weightsForget_; }
      set {
        weightsForget_ = value;
      }
    }

    /// <summary>Field number for the "weights_cell" field.</summary>
    public const int WeightsCellFieldNumber = 17;
    private global::Apollo.Prediction.TensorParameter weightsCell_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.TensorParameter WeightsCell {
      get { return weightsCell_; }
      set {
        weightsCell_ = value;
      }
    }

    /// <summary>Field number for the "weights_output" field.</summary>
    public const int WeightsOutputFieldNumber = 18;
    private global::Apollo.Prediction.TensorParameter weightsOutput_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.TensorParameter WeightsOutput {
      get { return weightsOutput_; }
      set {
        weightsOutput_ = value;
      }
    }

    /// <summary>Field number for the "bias_input" field.</summary>
    public const int BiasInputFieldNumber = 19;
    private global::Apollo.Prediction.TensorParameter biasInput_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.TensorParameter BiasInput {
      get { return biasInput_; }
      set {
        biasInput_ = value;
      }
    }

    /// <summary>Field number for the "bias_forget" field.</summary>
    public const int BiasForgetFieldNumber = 20;
    private global::Apollo.Prediction.TensorParameter biasForget_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.TensorParameter BiasForget {
      get { return biasForget_; }
      set {
        biasForget_ = value;
      }
    }

    /// <summary>Field number for the "bias_cell" field.</summary>
    public const int BiasCellFieldNumber = 21;
    private global::Apollo.Prediction.TensorParameter biasCell_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.TensorParameter BiasCell {
      get { return biasCell_; }
      set {
        biasCell_ = value;
      }
    }

    /// <summary>Field number for the "bias_output" field.</summary>
    public const int BiasOutputFieldNumber = 22;
    private global::Apollo.Prediction.TensorParameter biasOutput_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.TensorParameter BiasOutput {
      get { return biasOutput_; }
      set {
        biasOutput_ = value;
      }
    }

    /// <summary>Field number for the "recurrent_weights_input" field.</summary>
    public const int RecurrentWeightsInputFieldNumber = 25;
    private global::Apollo.Prediction.TensorParameter recurrentWeightsInput_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.TensorParameter RecurrentWeightsInput {
      get { return recurrentWeightsInput_; }
      set {
        recurrentWeightsInput_ = value;
      }
    }

    /// <summary>Field number for the "recurrent_weights_forget" field.</summary>
    public const int RecurrentWeightsForgetFieldNumber = 26;
    private global::Apollo.Prediction.TensorParameter recurrentWeightsForget_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.TensorParameter RecurrentWeightsForget {
      get { return recurrentWeightsForget_; }
      set {
        recurrentWeightsForget_ = value;
      }
    }

    /// <summary>Field number for the "recurrent_weights_cell" field.</summary>
    public const int RecurrentWeightsCellFieldNumber = 27;
    private global::Apollo.Prediction.TensorParameter recurrentWeightsCell_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.TensorParameter RecurrentWeightsCell {
      get { return recurrentWeightsCell_; }
      set {
        recurrentWeightsCell_ = value;
      }
    }

    /// <summary>Field number for the "recurrent_weights_output" field.</summary>
    public const int RecurrentWeightsOutputFieldNumber = 28;
    private global::Apollo.Prediction.TensorParameter recurrentWeightsOutput_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.TensorParameter RecurrentWeightsOutput {
      get { return recurrentWeightsOutput_; }
      set {
        recurrentWeightsOutput_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LSTMParameter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LSTMParameter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Units != other.Units) return false;
      if (ReturnSequences != other.ReturnSequences) return false;
      if (Stateful != other.Stateful) return false;
      if (Activation != other.Activation) return false;
      if (RecurrentActivation != other.RecurrentActivation) return false;
      if (UseBias != other.UseBias) return false;
      if (UnitForgetBias != other.UnitForgetBias) return false;
      if (GoBackwards != other.GoBackwards) return false;
      if (Unroll != other.Unroll) return false;
      if (Implementation != other.Implementation) return false;
      if (!object.Equals(WeightsInput, other.WeightsInput)) return false;
      if (!object.Equals(WeightsForget, other.WeightsForget)) return false;
      if (!object.Equals(WeightsCell, other.WeightsCell)) return false;
      if (!object.Equals(WeightsOutput, other.WeightsOutput)) return false;
      if (!object.Equals(BiasInput, other.BiasInput)) return false;
      if (!object.Equals(BiasForget, other.BiasForget)) return false;
      if (!object.Equals(BiasCell, other.BiasCell)) return false;
      if (!object.Equals(BiasOutput, other.BiasOutput)) return false;
      if (!object.Equals(RecurrentWeightsInput, other.RecurrentWeightsInput)) return false;
      if (!object.Equals(RecurrentWeightsForget, other.RecurrentWeightsForget)) return false;
      if (!object.Equals(RecurrentWeightsCell, other.RecurrentWeightsCell)) return false;
      if (!object.Equals(RecurrentWeightsOutput, other.RecurrentWeightsOutput)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Units != 0) hash ^= Units.GetHashCode();
      if (ReturnSequences != false) hash ^= ReturnSequences.GetHashCode();
      if (Stateful != false) hash ^= Stateful.GetHashCode();
      if (Activation.Length != 0) hash ^= Activation.GetHashCode();
      if (RecurrentActivation.Length != 0) hash ^= RecurrentActivation.GetHashCode();
      if (UseBias != false) hash ^= UseBias.GetHashCode();
      if (UnitForgetBias != false) hash ^= UnitForgetBias.GetHashCode();
      if (GoBackwards != false) hash ^= GoBackwards.GetHashCode();
      if (Unroll != false) hash ^= Unroll.GetHashCode();
      if (Implementation != 0) hash ^= Implementation.GetHashCode();
      if (weightsInput_ != null) hash ^= WeightsInput.GetHashCode();
      if (weightsForget_ != null) hash ^= WeightsForget.GetHashCode();
      if (weightsCell_ != null) hash ^= WeightsCell.GetHashCode();
      if (weightsOutput_ != null) hash ^= WeightsOutput.GetHashCode();
      if (biasInput_ != null) hash ^= BiasInput.GetHashCode();
      if (biasForget_ != null) hash ^= BiasForget.GetHashCode();
      if (biasCell_ != null) hash ^= BiasCell.GetHashCode();
      if (biasOutput_ != null) hash ^= BiasOutput.GetHashCode();
      if (recurrentWeightsInput_ != null) hash ^= RecurrentWeightsInput.GetHashCode();
      if (recurrentWeightsForget_ != null) hash ^= RecurrentWeightsForget.GetHashCode();
      if (recurrentWeightsCell_ != null) hash ^= RecurrentWeightsCell.GetHashCode();
      if (recurrentWeightsOutput_ != null) hash ^= RecurrentWeightsOutput.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Units != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Units);
      }
      if (ReturnSequences != false) {
        output.WriteRawTag(16);
        output.WriteBool(ReturnSequences);
      }
      if (Stateful != false) {
        output.WriteRawTag(24);
        output.WriteBool(Stateful);
      }
      if (Activation.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Activation);
      }
      if (RecurrentActivation.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RecurrentActivation);
      }
      if (UseBias != false) {
        output.WriteRawTag(48);
        output.WriteBool(UseBias);
      }
      if (UnitForgetBias != false) {
        output.WriteRawTag(56);
        output.WriteBool(UnitForgetBias);
      }
      if (GoBackwards != false) {
        output.WriteRawTag(64);
        output.WriteBool(GoBackwards);
      }
      if (Unroll != false) {
        output.WriteRawTag(72);
        output.WriteBool(Unroll);
      }
      if (Implementation != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Implementation);
      }
      if (weightsInput_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(WeightsInput);
      }
      if (weightsForget_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(WeightsForget);
      }
      if (weightsCell_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(WeightsCell);
      }
      if (weightsOutput_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(WeightsOutput);
      }
      if (biasInput_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(BiasInput);
      }
      if (biasForget_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(BiasForget);
      }
      if (biasCell_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(BiasCell);
      }
      if (biasOutput_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(BiasOutput);
      }
      if (recurrentWeightsInput_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(RecurrentWeightsInput);
      }
      if (recurrentWeightsForget_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(RecurrentWeightsForget);
      }
      if (recurrentWeightsCell_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(RecurrentWeightsCell);
      }
      if (recurrentWeightsOutput_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(RecurrentWeightsOutput);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Units != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Units);
      }
      if (ReturnSequences != false) {
        size += 1 + 1;
      }
      if (Stateful != false) {
        size += 1 + 1;
      }
      if (Activation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Activation);
      }
      if (RecurrentActivation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RecurrentActivation);
      }
      if (UseBias != false) {
        size += 1 + 1;
      }
      if (UnitForgetBias != false) {
        size += 1 + 1;
      }
      if (GoBackwards != false) {
        size += 1 + 1;
      }
      if (Unroll != false) {
        size += 1 + 1;
      }
      if (Implementation != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Implementation);
      }
      if (weightsInput_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WeightsInput);
      }
      if (weightsForget_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(WeightsForget);
      }
      if (weightsCell_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(WeightsCell);
      }
      if (weightsOutput_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(WeightsOutput);
      }
      if (biasInput_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BiasInput);
      }
      if (biasForget_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BiasForget);
      }
      if (biasCell_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BiasCell);
      }
      if (biasOutput_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BiasOutput);
      }
      if (recurrentWeightsInput_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RecurrentWeightsInput);
      }
      if (recurrentWeightsForget_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RecurrentWeightsForget);
      }
      if (recurrentWeightsCell_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RecurrentWeightsCell);
      }
      if (recurrentWeightsOutput_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RecurrentWeightsOutput);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LSTMParameter other) {
      if (other == null) {
        return;
      }
      if (other.Units != 0) {
        Units = other.Units;
      }
      if (other.ReturnSequences != false) {
        ReturnSequences = other.ReturnSequences;
      }
      if (other.Stateful != false) {
        Stateful = other.Stateful;
      }
      if (other.Activation.Length != 0) {
        Activation = other.Activation;
      }
      if (other.RecurrentActivation.Length != 0) {
        RecurrentActivation = other.RecurrentActivation;
      }
      if (other.UseBias != false) {
        UseBias = other.UseBias;
      }
      if (other.UnitForgetBias != false) {
        UnitForgetBias = other.UnitForgetBias;
      }
      if (other.GoBackwards != false) {
        GoBackwards = other.GoBackwards;
      }
      if (other.Unroll != false) {
        Unroll = other.Unroll;
      }
      if (other.Implementation != 0) {
        Implementation = other.Implementation;
      }
      if (other.weightsInput_ != null) {
        if (weightsInput_ == null) {
          weightsInput_ = new global::Apollo.Prediction.TensorParameter();
        }
        WeightsInput.MergeFrom(other.WeightsInput);
      }
      if (other.weightsForget_ != null) {
        if (weightsForget_ == null) {
          weightsForget_ = new global::Apollo.Prediction.TensorParameter();
        }
        WeightsForget.MergeFrom(other.WeightsForget);
      }
      if (other.weightsCell_ != null) {
        if (weightsCell_ == null) {
          weightsCell_ = new global::Apollo.Prediction.TensorParameter();
        }
        WeightsCell.MergeFrom(other.WeightsCell);
      }
      if (other.weightsOutput_ != null) {
        if (weightsOutput_ == null) {
          weightsOutput_ = new global::Apollo.Prediction.TensorParameter();
        }
        WeightsOutput.MergeFrom(other.WeightsOutput);
      }
      if (other.biasInput_ != null) {
        if (biasInput_ == null) {
          biasInput_ = new global::Apollo.Prediction.TensorParameter();
        }
        BiasInput.MergeFrom(other.BiasInput);
      }
      if (other.biasForget_ != null) {
        if (biasForget_ == null) {
          biasForget_ = new global::Apollo.Prediction.TensorParameter();
        }
        BiasForget.MergeFrom(other.BiasForget);
      }
      if (other.biasCell_ != null) {
        if (biasCell_ == null) {
          biasCell_ = new global::Apollo.Prediction.TensorParameter();
        }
        BiasCell.MergeFrom(other.BiasCell);
      }
      if (other.biasOutput_ != null) {
        if (biasOutput_ == null) {
          biasOutput_ = new global::Apollo.Prediction.TensorParameter();
        }
        BiasOutput.MergeFrom(other.BiasOutput);
      }
      if (other.recurrentWeightsInput_ != null) {
        if (recurrentWeightsInput_ == null) {
          recurrentWeightsInput_ = new global::Apollo.Prediction.TensorParameter();
        }
        RecurrentWeightsInput.MergeFrom(other.RecurrentWeightsInput);
      }
      if (other.recurrentWeightsForget_ != null) {
        if (recurrentWeightsForget_ == null) {
          recurrentWeightsForget_ = new global::Apollo.Prediction.TensorParameter();
        }
        RecurrentWeightsForget.MergeFrom(other.RecurrentWeightsForget);
      }
      if (other.recurrentWeightsCell_ != null) {
        if (recurrentWeightsCell_ == null) {
          recurrentWeightsCell_ = new global::Apollo.Prediction.TensorParameter();
        }
        RecurrentWeightsCell.MergeFrom(other.RecurrentWeightsCell);
      }
      if (other.recurrentWeightsOutput_ != null) {
        if (recurrentWeightsOutput_ == null) {
          recurrentWeightsOutput_ = new global::Apollo.Prediction.TensorParameter();
        }
        RecurrentWeightsOutput.MergeFrom(other.RecurrentWeightsOutput);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Units = input.ReadInt32();
            break;
          }
          case 16: {
            ReturnSequences = input.ReadBool();
            break;
          }
          case 24: {
            Stateful = input.ReadBool();
            break;
          }
          case 34: {
            Activation = input.ReadString();
            break;
          }
          case 42: {
            RecurrentActivation = input.ReadString();
            break;
          }
          case 48: {
            UseBias = input.ReadBool();
            break;
          }
          case 56: {
            UnitForgetBias = input.ReadBool();
            break;
          }
          case 64: {
            GoBackwards = input.ReadBool();
            break;
          }
          case 72: {
            Unroll = input.ReadBool();
            break;
          }
          case 80: {
            Implementation = input.ReadInt32();
            break;
          }
          case 122: {
            if (weightsInput_ == null) {
              weightsInput_ = new global::Apollo.Prediction.TensorParameter();
            }
            input.ReadMessage(weightsInput_);
            break;
          }
          case 130: {
            if (weightsForget_ == null) {
              weightsForget_ = new global::Apollo.Prediction.TensorParameter();
            }
            input.ReadMessage(weightsForget_);
            break;
          }
          case 138: {
            if (weightsCell_ == null) {
              weightsCell_ = new global::Apollo.Prediction.TensorParameter();
            }
            input.ReadMessage(weightsCell_);
            break;
          }
          case 146: {
            if (weightsOutput_ == null) {
              weightsOutput_ = new global::Apollo.Prediction.TensorParameter();
            }
            input.ReadMessage(weightsOutput_);
            break;
          }
          case 154: {
            if (biasInput_ == null) {
              biasInput_ = new global::Apollo.Prediction.TensorParameter();
            }
            input.ReadMessage(biasInput_);
            break;
          }
          case 162: {
            if (biasForget_ == null) {
              biasForget_ = new global::Apollo.Prediction.TensorParameter();
            }
            input.ReadMessage(biasForget_);
            break;
          }
          case 170: {
            if (biasCell_ == null) {
              biasCell_ = new global::Apollo.Prediction.TensorParameter();
            }
            input.ReadMessage(biasCell_);
            break;
          }
          case 178: {
            if (biasOutput_ == null) {
              biasOutput_ = new global::Apollo.Prediction.TensorParameter();
            }
            input.ReadMessage(biasOutput_);
            break;
          }
          case 202: {
            if (recurrentWeightsInput_ == null) {
              recurrentWeightsInput_ = new global::Apollo.Prediction.TensorParameter();
            }
            input.ReadMessage(recurrentWeightsInput_);
            break;
          }
          case 210: {
            if (recurrentWeightsForget_ == null) {
              recurrentWeightsForget_ = new global::Apollo.Prediction.TensorParameter();
            }
            input.ReadMessage(recurrentWeightsForget_);
            break;
          }
          case 218: {
            if (recurrentWeightsCell_ == null) {
              recurrentWeightsCell_ = new global::Apollo.Prediction.TensorParameter();
            }
            input.ReadMessage(recurrentWeightsCell_);
            break;
          }
          case 226: {
            if (recurrentWeightsOutput_ == null) {
              recurrentWeightsOutput_ = new global::Apollo.Prediction.TensorParameter();
            }
            input.ReadMessage(recurrentWeightsOutput_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ActivationParameter : pb::IMessage<ActivationParameter> {
    private static readonly pb::MessageParser<ActivationParameter> _parser = new pb::MessageParser<ActivationParameter>(() => new ActivationParameter());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivationParameter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Prediction.NetworkLayersReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivationParameter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivationParameter(ActivationParameter other) : this() {
      activation_ = other.activation_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivationParameter Clone() {
      return new ActivationParameter(this);
    }

    /// <summary>Field number for the "activation" field.</summary>
    public const int ActivationFieldNumber = 1;
    private string activation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Activation {
      get { return activation_; }
      set {
        activation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivationParameter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivationParameter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Activation != other.Activation) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Activation.Length != 0) hash ^= Activation.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Activation.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Activation);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Activation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Activation);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivationParameter other) {
      if (other == null) {
        return;
      }
      if (other.Activation.Length != 0) {
        Activation = other.Activation;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Activation = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FlattenParameter : pb::IMessage<FlattenParameter> {
    private static readonly pb::MessageParser<FlattenParameter> _parser = new pb::MessageParser<FlattenParameter>(() => new FlattenParameter());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FlattenParameter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Prediction.NetworkLayersReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlattenParameter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlattenParameter(FlattenParameter other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlattenParameter Clone() {
      return new FlattenParameter(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FlattenParameter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FlattenParameter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FlattenParameter other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class ConcatenateParameter : pb::IMessage<ConcatenateParameter> {
    private static readonly pb::MessageParser<ConcatenateParameter> _parser = new pb::MessageParser<ConcatenateParameter>(() => new ConcatenateParameter());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConcatenateParameter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Prediction.NetworkLayersReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConcatenateParameter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConcatenateParameter(ConcatenateParameter other) : this() {
      axis_ = other.axis_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConcatenateParameter Clone() {
      return new ConcatenateParameter(this);
    }

    /// <summary>Field number for the "axis" field.</summary>
    public const int AxisFieldNumber = 1;
    private int axis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Axis {
      get { return axis_; }
      set {
        axis_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConcatenateParameter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConcatenateParameter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Axis != other.Axis) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Axis != 0) hash ^= Axis.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Axis != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Axis);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Axis != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Axis);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConcatenateParameter other) {
      if (other == null) {
        return;
      }
      if (other.Axis != 0) {
        Axis = other.Axis;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Axis = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LayerParameter : pb::IMessage<LayerParameter> {
    private static readonly pb::MessageParser<LayerParameter> _parser = new pb::MessageParser<LayerParameter>(() => new LayerParameter());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LayerParameter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Prediction.NetworkLayersReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LayerParameter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LayerParameter(LayerParameter other) : this() {
      type_ = other.type_;
      name_ = other.name_;
      orderNumber_ = other.orderNumber_;
      switch (other.OneofLayersCase) {
        case OneofLayersOneofCase.Input:
          Input = other.Input.Clone();
          break;
        case OneofLayersOneofCase.Activation:
          Activation = other.Activation.Clone();
          break;
        case OneofLayersOneofCase.Dense:
          Dense = other.Dense.Clone();
          break;
        case OneofLayersOneofCase.BatchNormalization:
          BatchNormalization = other.BatchNormalization.Clone();
          break;
        case OneofLayersOneofCase.Lstm:
          Lstm = other.Lstm.Clone();
          break;
        case OneofLayersOneofCase.Flatten:
          Flatten = other.Flatten.Clone();
          break;
        case OneofLayersOneofCase.Concatenate:
          Concatenate = other.Concatenate.Clone();
          break;
        case OneofLayersOneofCase.Conv1D:
          Conv1D = other.Conv1D.Clone();
          break;
        case OneofLayersOneofCase.Maxpool1D:
          Maxpool1D = other.Maxpool1D.Clone();
          break;
        case OneofLayersOneofCase.Avgpool1D:
          Avgpool1D = other.Avgpool1D.Clone();
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LayerParameter Clone() {
      return new LayerParameter(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_number" field.</summary>
    public const int OrderNumberFieldNumber = 3;
    private int orderNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OrderNumber {
      get { return orderNumber_; }
      set {
        orderNumber_ = value;
      }
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.InputParameter Input {
      get { return oneofLayersCase_ == OneofLayersOneofCase.Input ? (global::Apollo.Prediction.InputParameter) oneofLayers_ : null; }
      set {
        oneofLayers_ = value;
        oneofLayersCase_ = value == null ? OneofLayersOneofCase.None : OneofLayersOneofCase.Input;
      }
    }

    /// <summary>Field number for the "activation" field.</summary>
    public const int ActivationFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.ActivationParameter Activation {
      get { return oneofLayersCase_ == OneofLayersOneofCase.Activation ? (global::Apollo.Prediction.ActivationParameter) oneofLayers_ : null; }
      set {
        oneofLayers_ = value;
        oneofLayersCase_ = value == null ? OneofLayersOneofCase.None : OneofLayersOneofCase.Activation;
      }
    }

    /// <summary>Field number for the "dense" field.</summary>
    public const int DenseFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.DenseParameter Dense {
      get { return oneofLayersCase_ == OneofLayersOneofCase.Dense ? (global::Apollo.Prediction.DenseParameter) oneofLayers_ : null; }
      set {
        oneofLayers_ = value;
        oneofLayersCase_ = value == null ? OneofLayersOneofCase.None : OneofLayersOneofCase.Dense;
      }
    }

    /// <summary>Field number for the "batch_normalization" field.</summary>
    public const int BatchNormalizationFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.BatchNormalizationParameter BatchNormalization {
      get { return oneofLayersCase_ == OneofLayersOneofCase.BatchNormalization ? (global::Apollo.Prediction.BatchNormalizationParameter) oneofLayers_ : null; }
      set {
        oneofLayers_ = value;
        oneofLayersCase_ = value == null ? OneofLayersOneofCase.None : OneofLayersOneofCase.BatchNormalization;
      }
    }

    /// <summary>Field number for the "lstm" field.</summary>
    public const int LstmFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.LSTMParameter Lstm {
      get { return oneofLayersCase_ == OneofLayersOneofCase.Lstm ? (global::Apollo.Prediction.LSTMParameter) oneofLayers_ : null; }
      set {
        oneofLayers_ = value;
        oneofLayersCase_ = value == null ? OneofLayersOneofCase.None : OneofLayersOneofCase.Lstm;
      }
    }

    /// <summary>Field number for the "flatten" field.</summary>
    public const int FlattenFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.FlattenParameter Flatten {
      get { return oneofLayersCase_ == OneofLayersOneofCase.Flatten ? (global::Apollo.Prediction.FlattenParameter) oneofLayers_ : null; }
      set {
        oneofLayers_ = value;
        oneofLayersCase_ = value == null ? OneofLayersOneofCase.None : OneofLayersOneofCase.Flatten;
      }
    }

    /// <summary>Field number for the "concatenate" field.</summary>
    public const int ConcatenateFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.ConcatenateParameter Concatenate {
      get { return oneofLayersCase_ == OneofLayersOneofCase.Concatenate ? (global::Apollo.Prediction.ConcatenateParameter) oneofLayers_ : null; }
      set {
        oneofLayers_ = value;
        oneofLayersCase_ = value == null ? OneofLayersOneofCase.None : OneofLayersOneofCase.Concatenate;
      }
    }

    /// <summary>Field number for the "conv1d" field.</summary>
    public const int Conv1DFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.Conv1dParameter Conv1D {
      get { return oneofLayersCase_ == OneofLayersOneofCase.Conv1D ? (global::Apollo.Prediction.Conv1dParameter) oneofLayers_ : null; }
      set {
        oneofLayers_ = value;
        oneofLayersCase_ = value == null ? OneofLayersOneofCase.None : OneofLayersOneofCase.Conv1D;
      }
    }

    /// <summary>Field number for the "maxpool1d" field.</summary>
    public const int Maxpool1DFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.MaxPool1dParameter Maxpool1D {
      get { return oneofLayersCase_ == OneofLayersOneofCase.Maxpool1D ? (global::Apollo.Prediction.MaxPool1dParameter) oneofLayers_ : null; }
      set {
        oneofLayers_ = value;
        oneofLayersCase_ = value == null ? OneofLayersOneofCase.None : OneofLayersOneofCase.Maxpool1D;
      }
    }

    /// <summary>Field number for the "avgpool1d" field.</summary>
    public const int Avgpool1DFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.AvgPool1dParameter Avgpool1D {
      get { return oneofLayersCase_ == OneofLayersOneofCase.Avgpool1D ? (global::Apollo.Prediction.AvgPool1dParameter) oneofLayers_ : null; }
      set {
        oneofLayers_ = value;
        oneofLayersCase_ = value == null ? OneofLayersOneofCase.None : OneofLayersOneofCase.Avgpool1D;
      }
    }

    private object oneofLayers_;
    /// <summary>Enum of possible cases for the "oneof_layers" oneof.</summary>
    public enum OneofLayersOneofCase {
      None = 0,
      Input = 4,
      Activation = 5,
      Dense = 6,
      BatchNormalization = 7,
      Lstm = 8,
      Flatten = 9,
      Concatenate = 10,
      Conv1D = 11,
      Maxpool1D = 12,
      Avgpool1D = 13,
    }
    private OneofLayersOneofCase oneofLayersCase_ = OneofLayersOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneofLayersOneofCase OneofLayersCase {
      get { return oneofLayersCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOneofLayers() {
      oneofLayersCase_ = OneofLayersOneofCase.None;
      oneofLayers_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LayerParameter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LayerParameter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Name != other.Name) return false;
      if (OrderNumber != other.OrderNumber) return false;
      if (!object.Equals(Input, other.Input)) return false;
      if (!object.Equals(Activation, other.Activation)) return false;
      if (!object.Equals(Dense, other.Dense)) return false;
      if (!object.Equals(BatchNormalization, other.BatchNormalization)) return false;
      if (!object.Equals(Lstm, other.Lstm)) return false;
      if (!object.Equals(Flatten, other.Flatten)) return false;
      if (!object.Equals(Concatenate, other.Concatenate)) return false;
      if (!object.Equals(Conv1D, other.Conv1D)) return false;
      if (!object.Equals(Maxpool1D, other.Maxpool1D)) return false;
      if (!object.Equals(Avgpool1D, other.Avgpool1D)) return false;
      if (OneofLayersCase != other.OneofLayersCase) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (OrderNumber != 0) hash ^= OrderNumber.GetHashCode();
      if (oneofLayersCase_ == OneofLayersOneofCase.Input) hash ^= Input.GetHashCode();
      if (oneofLayersCase_ == OneofLayersOneofCase.Activation) hash ^= Activation.GetHashCode();
      if (oneofLayersCase_ == OneofLayersOneofCase.Dense) hash ^= Dense.GetHashCode();
      if (oneofLayersCase_ == OneofLayersOneofCase.BatchNormalization) hash ^= BatchNormalization.GetHashCode();
      if (oneofLayersCase_ == OneofLayersOneofCase.Lstm) hash ^= Lstm.GetHashCode();
      if (oneofLayersCase_ == OneofLayersOneofCase.Flatten) hash ^= Flatten.GetHashCode();
      if (oneofLayersCase_ == OneofLayersOneofCase.Concatenate) hash ^= Concatenate.GetHashCode();
      if (oneofLayersCase_ == OneofLayersOneofCase.Conv1D) hash ^= Conv1D.GetHashCode();
      if (oneofLayersCase_ == OneofLayersOneofCase.Maxpool1D) hash ^= Maxpool1D.GetHashCode();
      if (oneofLayersCase_ == OneofLayersOneofCase.Avgpool1D) hash ^= Avgpool1D.GetHashCode();
      hash ^= (int) oneofLayersCase_;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (OrderNumber != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(OrderNumber);
      }
      if (oneofLayersCase_ == OneofLayersOneofCase.Input) {
        output.WriteRawTag(34);
        output.WriteMessage(Input);
      }
      if (oneofLayersCase_ == OneofLayersOneofCase.Activation) {
        output.WriteRawTag(42);
        output.WriteMessage(Activation);
      }
      if (oneofLayersCase_ == OneofLayersOneofCase.Dense) {
        output.WriteRawTag(50);
        output.WriteMessage(Dense);
      }
      if (oneofLayersCase_ == OneofLayersOneofCase.BatchNormalization) {
        output.WriteRawTag(58);
        output.WriteMessage(BatchNormalization);
      }
      if (oneofLayersCase_ == OneofLayersOneofCase.Lstm) {
        output.WriteRawTag(66);
        output.WriteMessage(Lstm);
      }
      if (oneofLayersCase_ == OneofLayersOneofCase.Flatten) {
        output.WriteRawTag(74);
        output.WriteMessage(Flatten);
      }
      if (oneofLayersCase_ == OneofLayersOneofCase.Concatenate) {
        output.WriteRawTag(82);
        output.WriteMessage(Concatenate);
      }
      if (oneofLayersCase_ == OneofLayersOneofCase.Conv1D) {
        output.WriteRawTag(90);
        output.WriteMessage(Conv1D);
      }
      if (oneofLayersCase_ == OneofLayersOneofCase.Maxpool1D) {
        output.WriteRawTag(98);
        output.WriteMessage(Maxpool1D);
      }
      if (oneofLayersCase_ == OneofLayersOneofCase.Avgpool1D) {
        output.WriteRawTag(106);
        output.WriteMessage(Avgpool1D);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (OrderNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrderNumber);
      }
      if (oneofLayersCase_ == OneofLayersOneofCase.Input) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Input);
      }
      if (oneofLayersCase_ == OneofLayersOneofCase.Activation) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Activation);
      }
      if (oneofLayersCase_ == OneofLayersOneofCase.Dense) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dense);
      }
      if (oneofLayersCase_ == OneofLayersOneofCase.BatchNormalization) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BatchNormalization);
      }
      if (oneofLayersCase_ == OneofLayersOneofCase.Lstm) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Lstm);
      }
      if (oneofLayersCase_ == OneofLayersOneofCase.Flatten) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Flatten);
      }
      if (oneofLayersCase_ == OneofLayersOneofCase.Concatenate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Concatenate);
      }
      if (oneofLayersCase_ == OneofLayersOneofCase.Conv1D) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Conv1D);
      }
      if (oneofLayersCase_ == OneofLayersOneofCase.Maxpool1D) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Maxpool1D);
      }
      if (oneofLayersCase_ == OneofLayersOneofCase.Avgpool1D) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Avgpool1D);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LayerParameter other) {
      if (other == null) {
        return;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.OrderNumber != 0) {
        OrderNumber = other.OrderNumber;
      }
      switch (other.OneofLayersCase) {
        case OneofLayersOneofCase.Input:
          Input = other.Input;
          break;
        case OneofLayersOneofCase.Activation:
          Activation = other.Activation;
          break;
        case OneofLayersOneofCase.Dense:
          Dense = other.Dense;
          break;
        case OneofLayersOneofCase.BatchNormalization:
          BatchNormalization = other.BatchNormalization;
          break;
        case OneofLayersOneofCase.Lstm:
          Lstm = other.Lstm;
          break;
        case OneofLayersOneofCase.Flatten:
          Flatten = other.Flatten;
          break;
        case OneofLayersOneofCase.Concatenate:
          Concatenate = other.Concatenate;
          break;
        case OneofLayersOneofCase.Conv1D:
          Conv1D = other.Conv1D;
          break;
        case OneofLayersOneofCase.Maxpool1D:
          Maxpool1D = other.Maxpool1D;
          break;
        case OneofLayersOneofCase.Avgpool1D:
          Avgpool1D = other.Avgpool1D;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            OrderNumber = input.ReadInt32();
            break;
          }
          case 34: {
            global::Apollo.Prediction.InputParameter subBuilder = new global::Apollo.Prediction.InputParameter();
            if (oneofLayersCase_ == OneofLayersOneofCase.Input) {
              subBuilder.MergeFrom(Input);
            }
            input.ReadMessage(subBuilder);
            Input = subBuilder;
            break;
          }
          case 42: {
            global::Apollo.Prediction.ActivationParameter subBuilder = new global::Apollo.Prediction.ActivationParameter();
            if (oneofLayersCase_ == OneofLayersOneofCase.Activation) {
              subBuilder.MergeFrom(Activation);
            }
            input.ReadMessage(subBuilder);
            Activation = subBuilder;
            break;
          }
          case 50: {
            global::Apollo.Prediction.DenseParameter subBuilder = new global::Apollo.Prediction.DenseParameter();
            if (oneofLayersCase_ == OneofLayersOneofCase.Dense) {
              subBuilder.MergeFrom(Dense);
            }
            input.ReadMessage(subBuilder);
            Dense = subBuilder;
            break;
          }
          case 58: {
            global::Apollo.Prediction.BatchNormalizationParameter subBuilder = new global::Apollo.Prediction.BatchNormalizationParameter();
            if (oneofLayersCase_ == OneofLayersOneofCase.BatchNormalization) {
              subBuilder.MergeFrom(BatchNormalization);
            }
            input.ReadMessage(subBuilder);
            BatchNormalization = subBuilder;
            break;
          }
          case 66: {
            global::Apollo.Prediction.LSTMParameter subBuilder = new global::Apollo.Prediction.LSTMParameter();
            if (oneofLayersCase_ == OneofLayersOneofCase.Lstm) {
              subBuilder.MergeFrom(Lstm);
            }
            input.ReadMessage(subBuilder);
            Lstm = subBuilder;
            break;
          }
          case 74: {
            global::Apollo.Prediction.FlattenParameter subBuilder = new global::Apollo.Prediction.FlattenParameter();
            if (oneofLayersCase_ == OneofLayersOneofCase.Flatten) {
              subBuilder.MergeFrom(Flatten);
            }
            input.ReadMessage(subBuilder);
            Flatten = subBuilder;
            break;
          }
          case 82: {
            global::Apollo.Prediction.ConcatenateParameter subBuilder = new global::Apollo.Prediction.ConcatenateParameter();
            if (oneofLayersCase_ == OneofLayersOneofCase.Concatenate) {
              subBuilder.MergeFrom(Concatenate);
            }
            input.ReadMessage(subBuilder);
            Concatenate = subBuilder;
            break;
          }
          case 90: {
            global::Apollo.Prediction.Conv1dParameter subBuilder = new global::Apollo.Prediction.Conv1dParameter();
            if (oneofLayersCase_ == OneofLayersOneofCase.Conv1D) {
              subBuilder.MergeFrom(Conv1D);
            }
            input.ReadMessage(subBuilder);
            Conv1D = subBuilder;
            break;
          }
          case 98: {
            global::Apollo.Prediction.MaxPool1dParameter subBuilder = new global::Apollo.Prediction.MaxPool1dParameter();
            if (oneofLayersCase_ == OneofLayersOneofCase.Maxpool1D) {
              subBuilder.MergeFrom(Maxpool1D);
            }
            input.ReadMessage(subBuilder);
            Maxpool1D = subBuilder;
            break;
          }
          case 106: {
            global::Apollo.Prediction.AvgPool1dParameter subBuilder = new global::Apollo.Prediction.AvgPool1dParameter();
            if (oneofLayersCase_ == OneofLayersOneofCase.Avgpool1D) {
              subBuilder.MergeFrom(Avgpool1D);
            }
            input.ReadMessage(subBuilder);
            Avgpool1D = subBuilder;
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
