// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/planning/proto/planning_stats.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Apollo.Planning {

  /// <summary>Holder for reflection information generated from modules/planning/proto/planning_stats.proto</summary>
  public static partial class PlanningStatsReflection {

    #region Descriptor
    /// <summary>File descriptor for modules/planning/proto/planning_stats.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PlanningStatsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cittb2R1bGVzL3BsYW5uaW5nL3Byb3RvL3BsYW5uaW5nX3N0YXRzLnByb3Rv",
            "Eg9hcG9sbG8ucGxhbm5pbmciTQoKU3RhdHNHcm91cBILCgNtYXgYASABKAES",
            "CwoDbWluGAIgASgBEgsKA3N1bRgDIAEoARILCgNhdmcYBCABKAESCwoDbnVt",
            "GAUgASgFIqYCCg1QbGFubmluZ1N0YXRzEjYKEXRvdGFsX3BhdGhfbGVuZ3Ro",
            "GAEgASgLMhsuYXBvbGxvLnBsYW5uaW5nLlN0YXRzR3JvdXASNAoPdG90YWxf",
            "cGF0aF90aW1lGAIgASgLMhsuYXBvbGxvLnBsYW5uaW5nLlN0YXRzR3JvdXAS",
            "JgoBdhgDIAEoCzIbLmFwb2xsby5wbGFubmluZy5TdGF0c0dyb3VwEiYKAWEY",
            "BCABKAsyGy5hcG9sbG8ucGxhbm5pbmcuU3RhdHNHcm91cBIqCgVrYXBwYRgF",
            "IAEoCzIbLmFwb2xsby5wbGFubmluZy5TdGF0c0dyb3VwEisKBmRrYXBwYRgG",
            "IAEoCzIbLmFwb2xsby5wbGFubmluZy5TdGF0c0dyb3VwYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Planning.StatsGroup), global::Apollo.Planning.StatsGroup.Parser, new[]{ "Max", "Min", "Sum", "Avg", "Num" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Planning.PlanningStats), global::Apollo.Planning.PlanningStats.Parser, new[]{ "TotalPathLength", "TotalPathTime", "V", "A", "Kappa", "Dkappa" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class StatsGroup : pb::IMessage<StatsGroup> {
    private static readonly pb::MessageParser<StatsGroup> _parser = new pb::MessageParser<StatsGroup>(() => new StatsGroup());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StatsGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Planning.PlanningStatsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatsGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatsGroup(StatsGroup other) : this() {
      max_ = other.max_;
      min_ = other.min_;
      sum_ = other.sum_;
      avg_ = other.avg_;
      num_ = other.num_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatsGroup Clone() {
      return new StatsGroup(this);
    }

    /// <summary>Field number for the "max" field.</summary>
    public const int MaxFieldNumber = 1;
    private double max_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Max {
      get { return max_; }
      set {
        max_ = value;
      }
    }

    /// <summary>Field number for the "min" field.</summary>
    public const int MinFieldNumber = 2;
    private double min_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Min {
      get { return min_; }
      set {
        min_ = value;
      }
    }

    /// <summary>Field number for the "sum" field.</summary>
    public const int SumFieldNumber = 3;
    private double sum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Sum {
      get { return sum_; }
      set {
        sum_ = value;
      }
    }

    /// <summary>Field number for the "avg" field.</summary>
    public const int AvgFieldNumber = 4;
    private double avg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Avg {
      get { return avg_; }
      set {
        avg_ = value;
      }
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 5;
    private int num_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StatsGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StatsGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Max != other.Max) return false;
      if (Min != other.Min) return false;
      if (Sum != other.Sum) return false;
      if (Avg != other.Avg) return false;
      if (Num != other.Num) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Max != 0D) hash ^= Max.GetHashCode();
      if (Min != 0D) hash ^= Min.GetHashCode();
      if (Sum != 0D) hash ^= Sum.GetHashCode();
      if (Avg != 0D) hash ^= Avg.GetHashCode();
      if (Num != 0) hash ^= Num.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Max != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Max);
      }
      if (Min != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Min);
      }
      if (Sum != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Sum);
      }
      if (Avg != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Avg);
      }
      if (Num != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Num);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Max != 0D) {
        size += 1 + 8;
      }
      if (Min != 0D) {
        size += 1 + 8;
      }
      if (Sum != 0D) {
        size += 1 + 8;
      }
      if (Avg != 0D) {
        size += 1 + 8;
      }
      if (Num != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StatsGroup other) {
      if (other == null) {
        return;
      }
      if (other.Max != 0D) {
        Max = other.Max;
      }
      if (other.Min != 0D) {
        Min = other.Min;
      }
      if (other.Sum != 0D) {
        Sum = other.Sum;
      }
      if (other.Avg != 0D) {
        Avg = other.Avg;
      }
      if (other.Num != 0) {
        Num = other.Num;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 9: {
            Max = input.ReadDouble();
            break;
          }
          case 17: {
            Min = input.ReadDouble();
            break;
          }
          case 25: {
            Sum = input.ReadDouble();
            break;
          }
          case 33: {
            Avg = input.ReadDouble();
            break;
          }
          case 40: {
            Num = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlanningStats : pb::IMessage<PlanningStats> {
    private static readonly pb::MessageParser<PlanningStats> _parser = new pb::MessageParser<PlanningStats>(() => new PlanningStats());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlanningStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Planning.PlanningStatsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlanningStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlanningStats(PlanningStats other) : this() {
      TotalPathLength = other.totalPathLength_ != null ? other.TotalPathLength.Clone() : null;
      TotalPathTime = other.totalPathTime_ != null ? other.TotalPathTime.Clone() : null;
      V = other.v_ != null ? other.V.Clone() : null;
      A = other.a_ != null ? other.A.Clone() : null;
      Kappa = other.kappa_ != null ? other.Kappa.Clone() : null;
      Dkappa = other.dkappa_ != null ? other.Dkappa.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlanningStats Clone() {
      return new PlanningStats(this);
    }

    /// <summary>Field number for the "total_path_length" field.</summary>
    public const int TotalPathLengthFieldNumber = 1;
    private global::Apollo.Planning.StatsGroup totalPathLength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Planning.StatsGroup TotalPathLength {
      get { return totalPathLength_; }
      set {
        totalPathLength_ = value;
      }
    }

    /// <summary>Field number for the "total_path_time" field.</summary>
    public const int TotalPathTimeFieldNumber = 2;
    private global::Apollo.Planning.StatsGroup totalPathTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Planning.StatsGroup TotalPathTime {
      get { return totalPathTime_; }
      set {
        totalPathTime_ = value;
      }
    }

    /// <summary>Field number for the "v" field.</summary>
    public const int VFieldNumber = 3;
    private global::Apollo.Planning.StatsGroup v_;
    /// <summary>
    /// linear velocity
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Planning.StatsGroup V {
      get { return v_; }
      set {
        v_ = value;
      }
    }

    /// <summary>Field number for the "a" field.</summary>
    public const int AFieldNumber = 4;
    private global::Apollo.Planning.StatsGroup a_;
    /// <summary>
    /// acceleration
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Planning.StatsGroup A {
      get { return a_; }
      set {
        a_ = value;
      }
    }

    /// <summary>Field number for the "kappa" field.</summary>
    public const int KappaFieldNumber = 5;
    private global::Apollo.Planning.StatsGroup kappa_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Planning.StatsGroup Kappa {
      get { return kappa_; }
      set {
        kappa_ = value;
      }
    }

    /// <summary>Field number for the "dkappa" field.</summary>
    public const int DkappaFieldNumber = 6;
    private global::Apollo.Planning.StatsGroup dkappa_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Planning.StatsGroup Dkappa {
      get { return dkappa_; }
      set {
        dkappa_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlanningStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlanningStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TotalPathLength, other.TotalPathLength)) return false;
      if (!object.Equals(TotalPathTime, other.TotalPathTime)) return false;
      if (!object.Equals(V, other.V)) return false;
      if (!object.Equals(A, other.A)) return false;
      if (!object.Equals(Kappa, other.Kappa)) return false;
      if (!object.Equals(Dkappa, other.Dkappa)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (totalPathLength_ != null) hash ^= TotalPathLength.GetHashCode();
      if (totalPathTime_ != null) hash ^= TotalPathTime.GetHashCode();
      if (v_ != null) hash ^= V.GetHashCode();
      if (a_ != null) hash ^= A.GetHashCode();
      if (kappa_ != null) hash ^= Kappa.GetHashCode();
      if (dkappa_ != null) hash ^= Dkappa.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (totalPathLength_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TotalPathLength);
      }
      if (totalPathTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TotalPathTime);
      }
      if (v_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(V);
      }
      if (a_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(A);
      }
      if (kappa_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Kappa);
      }
      if (dkappa_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Dkappa);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (totalPathLength_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TotalPathLength);
      }
      if (totalPathTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TotalPathTime);
      }
      if (v_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(V);
      }
      if (a_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(A);
      }
      if (kappa_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Kappa);
      }
      if (dkappa_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dkappa);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlanningStats other) {
      if (other == null) {
        return;
      }
      if (other.totalPathLength_ != null) {
        if (totalPathLength_ == null) {
          totalPathLength_ = new global::Apollo.Planning.StatsGroup();
        }
        TotalPathLength.MergeFrom(other.TotalPathLength);
      }
      if (other.totalPathTime_ != null) {
        if (totalPathTime_ == null) {
          totalPathTime_ = new global::Apollo.Planning.StatsGroup();
        }
        TotalPathTime.MergeFrom(other.TotalPathTime);
      }
      if (other.v_ != null) {
        if (v_ == null) {
          v_ = new global::Apollo.Planning.StatsGroup();
        }
        V.MergeFrom(other.V);
      }
      if (other.a_ != null) {
        if (a_ == null) {
          a_ = new global::Apollo.Planning.StatsGroup();
        }
        A.MergeFrom(other.A);
      }
      if (other.kappa_ != null) {
        if (kappa_ == null) {
          kappa_ = new global::Apollo.Planning.StatsGroup();
        }
        Kappa.MergeFrom(other.Kappa);
      }
      if (other.dkappa_ != null) {
        if (dkappa_ == null) {
          dkappa_ = new global::Apollo.Planning.StatsGroup();
        }
        Dkappa.MergeFrom(other.Dkappa);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (totalPathLength_ == null) {
              totalPathLength_ = new global::Apollo.Planning.StatsGroup();
            }
            input.ReadMessage(totalPathLength_);
            break;
          }
          case 18: {
            if (totalPathTime_ == null) {
              totalPathTime_ = new global::Apollo.Planning.StatsGroup();
            }
            input.ReadMessage(totalPathTime_);
            break;
          }
          case 26: {
            if (v_ == null) {
              v_ = new global::Apollo.Planning.StatsGroup();
            }
            input.ReadMessage(v_);
            break;
          }
          case 34: {
            if (a_ == null) {
              a_ = new global::Apollo.Planning.StatsGroup();
            }
            input.ReadMessage(a_);
            break;
          }
          case 42: {
            if (kappa_ == null) {
              kappa_ = new global::Apollo.Planning.StatsGroup();
            }
            input.ReadMessage(kappa_);
            break;
          }
          case 50: {
            if (dkappa_ == null) {
              dkappa_ = new global::Apollo.Planning.StatsGroup();
            }
            input.ReadMessage(dkappa_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
