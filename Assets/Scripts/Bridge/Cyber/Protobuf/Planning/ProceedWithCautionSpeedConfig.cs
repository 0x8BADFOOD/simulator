// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/planning/proto/proceed_with_caution_speed_config.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Apollo.Planning {

  /// <summary>Holder for reflection information generated from modules/planning/proto/proceed_with_caution_speed_config.proto</summary>
  public static partial class ProceedWithCautionSpeedConfigReflection {

    #region Descriptor
    /// <summary>File descriptor for modules/planning/proto/proceed_with_caution_speed_config.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProceedWithCautionSpeedConfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cj5tb2R1bGVzL3BsYW5uaW5nL3Byb3RvL3Byb2NlZWRfd2l0aF9jYXV0aW9u",
            "X3NwZWVkX2NvbmZpZy5wcm90bxIPYXBvbGxvLnBsYW5uaW5nIjUKHVByb2Nl",
            "ZWRXaXRoQ2F1dGlvblNwZWVkQ29uZmlnEhQKDG1heF9kaXN0YW5jZRgBIAEo",
            "AWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Planning.ProceedWithCautionSpeedConfig), global::Apollo.Planning.ProceedWithCautionSpeedConfig.Parser, new[]{ "MaxDistance" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ProceedWithCautionSpeedConfig : pb::IMessage<ProceedWithCautionSpeedConfig> {
    private static readonly pb::MessageParser<ProceedWithCautionSpeedConfig> _parser = new pb::MessageParser<ProceedWithCautionSpeedConfig>(() => new ProceedWithCautionSpeedConfig());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProceedWithCautionSpeedConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Planning.ProceedWithCautionSpeedConfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProceedWithCautionSpeedConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProceedWithCautionSpeedConfig(ProceedWithCautionSpeedConfig other) : this() {
      maxDistance_ = other.maxDistance_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProceedWithCautionSpeedConfig Clone() {
      return new ProceedWithCautionSpeedConfig(this);
    }

    /// <summary>Field number for the "max_distance" field.</summary>
    public const int MaxDistanceFieldNumber = 1;
    private double maxDistance_;
    /// <summary>
    /// unit: meters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double MaxDistance {
      get { return maxDistance_; }
      set {
        maxDistance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProceedWithCautionSpeedConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProceedWithCautionSpeedConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaxDistance != other.MaxDistance) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MaxDistance != 0D) hash ^= MaxDistance.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MaxDistance != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(MaxDistance);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MaxDistance != 0D) {
        size += 1 + 8;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProceedWithCautionSpeedConfig other) {
      if (other == null) {
        return;
      }
      if (other.MaxDistance != 0D) {
        MaxDistance = other.MaxDistance;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 9: {
            MaxDistance = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
