// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/proto/tracker_config.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from modules/perception/proto/tracker_config.proto</summary>
public static partial class TrackerConfigReflection {

  #region Descriptor
  /// <summary>File descriptor for modules/perception/proto/tracker_config.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static TrackerConfigReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Ci1tb2R1bGVzL3BlcmNlcHRpb24vcHJvdG8vdHJhY2tlcl9jb25maWcucHJv",
          "dG8iSQoNTWF0Y2hlckNvbmZpZxIaChJtYXhfbWF0Y2hfZGlzdGFuY2UYASAB",
          "KAESHAoUYm91bmRfbWF0Y2hfZGlzdGFuY2UYAiABKAFiBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::MatcherConfig), global::MatcherConfig.Parser, new[]{ "MaxMatchDistance", "BoundMatchDistance" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class MatcherConfig : pb::IMessage<MatcherConfig> {
  private static readonly pb::MessageParser<MatcherConfig> _parser = new pb::MessageParser<MatcherConfig>(() => new MatcherConfig());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MatcherConfig> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TrackerConfigReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MatcherConfig() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MatcherConfig(MatcherConfig other) : this() {
    maxMatchDistance_ = other.maxMatchDistance_;
    boundMatchDistance_ = other.boundMatchDistance_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MatcherConfig Clone() {
    return new MatcherConfig(this);
  }

  /// <summary>Field number for the "max_match_distance" field.</summary>
  public const int MaxMatchDistanceFieldNumber = 1;
  private double maxMatchDistance_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double MaxMatchDistance {
    get { return maxMatchDistance_; }
    set {
      maxMatchDistance_ = value;
    }
  }

  /// <summary>Field number for the "bound_match_distance" field.</summary>
  public const int BoundMatchDistanceFieldNumber = 2;
  private double boundMatchDistance_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double BoundMatchDistance {
    get { return boundMatchDistance_; }
    set {
      boundMatchDistance_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MatcherConfig);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MatcherConfig other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MaxMatchDistance != other.MaxMatchDistance) return false;
    if (BoundMatchDistance != other.BoundMatchDistance) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MaxMatchDistance != 0D) hash ^= MaxMatchDistance.GetHashCode();
    if (BoundMatchDistance != 0D) hash ^= BoundMatchDistance.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (MaxMatchDistance != 0D) {
      output.WriteRawTag(9);
      output.WriteDouble(MaxMatchDistance);
    }
    if (BoundMatchDistance != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(BoundMatchDistance);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MaxMatchDistance != 0D) {
      size += 1 + 8;
    }
    if (BoundMatchDistance != 0D) {
      size += 1 + 8;
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MatcherConfig other) {
    if (other == null) {
      return;
    }
    if (other.MaxMatchDistance != 0D) {
      MaxMatchDistance = other.MaxMatchDistance;
    }
    if (other.BoundMatchDistance != 0D) {
      BoundMatchDistance = other.BoundMatchDistance;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 9: {
          MaxMatchDistance = input.ReadDouble();
          break;
        }
        case 17: {
          BoundMatchDistance = input.ReadDouble();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
