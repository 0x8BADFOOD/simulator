// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/transform/proto/static_transform_conf.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Apollo.StaticTransform {

  /// <summary>Holder for reflection information generated from modules/transform/proto/static_transform_conf.proto</summary>
  public static partial class StaticTransformConfReflection {

    #region Descriptor
    /// <summary>File descriptor for modules/transform/proto/static_transform_conf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StaticTransformConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjNtb2R1bGVzL3RyYW5zZm9ybS9wcm90by9zdGF0aWNfdHJhbnNmb3JtX2Nv",
            "bmYucHJvdG8SF2Fwb2xsby5zdGF0aWNfdHJhbnNmb3JtIlwKDUV4dHJpbnNp",
            "Y0ZpbGUSEAoIZnJhbWVfaWQYASABKAkSFgoOY2hpbGRfZnJhbWVfaWQYAiAB",
            "KAkSEQoJZmlsZV9wYXRoGAMgASgJEg4KBmVuYWJsZRgEIAEoCCJGCgRDb25m",
            "Ej4KDmV4dHJpbnNpY19maWxlGAEgAygLMiYuYXBvbGxvLnN0YXRpY190cmFu",
            "c2Zvcm0uRXh0cmluc2ljRmlsZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.StaticTransform.ExtrinsicFile), global::Apollo.StaticTransform.ExtrinsicFile.Parser, new[]{ "FrameId", "ChildFrameId", "FilePath", "Enable" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.StaticTransform.Conf), global::Apollo.StaticTransform.Conf.Parser, new[]{ "ExtrinsicFile" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ExtrinsicFile : pb::IMessage<ExtrinsicFile> {
    private static readonly pb::MessageParser<ExtrinsicFile> _parser = new pb::MessageParser<ExtrinsicFile>(() => new ExtrinsicFile());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExtrinsicFile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.StaticTransform.StaticTransformConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtrinsicFile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtrinsicFile(ExtrinsicFile other) : this() {
      frameId_ = other.frameId_;
      childFrameId_ = other.childFrameId_;
      filePath_ = other.filePath_;
      enable_ = other.enable_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtrinsicFile Clone() {
      return new ExtrinsicFile(this);
    }

    /// <summary>Field number for the "frame_id" field.</summary>
    public const int FrameIdFieldNumber = 1;
    private string frameId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FrameId {
      get { return frameId_; }
      set {
        frameId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "child_frame_id" field.</summary>
    public const int ChildFrameIdFieldNumber = 2;
    private string childFrameId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChildFrameId {
      get { return childFrameId_; }
      set {
        childFrameId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "file_path" field.</summary>
    public const int FilePathFieldNumber = 3;
    private string filePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FilePath {
      get { return filePath_; }
      set {
        filePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "enable" field.</summary>
    public const int EnableFieldNumber = 4;
    private bool enable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Enable {
      get { return enable_; }
      set {
        enable_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExtrinsicFile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExtrinsicFile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FrameId != other.FrameId) return false;
      if (ChildFrameId != other.ChildFrameId) return false;
      if (FilePath != other.FilePath) return false;
      if (Enable != other.Enable) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FrameId.Length != 0) hash ^= FrameId.GetHashCode();
      if (ChildFrameId.Length != 0) hash ^= ChildFrameId.GetHashCode();
      if (FilePath.Length != 0) hash ^= FilePath.GetHashCode();
      if (Enable != false) hash ^= Enable.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FrameId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FrameId);
      }
      if (ChildFrameId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ChildFrameId);
      }
      if (FilePath.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FilePath);
      }
      if (Enable != false) {
        output.WriteRawTag(32);
        output.WriteBool(Enable);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FrameId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FrameId);
      }
      if (ChildFrameId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChildFrameId);
      }
      if (FilePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FilePath);
      }
      if (Enable != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExtrinsicFile other) {
      if (other == null) {
        return;
      }
      if (other.FrameId.Length != 0) {
        FrameId = other.FrameId;
      }
      if (other.ChildFrameId.Length != 0) {
        ChildFrameId = other.ChildFrameId;
      }
      if (other.FilePath.Length != 0) {
        FilePath = other.FilePath;
      }
      if (other.Enable != false) {
        Enable = other.Enable;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            FrameId = input.ReadString();
            break;
          }
          case 18: {
            ChildFrameId = input.ReadString();
            break;
          }
          case 26: {
            FilePath = input.ReadString();
            break;
          }
          case 32: {
            Enable = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Conf : pb::IMessage<Conf> {
    private static readonly pb::MessageParser<Conf> _parser = new pb::MessageParser<Conf>(() => new Conf());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Conf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.StaticTransform.StaticTransformConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Conf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Conf(Conf other) : this() {
      extrinsicFile_ = other.extrinsicFile_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Conf Clone() {
      return new Conf(this);
    }

    /// <summary>Field number for the "extrinsic_file" field.</summary>
    public const int ExtrinsicFileFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Apollo.StaticTransform.ExtrinsicFile> _repeated_extrinsicFile_codec
        = pb::FieldCodec.ForMessage(10, global::Apollo.StaticTransform.ExtrinsicFile.Parser);
    private readonly pbc::RepeatedField<global::Apollo.StaticTransform.ExtrinsicFile> extrinsicFile_ = new pbc::RepeatedField<global::Apollo.StaticTransform.ExtrinsicFile>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Apollo.StaticTransform.ExtrinsicFile> ExtrinsicFile {
      get { return extrinsicFile_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Conf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Conf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!extrinsicFile_.Equals(other.extrinsicFile_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= extrinsicFile_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      extrinsicFile_.WriteTo(output, _repeated_extrinsicFile_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += extrinsicFile_.CalculateSize(_repeated_extrinsicFile_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Conf other) {
      if (other == null) {
        return;
      }
      extrinsicFile_.Add(other.extrinsicFile_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            extrinsicFile_.AddEntriesFrom(input, _repeated_extrinsicFile_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
