// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/lidar/lib/segmentation/cnnseg/proto/spp_engine_config.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Apollo.Perception.Lidar {

  /// <summary>Holder for reflection information generated from modules/perception/lidar/lib/segmentation/cnnseg/proto/spp_engine_config.proto</summary>
  public static partial class SppEngineConfigReflection {

    #region Descriptor
    /// <summary>File descriptor for modules/perception/lidar/lib/segmentation/cnnseg/proto/spp_engine_config.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SppEngineConfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ck5tb2R1bGVzL3BlcmNlcHRpb24vbGlkYXIvbGliL3NlZ21lbnRhdGlvbi9j",
            "bm5zZWcvcHJvdG8vc3BwX2VuZ2luZV9jb25maWcucHJvdG8SF2Fwb2xsby5w",
            "ZXJjZXB0aW9uLmxpZGFyIiUKD1NwcEVuZ2luZUNvbmZpZxISCgpoZWlnaHRf",
            "Z2FwGAggASgCYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.Lidar.SppEngineConfig), global::Apollo.Perception.Lidar.SppEngineConfig.Parser, new[]{ "HeightGap" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SppEngineConfig : pb::IMessage<SppEngineConfig> {
    private static readonly pb::MessageParser<SppEngineConfig> _parser = new pb::MessageParser<SppEngineConfig>(() => new SppEngineConfig());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SppEngineConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.Lidar.SppEngineConfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SppEngineConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SppEngineConfig(SppEngineConfig other) : this() {
      heightGap_ = other.heightGap_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SppEngineConfig Clone() {
      return new SppEngineConfig(this);
    }

    /// <summary>Field number for the "height_gap" field.</summary>
    public const int HeightGapFieldNumber = 8;
    private float heightGap_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float HeightGap {
      get { return heightGap_; }
      set {
        heightGap_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SppEngineConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SppEngineConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HeightGap != other.HeightGap) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HeightGap != 0F) hash ^= HeightGap.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HeightGap != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(HeightGap);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HeightGap != 0F) {
        size += 1 + 4;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SppEngineConfig other) {
      if (other == null) {
        return;
      }
      if (other.HeightGap != 0F) {
        HeightGap = other.HeightGap;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 69: {
            HeightGap = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
