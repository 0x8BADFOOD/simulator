// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/lidar/lib/segmentation/cnnseg/proto/cnnseg_config.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Apollo.Perception.Lidar {

  /// <summary>Holder for reflection information generated from modules/perception/lidar/lib/segmentation/cnnseg/proto/cnnseg_config.proto</summary>
  public static partial class CnnsegConfigReflection {

    #region Descriptor
    /// <summary>File descriptor for modules/perception/lidar/lib/segmentation/cnnseg/proto/cnnseg_config.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CnnsegConfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ckptb2R1bGVzL3BlcmNlcHRpb24vbGlkYXIvbGliL3NlZ21lbnRhdGlvbi9j",
            "bm5zZWcvcHJvdG8vY25uc2VnX2NvbmZpZy5wcm90bxIXYXBvbGxvLnBlcmNl",
            "cHRpb24ubGlkYXIiYAoMQ05OU2VnQ29uZmlnEhIKCnBhcmFtX2ZpbGUYASAB",
            "KAkSEgoKcHJvdG9fZmlsZRgCIAEoCRITCgt3ZWlnaHRfZmlsZRgDIAEoCRIT",
            "CgtlbmdpbmVfZmlsZRgEIAEoCWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.Lidar.CNNSegConfig), global::Apollo.Perception.Lidar.CNNSegConfig.Parser, new[]{ "ParamFile", "ProtoFile", "WeightFile", "EngineFile" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CNNSegConfig : pb::IMessage<CNNSegConfig> {
    private static readonly pb::MessageParser<CNNSegConfig> _parser = new pb::MessageParser<CNNSegConfig>(() => new CNNSegConfig());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CNNSegConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.Lidar.CnnsegConfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CNNSegConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CNNSegConfig(CNNSegConfig other) : this() {
      paramFile_ = other.paramFile_;
      protoFile_ = other.protoFile_;
      weightFile_ = other.weightFile_;
      engineFile_ = other.engineFile_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CNNSegConfig Clone() {
      return new CNNSegConfig(this);
    }

    /// <summary>Field number for the "param_file" field.</summary>
    public const int ParamFileFieldNumber = 1;
    private string paramFile_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParamFile {
      get { return paramFile_; }
      set {
        paramFile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "proto_file" field.</summary>
    public const int ProtoFileFieldNumber = 2;
    private string protoFile_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProtoFile {
      get { return protoFile_; }
      set {
        protoFile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "weight_file" field.</summary>
    public const int WeightFileFieldNumber = 3;
    private string weightFile_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WeightFile {
      get { return weightFile_; }
      set {
        weightFile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "engine_file" field.</summary>
    public const int EngineFileFieldNumber = 4;
    private string engineFile_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EngineFile {
      get { return engineFile_; }
      set {
        engineFile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CNNSegConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CNNSegConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ParamFile != other.ParamFile) return false;
      if (ProtoFile != other.ProtoFile) return false;
      if (WeightFile != other.WeightFile) return false;
      if (EngineFile != other.EngineFile) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ParamFile.Length != 0) hash ^= ParamFile.GetHashCode();
      if (ProtoFile.Length != 0) hash ^= ProtoFile.GetHashCode();
      if (WeightFile.Length != 0) hash ^= WeightFile.GetHashCode();
      if (EngineFile.Length != 0) hash ^= EngineFile.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ParamFile.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ParamFile);
      }
      if (ProtoFile.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProtoFile);
      }
      if (WeightFile.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(WeightFile);
      }
      if (EngineFile.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(EngineFile);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ParamFile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParamFile);
      }
      if (ProtoFile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProtoFile);
      }
      if (WeightFile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WeightFile);
      }
      if (EngineFile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EngineFile);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CNNSegConfig other) {
      if (other == null) {
        return;
      }
      if (other.ParamFile.Length != 0) {
        ParamFile = other.ParamFile;
      }
      if (other.ProtoFile.Length != 0) {
        ProtoFile = other.ProtoFile;
      }
      if (other.WeightFile.Length != 0) {
        WeightFile = other.WeightFile;
      }
      if (other.EngineFile.Length != 0) {
        EngineFile = other.EngineFile;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ParamFile = input.ReadString();
            break;
          }
          case 18: {
            ProtoFile = input.ReadString();
            break;
          }
          case 26: {
            WeightFile = input.ReadString();
            break;
          }
          case 34: {
            EngineFile = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
