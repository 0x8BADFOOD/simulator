// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/proto/perception_config_schema.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Apollo.Perception {

  /// <summary>Holder for reflection information generated from modules/perception/proto/perception_config_schema.proto</summary>
  public static partial class PerceptionConfigSchemaReflection {

    #region Descriptor
    /// <summary>File descriptor for modules/perception/proto/perception_config_schema.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PerceptionConfigSchemaReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjdtb2R1bGVzL3BlcmNlcHRpb24vcHJvdG8vcGVyY2VwdGlvbl9jb25maWdf",
            "c2NoZW1hLnByb3RvEhFhcG9sbG8ucGVyY2VwdGlvbiIqCgtLZXlWYWx1ZUlu",
            "dBIMCgRuYW1lGAEgASgJEg0KBXZhbHVlGAIgASgFIi0KDktleVZhbHVlU3Ry",
            "aW5nEgwKBG5hbWUYASABKAkSDQoFdmFsdWUYAiABKAwiLQoOS2V5VmFsdWVE",
            "b3VibGUSDAoEbmFtZRgBIAEoCRINCgV2YWx1ZRgCIAEoASIsCg1LZXlWYWx1",
            "ZUZsb2F0EgwKBG5hbWUYASABKAkSDQoFdmFsdWUYAiABKAIiKwoMS2V5VmFs",
            "dWVCb29sEgwKBG5hbWUYASABKAkSDQoFdmFsdWUYAiABKAgiMAoQS2V5VmFs",
            "dWVBcnJheUludBIMCgRuYW1lGAEgASgJEg4KBnZhbHVlcxgCIAMoBSIzChNL",
            "ZXlWYWx1ZUFycmF5U3RyaW5nEgwKBG5hbWUYASABKAkSDgoGdmFsdWVzGAIg",
            "AygMIjMKE0tleVZhbHVlQXJyYXlEb3VibGUSDAoEbmFtZRgBIAEoCRIOCgZ2",
            "YWx1ZXMYAiADKAEiMgoSS2V5VmFsdWVBcnJheUZsb2F0EgwKBG5hbWUYASAB",
            "KAkSDgoGdmFsdWVzGAIgAygCIjEKEUtleVZhbHVlQXJyYXlCb29sEgwKBG5h",
            "bWUYASABKAkSDgoGdmFsdWVzGAIgAygIIpwFChBNb2RlbENvbmZpZ1Byb3Rv",
            "EgwKBG5hbWUYASABKAkSDwoHdmVyc2lvbhgCIAEoCRI2Cg5pbnRlZ2VyX3Bh",
            "cmFtcxgDIAMoCzIeLmFwb2xsby5wZXJjZXB0aW9uLktleVZhbHVlSW50EjgK",
            "DXN0cmluZ19wYXJhbXMYBCADKAsyIS5hcG9sbG8ucGVyY2VwdGlvbi5LZXlW",
            "YWx1ZVN0cmluZxI4Cg1kb3VibGVfcGFyYW1zGAUgAygLMiEuYXBvbGxvLnBl",
            "cmNlcHRpb24uS2V5VmFsdWVEb3VibGUSNgoMZmxvYXRfcGFyYW1zGAYgAygL",
            "MiAuYXBvbGxvLnBlcmNlcHRpb24uS2V5VmFsdWVGbG9hdBI0Cgtib29sX3Bh",
            "cmFtcxgHIAMoCzIfLmFwb2xsby5wZXJjZXB0aW9uLktleVZhbHVlQm9vbBJB",
            "ChRhcnJheV9pbnRlZ2VyX3BhcmFtcxgIIAMoCzIjLmFwb2xsby5wZXJjZXB0",
            "aW9uLktleVZhbHVlQXJyYXlJbnQSQwoTYXJyYXlfc3RyaW5nX3BhcmFtcxgJ",
            "IAMoCzImLmFwb2xsby5wZXJjZXB0aW9uLktleVZhbHVlQXJyYXlTdHJpbmcS",
            "QwoTYXJyYXlfZG91YmxlX3BhcmFtcxgKIAMoCzImLmFwb2xsby5wZXJjZXB0",
            "aW9uLktleVZhbHVlQXJyYXlEb3VibGUSQQoSYXJyYXlfZmxvYXRfcGFyYW1z",
            "GAsgAygLMiUuYXBvbGxvLnBlcmNlcHRpb24uS2V5VmFsdWVBcnJheUZsb2F0",
            "Ej8KEWFycmF5X2Jvb2xfcGFyYW1zGAwgAygLMiQuYXBvbGxvLnBlcmNlcHRp",
            "b24uS2V5VmFsdWVBcnJheUJvb2wiUwoVTXVsdGlNb2RlbENvbmZpZ1Byb3Rv",
            "EjoKDW1vZGVsX2NvbmZpZ3MYASADKAsyIy5hcG9sbG8ucGVyY2VwdGlvbi5N",
            "b2RlbENvbmZpZ1Byb3RvIjUKGE1vZGVsQ29uZmlnRmlsZUxpc3RQcm90bxIZ",
            "ChFtb2RlbF9jb25maWdfcGF0aBgBIAMoCWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.KeyValueInt), global::Apollo.Perception.KeyValueInt.Parser, new[]{ "Name", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.KeyValueString), global::Apollo.Perception.KeyValueString.Parser, new[]{ "Name", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.KeyValueDouble), global::Apollo.Perception.KeyValueDouble.Parser, new[]{ "Name", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.KeyValueFloat), global::Apollo.Perception.KeyValueFloat.Parser, new[]{ "Name", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.KeyValueBool), global::Apollo.Perception.KeyValueBool.Parser, new[]{ "Name", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.KeyValueArrayInt), global::Apollo.Perception.KeyValueArrayInt.Parser, new[]{ "Name", "Values" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.KeyValueArrayString), global::Apollo.Perception.KeyValueArrayString.Parser, new[]{ "Name", "Values" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.KeyValueArrayDouble), global::Apollo.Perception.KeyValueArrayDouble.Parser, new[]{ "Name", "Values" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.KeyValueArrayFloat), global::Apollo.Perception.KeyValueArrayFloat.Parser, new[]{ "Name", "Values" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.KeyValueArrayBool), global::Apollo.Perception.KeyValueArrayBool.Parser, new[]{ "Name", "Values" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.ModelConfigProto), global::Apollo.Perception.ModelConfigProto.Parser, new[]{ "Name", "Version", "IntegerParams", "StringParams", "DoubleParams", "FloatParams", "BoolParams", "ArrayIntegerParams", "ArrayStringParams", "ArrayDoubleParams", "ArrayFloatParams", "ArrayBoolParams" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.MultiModelConfigProto), global::Apollo.Perception.MultiModelConfigProto.Parser, new[]{ "ModelConfigs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.ModelConfigFileListProto), global::Apollo.Perception.ModelConfigFileListProto.Parser, new[]{ "ModelConfigPath" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class KeyValueInt : pb::IMessage<KeyValueInt> {
    private static readonly pb::MessageParser<KeyValueInt> _parser = new pb::MessageParser<KeyValueInt>(() => new KeyValueInt());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeyValueInt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.PerceptionConfigSchemaReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValueInt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValueInt(KeyValueInt other) : this() {
      name_ = other.name_;
      value_ = other.value_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValueInt Clone() {
      return new KeyValueInt(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private int value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeyValueInt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeyValueInt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Value != other.Value) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Value != 0) hash ^= Value.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Value != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Value);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeyValueInt other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class KeyValueString : pb::IMessage<KeyValueString> {
    private static readonly pb::MessageParser<KeyValueString> _parser = new pb::MessageParser<KeyValueString>(() => new KeyValueString());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeyValueString> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.PerceptionConfigSchemaReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValueString() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValueString(KeyValueString other) : this() {
      name_ = other.name_;
      value_ = other.value_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValueString Clone() {
      return new KeyValueString(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private pb::ByteString value_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeyValueString);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeyValueString other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Value != other.Value) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Value);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeyValueString other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class KeyValueDouble : pb::IMessage<KeyValueDouble> {
    private static readonly pb::MessageParser<KeyValueDouble> _parser = new pb::MessageParser<KeyValueDouble>(() => new KeyValueDouble());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeyValueDouble> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.PerceptionConfigSchemaReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValueDouble() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValueDouble(KeyValueDouble other) : this() {
      name_ = other.name_;
      value_ = other.value_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValueDouble Clone() {
      return new KeyValueDouble(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private double value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeyValueDouble);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeyValueDouble other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Value != other.Value) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Value != 0D) hash ^= Value.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Value != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Value);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Value != 0D) {
        size += 1 + 8;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeyValueDouble other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Value != 0D) {
        Value = other.Value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 17: {
            Value = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class KeyValueFloat : pb::IMessage<KeyValueFloat> {
    private static readonly pb::MessageParser<KeyValueFloat> _parser = new pb::MessageParser<KeyValueFloat>(() => new KeyValueFloat());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeyValueFloat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.PerceptionConfigSchemaReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValueFloat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValueFloat(KeyValueFloat other) : this() {
      name_ = other.name_;
      value_ = other.value_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValueFloat Clone() {
      return new KeyValueFloat(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private float value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeyValueFloat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeyValueFloat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Value != other.Value) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Value != 0F) hash ^= Value.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Value != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Value);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Value != 0F) {
        size += 1 + 4;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeyValueFloat other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Value != 0F) {
        Value = other.Value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 21: {
            Value = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class KeyValueBool : pb::IMessage<KeyValueBool> {
    private static readonly pb::MessageParser<KeyValueBool> _parser = new pb::MessageParser<KeyValueBool>(() => new KeyValueBool());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeyValueBool> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.PerceptionConfigSchemaReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValueBool() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValueBool(KeyValueBool other) : this() {
      name_ = other.name_;
      value_ = other.value_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValueBool Clone() {
      return new KeyValueBool(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private bool value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeyValueBool);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeyValueBool other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Value != other.Value) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Value != false) hash ^= Value.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Value != false) {
        output.WriteRawTag(16);
        output.WriteBool(Value);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Value != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeyValueBool other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Value != false) {
        Value = other.Value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Value = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class KeyValueArrayInt : pb::IMessage<KeyValueArrayInt> {
    private static readonly pb::MessageParser<KeyValueArrayInt> _parser = new pb::MessageParser<KeyValueArrayInt>(() => new KeyValueArrayInt());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeyValueArrayInt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.PerceptionConfigSchemaReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValueArrayInt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValueArrayInt(KeyValueArrayInt other) : this() {
      name_ = other.name_;
      values_ = other.values_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValueArrayInt Clone() {
      return new KeyValueArrayInt(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_values_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> values_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeyValueArrayInt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeyValueArrayInt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!values_.Equals(other.values_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= values_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      values_.WriteTo(output, _repeated_values_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += values_.CalculateSize(_repeated_values_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeyValueArrayInt other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      values_.Add(other.values_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class KeyValueArrayString : pb::IMessage<KeyValueArrayString> {
    private static readonly pb::MessageParser<KeyValueArrayString> _parser = new pb::MessageParser<KeyValueArrayString>(() => new KeyValueArrayString());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeyValueArrayString> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.PerceptionConfigSchemaReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValueArrayString() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValueArrayString(KeyValueArrayString other) : this() {
      name_ = other.name_;
      values_ = other.values_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValueArrayString Clone() {
      return new KeyValueArrayString(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 2;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_values_codec
        = pb::FieldCodec.ForBytes(18);
    private readonly pbc::RepeatedField<pb::ByteString> values_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeyValueArrayString);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeyValueArrayString other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!values_.Equals(other.values_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= values_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      values_.WriteTo(output, _repeated_values_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += values_.CalculateSize(_repeated_values_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeyValueArrayString other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      values_.Add(other.values_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class KeyValueArrayDouble : pb::IMessage<KeyValueArrayDouble> {
    private static readonly pb::MessageParser<KeyValueArrayDouble> _parser = new pb::MessageParser<KeyValueArrayDouble>(() => new KeyValueArrayDouble());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeyValueArrayDouble> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.PerceptionConfigSchemaReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValueArrayDouble() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValueArrayDouble(KeyValueArrayDouble other) : this() {
      name_ = other.name_;
      values_ = other.values_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValueArrayDouble Clone() {
      return new KeyValueArrayDouble(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 2;
    private static readonly pb::FieldCodec<double> _repeated_values_codec
        = pb::FieldCodec.ForDouble(18);
    private readonly pbc::RepeatedField<double> values_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<double> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeyValueArrayDouble);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeyValueArrayDouble other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!values_.Equals(other.values_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= values_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      values_.WriteTo(output, _repeated_values_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += values_.CalculateSize(_repeated_values_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeyValueArrayDouble other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      values_.Add(other.values_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18:
          case 17: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class KeyValueArrayFloat : pb::IMessage<KeyValueArrayFloat> {
    private static readonly pb::MessageParser<KeyValueArrayFloat> _parser = new pb::MessageParser<KeyValueArrayFloat>(() => new KeyValueArrayFloat());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeyValueArrayFloat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.PerceptionConfigSchemaReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValueArrayFloat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValueArrayFloat(KeyValueArrayFloat other) : this() {
      name_ = other.name_;
      values_ = other.values_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValueArrayFloat Clone() {
      return new KeyValueArrayFloat(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 2;
    private static readonly pb::FieldCodec<float> _repeated_values_codec
        = pb::FieldCodec.ForFloat(18);
    private readonly pbc::RepeatedField<float> values_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeyValueArrayFloat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeyValueArrayFloat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!values_.Equals(other.values_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= values_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      values_.WriteTo(output, _repeated_values_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += values_.CalculateSize(_repeated_values_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeyValueArrayFloat other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      values_.Add(other.values_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18:
          case 21: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class KeyValueArrayBool : pb::IMessage<KeyValueArrayBool> {
    private static readonly pb::MessageParser<KeyValueArrayBool> _parser = new pb::MessageParser<KeyValueArrayBool>(() => new KeyValueArrayBool());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeyValueArrayBool> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.PerceptionConfigSchemaReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValueArrayBool() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValueArrayBool(KeyValueArrayBool other) : this() {
      name_ = other.name_;
      values_ = other.values_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValueArrayBool Clone() {
      return new KeyValueArrayBool(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 2;
    private static readonly pb::FieldCodec<bool> _repeated_values_codec
        = pb::FieldCodec.ForBool(18);
    private readonly pbc::RepeatedField<bool> values_ = new pbc::RepeatedField<bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<bool> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeyValueArrayBool);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeyValueArrayBool other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!values_.Equals(other.values_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= values_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      values_.WriteTo(output, _repeated_values_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += values_.CalculateSize(_repeated_values_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeyValueArrayBool other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      values_.Add(other.values_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModelConfigProto : pb::IMessage<ModelConfigProto> {
    private static readonly pb::MessageParser<ModelConfigProto> _parser = new pb::MessageParser<ModelConfigProto>(() => new ModelConfigProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModelConfigProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.PerceptionConfigSchemaReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelConfigProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelConfigProto(ModelConfigProto other) : this() {
      name_ = other.name_;
      version_ = other.version_;
      integerParams_ = other.integerParams_.Clone();
      stringParams_ = other.stringParams_.Clone();
      doubleParams_ = other.doubleParams_.Clone();
      floatParams_ = other.floatParams_.Clone();
      boolParams_ = other.boolParams_.Clone();
      arrayIntegerParams_ = other.arrayIntegerParams_.Clone();
      arrayStringParams_ = other.arrayStringParams_.Clone();
      arrayDoubleParams_ = other.arrayDoubleParams_.Clone();
      arrayFloatParams_ = other.arrayFloatParams_.Clone();
      arrayBoolParams_ = other.arrayBoolParams_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelConfigProto Clone() {
      return new ModelConfigProto(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private string version_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "integer_params" field.</summary>
    public const int IntegerParamsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Apollo.Perception.KeyValueInt> _repeated_integerParams_codec
        = pb::FieldCodec.ForMessage(26, global::Apollo.Perception.KeyValueInt.Parser);
    private readonly pbc::RepeatedField<global::Apollo.Perception.KeyValueInt> integerParams_ = new pbc::RepeatedField<global::Apollo.Perception.KeyValueInt>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Apollo.Perception.KeyValueInt> IntegerParams {
      get { return integerParams_; }
    }

    /// <summary>Field number for the "string_params" field.</summary>
    public const int StringParamsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Apollo.Perception.KeyValueString> _repeated_stringParams_codec
        = pb::FieldCodec.ForMessage(34, global::Apollo.Perception.KeyValueString.Parser);
    private readonly pbc::RepeatedField<global::Apollo.Perception.KeyValueString> stringParams_ = new pbc::RepeatedField<global::Apollo.Perception.KeyValueString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Apollo.Perception.KeyValueString> StringParams {
      get { return stringParams_; }
    }

    /// <summary>Field number for the "double_params" field.</summary>
    public const int DoubleParamsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Apollo.Perception.KeyValueDouble> _repeated_doubleParams_codec
        = pb::FieldCodec.ForMessage(42, global::Apollo.Perception.KeyValueDouble.Parser);
    private readonly pbc::RepeatedField<global::Apollo.Perception.KeyValueDouble> doubleParams_ = new pbc::RepeatedField<global::Apollo.Perception.KeyValueDouble>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Apollo.Perception.KeyValueDouble> DoubleParams {
      get { return doubleParams_; }
    }

    /// <summary>Field number for the "float_params" field.</summary>
    public const int FloatParamsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Apollo.Perception.KeyValueFloat> _repeated_floatParams_codec
        = pb::FieldCodec.ForMessage(50, global::Apollo.Perception.KeyValueFloat.Parser);
    private readonly pbc::RepeatedField<global::Apollo.Perception.KeyValueFloat> floatParams_ = new pbc::RepeatedField<global::Apollo.Perception.KeyValueFloat>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Apollo.Perception.KeyValueFloat> FloatParams {
      get { return floatParams_; }
    }

    /// <summary>Field number for the "bool_params" field.</summary>
    public const int BoolParamsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Apollo.Perception.KeyValueBool> _repeated_boolParams_codec
        = pb::FieldCodec.ForMessage(58, global::Apollo.Perception.KeyValueBool.Parser);
    private readonly pbc::RepeatedField<global::Apollo.Perception.KeyValueBool> boolParams_ = new pbc::RepeatedField<global::Apollo.Perception.KeyValueBool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Apollo.Perception.KeyValueBool> BoolParams {
      get { return boolParams_; }
    }

    /// <summary>Field number for the "array_integer_params" field.</summary>
    public const int ArrayIntegerParamsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Apollo.Perception.KeyValueArrayInt> _repeated_arrayIntegerParams_codec
        = pb::FieldCodec.ForMessage(66, global::Apollo.Perception.KeyValueArrayInt.Parser);
    private readonly pbc::RepeatedField<global::Apollo.Perception.KeyValueArrayInt> arrayIntegerParams_ = new pbc::RepeatedField<global::Apollo.Perception.KeyValueArrayInt>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Apollo.Perception.KeyValueArrayInt> ArrayIntegerParams {
      get { return arrayIntegerParams_; }
    }

    /// <summary>Field number for the "array_string_params" field.</summary>
    public const int ArrayStringParamsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Apollo.Perception.KeyValueArrayString> _repeated_arrayStringParams_codec
        = pb::FieldCodec.ForMessage(74, global::Apollo.Perception.KeyValueArrayString.Parser);
    private readonly pbc::RepeatedField<global::Apollo.Perception.KeyValueArrayString> arrayStringParams_ = new pbc::RepeatedField<global::Apollo.Perception.KeyValueArrayString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Apollo.Perception.KeyValueArrayString> ArrayStringParams {
      get { return arrayStringParams_; }
    }

    /// <summary>Field number for the "array_double_params" field.</summary>
    public const int ArrayDoubleParamsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Apollo.Perception.KeyValueArrayDouble> _repeated_arrayDoubleParams_codec
        = pb::FieldCodec.ForMessage(82, global::Apollo.Perception.KeyValueArrayDouble.Parser);
    private readonly pbc::RepeatedField<global::Apollo.Perception.KeyValueArrayDouble> arrayDoubleParams_ = new pbc::RepeatedField<global::Apollo.Perception.KeyValueArrayDouble>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Apollo.Perception.KeyValueArrayDouble> ArrayDoubleParams {
      get { return arrayDoubleParams_; }
    }

    /// <summary>Field number for the "array_float_params" field.</summary>
    public const int ArrayFloatParamsFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Apollo.Perception.KeyValueArrayFloat> _repeated_arrayFloatParams_codec
        = pb::FieldCodec.ForMessage(90, global::Apollo.Perception.KeyValueArrayFloat.Parser);
    private readonly pbc::RepeatedField<global::Apollo.Perception.KeyValueArrayFloat> arrayFloatParams_ = new pbc::RepeatedField<global::Apollo.Perception.KeyValueArrayFloat>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Apollo.Perception.KeyValueArrayFloat> ArrayFloatParams {
      get { return arrayFloatParams_; }
    }

    /// <summary>Field number for the "array_bool_params" field.</summary>
    public const int ArrayBoolParamsFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Apollo.Perception.KeyValueArrayBool> _repeated_arrayBoolParams_codec
        = pb::FieldCodec.ForMessage(98, global::Apollo.Perception.KeyValueArrayBool.Parser);
    private readonly pbc::RepeatedField<global::Apollo.Perception.KeyValueArrayBool> arrayBoolParams_ = new pbc::RepeatedField<global::Apollo.Perception.KeyValueArrayBool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Apollo.Perception.KeyValueArrayBool> ArrayBoolParams {
      get { return arrayBoolParams_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModelConfigProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModelConfigProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Version != other.Version) return false;
      if(!integerParams_.Equals(other.integerParams_)) return false;
      if(!stringParams_.Equals(other.stringParams_)) return false;
      if(!doubleParams_.Equals(other.doubleParams_)) return false;
      if(!floatParams_.Equals(other.floatParams_)) return false;
      if(!boolParams_.Equals(other.boolParams_)) return false;
      if(!arrayIntegerParams_.Equals(other.arrayIntegerParams_)) return false;
      if(!arrayStringParams_.Equals(other.arrayStringParams_)) return false;
      if(!arrayDoubleParams_.Equals(other.arrayDoubleParams_)) return false;
      if(!arrayFloatParams_.Equals(other.arrayFloatParams_)) return false;
      if(!arrayBoolParams_.Equals(other.arrayBoolParams_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      hash ^= integerParams_.GetHashCode();
      hash ^= stringParams_.GetHashCode();
      hash ^= doubleParams_.GetHashCode();
      hash ^= floatParams_.GetHashCode();
      hash ^= boolParams_.GetHashCode();
      hash ^= arrayIntegerParams_.GetHashCode();
      hash ^= arrayStringParams_.GetHashCode();
      hash ^= arrayDoubleParams_.GetHashCode();
      hash ^= arrayFloatParams_.GetHashCode();
      hash ^= arrayBoolParams_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      integerParams_.WriteTo(output, _repeated_integerParams_codec);
      stringParams_.WriteTo(output, _repeated_stringParams_codec);
      doubleParams_.WriteTo(output, _repeated_doubleParams_codec);
      floatParams_.WriteTo(output, _repeated_floatParams_codec);
      boolParams_.WriteTo(output, _repeated_boolParams_codec);
      arrayIntegerParams_.WriteTo(output, _repeated_arrayIntegerParams_codec);
      arrayStringParams_.WriteTo(output, _repeated_arrayStringParams_codec);
      arrayDoubleParams_.WriteTo(output, _repeated_arrayDoubleParams_codec);
      arrayFloatParams_.WriteTo(output, _repeated_arrayFloatParams_codec);
      arrayBoolParams_.WriteTo(output, _repeated_arrayBoolParams_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      size += integerParams_.CalculateSize(_repeated_integerParams_codec);
      size += stringParams_.CalculateSize(_repeated_stringParams_codec);
      size += doubleParams_.CalculateSize(_repeated_doubleParams_codec);
      size += floatParams_.CalculateSize(_repeated_floatParams_codec);
      size += boolParams_.CalculateSize(_repeated_boolParams_codec);
      size += arrayIntegerParams_.CalculateSize(_repeated_arrayIntegerParams_codec);
      size += arrayStringParams_.CalculateSize(_repeated_arrayStringParams_codec);
      size += arrayDoubleParams_.CalculateSize(_repeated_arrayDoubleParams_codec);
      size += arrayFloatParams_.CalculateSize(_repeated_arrayFloatParams_codec);
      size += arrayBoolParams_.CalculateSize(_repeated_arrayBoolParams_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModelConfigProto other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      integerParams_.Add(other.integerParams_);
      stringParams_.Add(other.stringParams_);
      doubleParams_.Add(other.doubleParams_);
      floatParams_.Add(other.floatParams_);
      boolParams_.Add(other.boolParams_);
      arrayIntegerParams_.Add(other.arrayIntegerParams_);
      arrayStringParams_.Add(other.arrayStringParams_);
      arrayDoubleParams_.Add(other.arrayDoubleParams_);
      arrayFloatParams_.Add(other.arrayFloatParams_);
      arrayBoolParams_.Add(other.arrayBoolParams_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
          case 26: {
            integerParams_.AddEntriesFrom(input, _repeated_integerParams_codec);
            break;
          }
          case 34: {
            stringParams_.AddEntriesFrom(input, _repeated_stringParams_codec);
            break;
          }
          case 42: {
            doubleParams_.AddEntriesFrom(input, _repeated_doubleParams_codec);
            break;
          }
          case 50: {
            floatParams_.AddEntriesFrom(input, _repeated_floatParams_codec);
            break;
          }
          case 58: {
            boolParams_.AddEntriesFrom(input, _repeated_boolParams_codec);
            break;
          }
          case 66: {
            arrayIntegerParams_.AddEntriesFrom(input, _repeated_arrayIntegerParams_codec);
            break;
          }
          case 74: {
            arrayStringParams_.AddEntriesFrom(input, _repeated_arrayStringParams_codec);
            break;
          }
          case 82: {
            arrayDoubleParams_.AddEntriesFrom(input, _repeated_arrayDoubleParams_codec);
            break;
          }
          case 90: {
            arrayFloatParams_.AddEntriesFrom(input, _repeated_arrayFloatParams_codec);
            break;
          }
          case 98: {
            arrayBoolParams_.AddEntriesFrom(input, _repeated_arrayBoolParams_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiModelConfigProto : pb::IMessage<MultiModelConfigProto> {
    private static readonly pb::MessageParser<MultiModelConfigProto> _parser = new pb::MessageParser<MultiModelConfigProto>(() => new MultiModelConfigProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiModelConfigProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.PerceptionConfigSchemaReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiModelConfigProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiModelConfigProto(MultiModelConfigProto other) : this() {
      modelConfigs_ = other.modelConfigs_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiModelConfigProto Clone() {
      return new MultiModelConfigProto(this);
    }

    /// <summary>Field number for the "model_configs" field.</summary>
    public const int ModelConfigsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Apollo.Perception.ModelConfigProto> _repeated_modelConfigs_codec
        = pb::FieldCodec.ForMessage(10, global::Apollo.Perception.ModelConfigProto.Parser);
    private readonly pbc::RepeatedField<global::Apollo.Perception.ModelConfigProto> modelConfigs_ = new pbc::RepeatedField<global::Apollo.Perception.ModelConfigProto>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Apollo.Perception.ModelConfigProto> ModelConfigs {
      get { return modelConfigs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiModelConfigProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiModelConfigProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!modelConfigs_.Equals(other.modelConfigs_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= modelConfigs_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      modelConfigs_.WriteTo(output, _repeated_modelConfigs_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += modelConfigs_.CalculateSize(_repeated_modelConfigs_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiModelConfigProto other) {
      if (other == null) {
        return;
      }
      modelConfigs_.Add(other.modelConfigs_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            modelConfigs_.AddEntriesFrom(input, _repeated_modelConfigs_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModelConfigFileListProto : pb::IMessage<ModelConfigFileListProto> {
    private static readonly pb::MessageParser<ModelConfigFileListProto> _parser = new pb::MessageParser<ModelConfigFileListProto>(() => new ModelConfigFileListProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModelConfigFileListProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.PerceptionConfigSchemaReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelConfigFileListProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelConfigFileListProto(ModelConfigFileListProto other) : this() {
      modelConfigPath_ = other.modelConfigPath_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelConfigFileListProto Clone() {
      return new ModelConfigFileListProto(this);
    }

    /// <summary>Field number for the "model_config_path" field.</summary>
    public const int ModelConfigPathFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_modelConfigPath_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> modelConfigPath_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ModelConfigPath {
      get { return modelConfigPath_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModelConfigFileListProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModelConfigFileListProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!modelConfigPath_.Equals(other.modelConfigPath_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= modelConfigPath_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      modelConfigPath_.WriteTo(output, _repeated_modelConfigPath_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += modelConfigPath_.CalculateSize(_repeated_modelConfigPath_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModelConfigFileListProto other) {
      if (other == null) {
        return;
      }
      modelConfigPath_.Add(other.modelConfigPath_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            modelConfigPath_.AddEntriesFrom(input, _repeated_modelConfigPath_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
