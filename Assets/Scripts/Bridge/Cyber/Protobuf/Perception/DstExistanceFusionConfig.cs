// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/proto/dst_existance_fusion_config.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Apollo.Perception {

  /// <summary>Holder for reflection information generated from modules/perception/proto/dst_existance_fusion_config.proto</summary>
  public static partial class DstExistanceFusionConfigReflection {

    #region Descriptor
    /// <summary>File descriptor for modules/perception/proto/dst_existance_fusion_config.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DstExistanceFusionConfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjptb2R1bGVzL3BlcmNlcHRpb24vcHJvdG8vZHN0X2V4aXN0YW5jZV9mdXNp",
            "b25fY29uZmlnLnByb3RvEhFhcG9sbG8ucGVyY2VwdGlvbiI6Cg9DYW1lcmFW",
            "YWxpZERpc3QSEwoLY2FtZXJhX25hbWUYASABKAkSEgoKdmFsaWRfZGlzdBgC",
            "IAEoASKCAQoYRHN0RXhpc3RhbmNlRnVzaW9uQ29uZmlnEicKH3RyYWNrX29i",
            "amVjdF9tYXhfbWF0Y2hfZGlzdGFuY2UYASABKAESPQoRY2FtZXJhX3ZhbGlk",
            "X2Rpc3QYAiADKAsyIi5hcG9sbG8ucGVyY2VwdGlvbi5DYW1lcmFWYWxpZERp",
            "c3RiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.CameraValidDist), global::Apollo.Perception.CameraValidDist.Parser, new[]{ "CameraName", "ValidDist" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.DstExistanceFusionConfig), global::Apollo.Perception.DstExistanceFusionConfig.Parser, new[]{ "TrackObjectMaxMatchDistance", "CameraValidDist" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CameraValidDist : pb::IMessage<CameraValidDist> {
    private static readonly pb::MessageParser<CameraValidDist> _parser = new pb::MessageParser<CameraValidDist>(() => new CameraValidDist());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CameraValidDist> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.DstExistanceFusionConfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CameraValidDist() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CameraValidDist(CameraValidDist other) : this() {
      cameraName_ = other.cameraName_;
      validDist_ = other.validDist_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CameraValidDist Clone() {
      return new CameraValidDist(this);
    }

    /// <summary>Field number for the "camera_name" field.</summary>
    public const int CameraNameFieldNumber = 1;
    private string cameraName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CameraName {
      get { return cameraName_; }
      set {
        cameraName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "valid_dist" field.</summary>
    public const int ValidDistFieldNumber = 2;
    private double validDist_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double ValidDist {
      get { return validDist_; }
      set {
        validDist_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CameraValidDist);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CameraValidDist other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CameraName != other.CameraName) return false;
      if (ValidDist != other.ValidDist) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CameraName.Length != 0) hash ^= CameraName.GetHashCode();
      if (ValidDist != 0D) hash ^= ValidDist.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CameraName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CameraName);
      }
      if (ValidDist != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(ValidDist);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CameraName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CameraName);
      }
      if (ValidDist != 0D) {
        size += 1 + 8;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CameraValidDist other) {
      if (other == null) {
        return;
      }
      if (other.CameraName.Length != 0) {
        CameraName = other.CameraName;
      }
      if (other.ValidDist != 0D) {
        ValidDist = other.ValidDist;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            CameraName = input.ReadString();
            break;
          }
          case 17: {
            ValidDist = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DstExistanceFusionConfig : pb::IMessage<DstExistanceFusionConfig> {
    private static readonly pb::MessageParser<DstExistanceFusionConfig> _parser = new pb::MessageParser<DstExistanceFusionConfig>(() => new DstExistanceFusionConfig());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DstExistanceFusionConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.DstExistanceFusionConfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DstExistanceFusionConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DstExistanceFusionConfig(DstExistanceFusionConfig other) : this() {
      trackObjectMaxMatchDistance_ = other.trackObjectMaxMatchDistance_;
      cameraValidDist_ = other.cameraValidDist_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DstExistanceFusionConfig Clone() {
      return new DstExistanceFusionConfig(this);
    }

    /// <summary>Field number for the "track_object_max_match_distance" field.</summary>
    public const int TrackObjectMaxMatchDistanceFieldNumber = 1;
    private double trackObjectMaxMatchDistance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double TrackObjectMaxMatchDistance {
      get { return trackObjectMaxMatchDistance_; }
      set {
        trackObjectMaxMatchDistance_ = value;
      }
    }

    /// <summary>Field number for the "camera_valid_dist" field.</summary>
    public const int CameraValidDistFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Apollo.Perception.CameraValidDist> _repeated_cameraValidDist_codec
        = pb::FieldCodec.ForMessage(18, global::Apollo.Perception.CameraValidDist.Parser);
    private readonly pbc::RepeatedField<global::Apollo.Perception.CameraValidDist> cameraValidDist_ = new pbc::RepeatedField<global::Apollo.Perception.CameraValidDist>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Apollo.Perception.CameraValidDist> CameraValidDist {
      get { return cameraValidDist_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DstExistanceFusionConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DstExistanceFusionConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TrackObjectMaxMatchDistance != other.TrackObjectMaxMatchDistance) return false;
      if(!cameraValidDist_.Equals(other.cameraValidDist_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TrackObjectMaxMatchDistance != 0D) hash ^= TrackObjectMaxMatchDistance.GetHashCode();
      hash ^= cameraValidDist_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TrackObjectMaxMatchDistance != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(TrackObjectMaxMatchDistance);
      }
      cameraValidDist_.WriteTo(output, _repeated_cameraValidDist_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TrackObjectMaxMatchDistance != 0D) {
        size += 1 + 8;
      }
      size += cameraValidDist_.CalculateSize(_repeated_cameraValidDist_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DstExistanceFusionConfig other) {
      if (other == null) {
        return;
      }
      if (other.TrackObjectMaxMatchDistance != 0D) {
        TrackObjectMaxMatchDistance = other.TrackObjectMaxMatchDistance;
      }
      cameraValidDist_.Add(other.cameraValidDist_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 9: {
            TrackObjectMaxMatchDistance = input.ReadDouble();
            break;
          }
          case 18: {
            cameraValidDist_.AddEntriesFrom(input, _repeated_cameraValidDist_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
