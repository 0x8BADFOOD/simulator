// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/camera/lib/lane/common/denseline.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Apollo.Perception.Camera.Denseline {

  /// <summary>Holder for reflection information generated from modules/perception/camera/lib/lane/common/denseline.proto</summary>
  public static partial class DenselineReflection {

    #region Descriptor
    /// <summary>File descriptor for modules/perception/camera/lib/lane/common/denseline.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DenselineReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjltb2R1bGVzL3BlcmNlcHRpb24vY2FtZXJhL2xpYi9sYW5lL2NvbW1vbi9k",
            "ZW5zZWxpbmUucHJvdG8SImFwb2xsby5wZXJjZXB0aW9uLmNhbWVyYS5kZW5z",
            "ZWxpbmUimgEKDkRlbnNlbGluZVBhcmFtEkMKC21vZGVsX3BhcmFtGAEgASgL",
            "Mi4uYXBvbGxvLnBlcmNlcHRpb24uY2FtZXJhLmRlbnNlbGluZS5Nb2RlbFBh",
            "cmFtEkMKCW5ldF9wYXJhbRgCIAEoCzIwLmFwb2xsby5wZXJjZXB0aW9uLmNh",
            "bWVyYS5kZW5zZWxpbmUuTmV0d29ya1BhcmFtIowCCgpNb2RlbFBhcmFtEhIK",
            "Cm1vZGVsX25hbWUYASABKAkSEgoKcHJvdG9fZmlsZRgCIAEoCRITCgt3ZWln",
            "aHRfZmlsZRgDIAEoCRIUCgxyZXNpemVfc2NhbGUYBCABKAISFgoOaW5wdXRf",
            "b2Zmc2V0X3kYBSABKA0SFgoOaW5wdXRfb2Zmc2V0X3gYBiABKA0SEwoLY3Jv",
            "cF9oZWlnaHQYByABKA0SEgoKY3JvcF93aWR0aBgIIAEoDRIOCgZtZWFuX2IY",
            "CSABKA0SDgoGbWVhbl9nGAogASgNEg4KBm1lYW5fchgLIAEoDRIOCgZpc19i",
            "Z3IYDCABKAgSEgoKbW9kZWxfdHlwZRgNIAEoCSJNCgxOZXR3b3JrUGFyYW0S",
            "DwoHaW5fYmxvYhgBIAEoCRIQCghvdXRfYmxvYhgCIAEoCRIaChJpbnRlcm5h",
            "bF9ibG9iX2ludDgYAyADKAliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.Camera.Denseline.DenselineParam), global::Apollo.Perception.Camera.Denseline.DenselineParam.Parser, new[]{ "ModelParam", "NetParam" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.Camera.Denseline.ModelParam), global::Apollo.Perception.Camera.Denseline.ModelParam.Parser, new[]{ "ModelName", "ProtoFile", "WeightFile", "ResizeScale", "InputOffsetY", "InputOffsetX", "CropHeight", "CropWidth", "MeanB", "MeanG", "MeanR", "IsBgr", "ModelType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.Camera.Denseline.NetworkParam), global::Apollo.Perception.Camera.Denseline.NetworkParam.Parser, new[]{ "InBlob", "OutBlob", "InternalBlobInt8" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DenselineParam : pb::IMessage<DenselineParam> {
    private static readonly pb::MessageParser<DenselineParam> _parser = new pb::MessageParser<DenselineParam>(() => new DenselineParam());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DenselineParam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.Camera.Denseline.DenselineReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DenselineParam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DenselineParam(DenselineParam other) : this() {
      ModelParam = other.modelParam_ != null ? other.ModelParam.Clone() : null;
      NetParam = other.netParam_ != null ? other.NetParam.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DenselineParam Clone() {
      return new DenselineParam(this);
    }

    /// <summary>Field number for the "model_param" field.</summary>
    public const int ModelParamFieldNumber = 1;
    private global::Apollo.Perception.Camera.Denseline.ModelParam modelParam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Perception.Camera.Denseline.ModelParam ModelParam {
      get { return modelParam_; }
      set {
        modelParam_ = value;
      }
    }

    /// <summary>Field number for the "net_param" field.</summary>
    public const int NetParamFieldNumber = 2;
    private global::Apollo.Perception.Camera.Denseline.NetworkParam netParam_;
    /// <summary>
    ///NMSParam nms_param = 3;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Perception.Camera.Denseline.NetworkParam NetParam {
      get { return netParam_; }
      set {
        netParam_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DenselineParam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DenselineParam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ModelParam, other.ModelParam)) return false;
      if (!object.Equals(NetParam, other.NetParam)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (modelParam_ != null) hash ^= ModelParam.GetHashCode();
      if (netParam_ != null) hash ^= NetParam.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (modelParam_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ModelParam);
      }
      if (netParam_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NetParam);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (modelParam_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ModelParam);
      }
      if (netParam_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NetParam);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DenselineParam other) {
      if (other == null) {
        return;
      }
      if (other.modelParam_ != null) {
        if (modelParam_ == null) {
          modelParam_ = new global::Apollo.Perception.Camera.Denseline.ModelParam();
        }
        ModelParam.MergeFrom(other.ModelParam);
      }
      if (other.netParam_ != null) {
        if (netParam_ == null) {
          netParam_ = new global::Apollo.Perception.Camera.Denseline.NetworkParam();
        }
        NetParam.MergeFrom(other.NetParam);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (modelParam_ == null) {
              modelParam_ = new global::Apollo.Perception.Camera.Denseline.ModelParam();
            }
            input.ReadMessage(modelParam_);
            break;
          }
          case 18: {
            if (netParam_ == null) {
              netParam_ = new global::Apollo.Perception.Camera.Denseline.NetworkParam();
            }
            input.ReadMessage(netParam_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModelParam : pb::IMessage<ModelParam> {
    private static readonly pb::MessageParser<ModelParam> _parser = new pb::MessageParser<ModelParam>(() => new ModelParam());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModelParam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.Camera.Denseline.DenselineReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelParam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelParam(ModelParam other) : this() {
      modelName_ = other.modelName_;
      protoFile_ = other.protoFile_;
      weightFile_ = other.weightFile_;
      resizeScale_ = other.resizeScale_;
      inputOffsetY_ = other.inputOffsetY_;
      inputOffsetX_ = other.inputOffsetX_;
      cropHeight_ = other.cropHeight_;
      cropWidth_ = other.cropWidth_;
      meanB_ = other.meanB_;
      meanG_ = other.meanG_;
      meanR_ = other.meanR_;
      isBgr_ = other.isBgr_;
      modelType_ = other.modelType_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelParam Clone() {
      return new ModelParam(this);
    }

    /// <summary>Field number for the "model_name" field.</summary>
    public const int ModelNameFieldNumber = 1;
    private string modelName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelName {
      get { return modelName_; }
      set {
        modelName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "proto_file" field.</summary>
    public const int ProtoFileFieldNumber = 2;
    private string protoFile_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProtoFile {
      get { return protoFile_; }
      set {
        protoFile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "weight_file" field.</summary>
    public const int WeightFileFieldNumber = 3;
    private string weightFile_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WeightFile {
      get { return weightFile_; }
      set {
        weightFile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "resize_scale" field.</summary>
    public const int ResizeScaleFieldNumber = 4;
    private float resizeScale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float ResizeScale {
      get { return resizeScale_; }
      set {
        resizeScale_ = value;
      }
    }

    /// <summary>Field number for the "input_offset_y" field.</summary>
    public const int InputOffsetYFieldNumber = 5;
    private uint inputOffsetY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint InputOffsetY {
      get { return inputOffsetY_; }
      set {
        inputOffsetY_ = value;
      }
    }

    /// <summary>Field number for the "input_offset_x" field.</summary>
    public const int InputOffsetXFieldNumber = 6;
    private uint inputOffsetX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint InputOffsetX {
      get { return inputOffsetX_; }
      set {
        inputOffsetX_ = value;
      }
    }

    /// <summary>Field number for the "crop_height" field.</summary>
    public const int CropHeightFieldNumber = 7;
    private uint cropHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CropHeight {
      get { return cropHeight_; }
      set {
        cropHeight_ = value;
      }
    }

    /// <summary>Field number for the "crop_width" field.</summary>
    public const int CropWidthFieldNumber = 8;
    private uint cropWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CropWidth {
      get { return cropWidth_; }
      set {
        cropWidth_ = value;
      }
    }

    /// <summary>Field number for the "mean_b" field.</summary>
    public const int MeanBFieldNumber = 9;
    private uint meanB_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MeanB {
      get { return meanB_; }
      set {
        meanB_ = value;
      }
    }

    /// <summary>Field number for the "mean_g" field.</summary>
    public const int MeanGFieldNumber = 10;
    private uint meanG_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MeanG {
      get { return meanG_; }
      set {
        meanG_ = value;
      }
    }

    /// <summary>Field number for the "mean_r" field.</summary>
    public const int MeanRFieldNumber = 11;
    private uint meanR_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MeanR {
      get { return meanR_; }
      set {
        meanR_ = value;
      }
    }

    /// <summary>Field number for the "is_bgr" field.</summary>
    public const int IsBgrFieldNumber = 12;
    private bool isBgr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBgr {
      get { return isBgr_; }
      set {
        isBgr_ = value;
      }
    }

    /// <summary>Field number for the "model_type" field.</summary>
    public const int ModelTypeFieldNumber = 13;
    private string modelType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelType {
      get { return modelType_; }
      set {
        modelType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModelParam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModelParam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ModelName != other.ModelName) return false;
      if (ProtoFile != other.ProtoFile) return false;
      if (WeightFile != other.WeightFile) return false;
      if (ResizeScale != other.ResizeScale) return false;
      if (InputOffsetY != other.InputOffsetY) return false;
      if (InputOffsetX != other.InputOffsetX) return false;
      if (CropHeight != other.CropHeight) return false;
      if (CropWidth != other.CropWidth) return false;
      if (MeanB != other.MeanB) return false;
      if (MeanG != other.MeanG) return false;
      if (MeanR != other.MeanR) return false;
      if (IsBgr != other.IsBgr) return false;
      if (ModelType != other.ModelType) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ModelName.Length != 0) hash ^= ModelName.GetHashCode();
      if (ProtoFile.Length != 0) hash ^= ProtoFile.GetHashCode();
      if (WeightFile.Length != 0) hash ^= WeightFile.GetHashCode();
      if (ResizeScale != 0F) hash ^= ResizeScale.GetHashCode();
      if (InputOffsetY != 0) hash ^= InputOffsetY.GetHashCode();
      if (InputOffsetX != 0) hash ^= InputOffsetX.GetHashCode();
      if (CropHeight != 0) hash ^= CropHeight.GetHashCode();
      if (CropWidth != 0) hash ^= CropWidth.GetHashCode();
      if (MeanB != 0) hash ^= MeanB.GetHashCode();
      if (MeanG != 0) hash ^= MeanG.GetHashCode();
      if (MeanR != 0) hash ^= MeanR.GetHashCode();
      if (IsBgr != false) hash ^= IsBgr.GetHashCode();
      if (ModelType.Length != 0) hash ^= ModelType.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ModelName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ModelName);
      }
      if (ProtoFile.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProtoFile);
      }
      if (WeightFile.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(WeightFile);
      }
      if (ResizeScale != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(ResizeScale);
      }
      if (InputOffsetY != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(InputOffsetY);
      }
      if (InputOffsetX != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(InputOffsetX);
      }
      if (CropHeight != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(CropHeight);
      }
      if (CropWidth != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(CropWidth);
      }
      if (MeanB != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(MeanB);
      }
      if (MeanG != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(MeanG);
      }
      if (MeanR != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(MeanR);
      }
      if (IsBgr != false) {
        output.WriteRawTag(96);
        output.WriteBool(IsBgr);
      }
      if (ModelType.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(ModelType);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ModelName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelName);
      }
      if (ProtoFile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProtoFile);
      }
      if (WeightFile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WeightFile);
      }
      if (ResizeScale != 0F) {
        size += 1 + 4;
      }
      if (InputOffsetY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InputOffsetY);
      }
      if (InputOffsetX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InputOffsetX);
      }
      if (CropHeight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CropHeight);
      }
      if (CropWidth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CropWidth);
      }
      if (MeanB != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MeanB);
      }
      if (MeanG != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MeanG);
      }
      if (MeanR != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MeanR);
      }
      if (IsBgr != false) {
        size += 1 + 1;
      }
      if (ModelType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelType);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModelParam other) {
      if (other == null) {
        return;
      }
      if (other.ModelName.Length != 0) {
        ModelName = other.ModelName;
      }
      if (other.ProtoFile.Length != 0) {
        ProtoFile = other.ProtoFile;
      }
      if (other.WeightFile.Length != 0) {
        WeightFile = other.WeightFile;
      }
      if (other.ResizeScale != 0F) {
        ResizeScale = other.ResizeScale;
      }
      if (other.InputOffsetY != 0) {
        InputOffsetY = other.InputOffsetY;
      }
      if (other.InputOffsetX != 0) {
        InputOffsetX = other.InputOffsetX;
      }
      if (other.CropHeight != 0) {
        CropHeight = other.CropHeight;
      }
      if (other.CropWidth != 0) {
        CropWidth = other.CropWidth;
      }
      if (other.MeanB != 0) {
        MeanB = other.MeanB;
      }
      if (other.MeanG != 0) {
        MeanG = other.MeanG;
      }
      if (other.MeanR != 0) {
        MeanR = other.MeanR;
      }
      if (other.IsBgr != false) {
        IsBgr = other.IsBgr;
      }
      if (other.ModelType.Length != 0) {
        ModelType = other.ModelType;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ModelName = input.ReadString();
            break;
          }
          case 18: {
            ProtoFile = input.ReadString();
            break;
          }
          case 26: {
            WeightFile = input.ReadString();
            break;
          }
          case 37: {
            ResizeScale = input.ReadFloat();
            break;
          }
          case 40: {
            InputOffsetY = input.ReadUInt32();
            break;
          }
          case 48: {
            InputOffsetX = input.ReadUInt32();
            break;
          }
          case 56: {
            CropHeight = input.ReadUInt32();
            break;
          }
          case 64: {
            CropWidth = input.ReadUInt32();
            break;
          }
          case 72: {
            MeanB = input.ReadUInt32();
            break;
          }
          case 80: {
            MeanG = input.ReadUInt32();
            break;
          }
          case 88: {
            MeanR = input.ReadUInt32();
            break;
          }
          case 96: {
            IsBgr = input.ReadBool();
            break;
          }
          case 106: {
            ModelType = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NetworkParam : pb::IMessage<NetworkParam> {
    private static readonly pb::MessageParser<NetworkParam> _parser = new pb::MessageParser<NetworkParam>(() => new NetworkParam());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetworkParam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.Camera.Denseline.DenselineReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkParam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkParam(NetworkParam other) : this() {
      inBlob_ = other.inBlob_;
      outBlob_ = other.outBlob_;
      internalBlobInt8_ = other.internalBlobInt8_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkParam Clone() {
      return new NetworkParam(this);
    }

    /// <summary>Field number for the "in_blob" field.</summary>
    public const int InBlobFieldNumber = 1;
    private string inBlob_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InBlob {
      get { return inBlob_; }
      set {
        inBlob_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "out_blob" field.</summary>
    public const int OutBlobFieldNumber = 2;
    private string outBlob_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OutBlob {
      get { return outBlob_; }
      set {
        outBlob_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "internal_blob_int8" field.</summary>
    public const int InternalBlobInt8FieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_internalBlobInt8_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> internalBlobInt8_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> InternalBlobInt8 {
      get { return internalBlobInt8_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetworkParam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetworkParam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InBlob != other.InBlob) return false;
      if (OutBlob != other.OutBlob) return false;
      if(!internalBlobInt8_.Equals(other.internalBlobInt8_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InBlob.Length != 0) hash ^= InBlob.GetHashCode();
      if (OutBlob.Length != 0) hash ^= OutBlob.GetHashCode();
      hash ^= internalBlobInt8_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InBlob.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InBlob);
      }
      if (OutBlob.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OutBlob);
      }
      internalBlobInt8_.WriteTo(output, _repeated_internalBlobInt8_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InBlob.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InBlob);
      }
      if (OutBlob.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OutBlob);
      }
      size += internalBlobInt8_.CalculateSize(_repeated_internalBlobInt8_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetworkParam other) {
      if (other == null) {
        return;
      }
      if (other.InBlob.Length != 0) {
        InBlob = other.InBlob;
      }
      if (other.OutBlob.Length != 0) {
        OutBlob = other.OutBlob;
      }
      internalBlobInt8_.Add(other.internalBlobInt8_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            InBlob = input.ReadString();
            break;
          }
          case 18: {
            OutBlob = input.ReadString();
            break;
          }
          case 26: {
            internalBlobInt8_.AddEntriesFrom(input, _repeated_internalBlobInt8_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
