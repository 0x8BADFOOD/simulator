// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/canbus/proto/ge3.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Apollo.Canbus {

  /// <summary>Holder for reflection information generated from modules/canbus/proto/ge3.proto</summary>
  public static partial class Ge3Reflection {

    #region Descriptor
    /// <summary>File descriptor for modules/canbus/proto/ge3.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Ge3Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5tb2R1bGVzL2NhbmJ1cy9wcm90by9nZTMucHJvdG8SDWFwb2xsby5jYW5i",
            "dXMimwgKClBjX2JjbV8yMDESSgoRcGNfcmV2ZXJzZWxhbXByZXEYASABKA4y",
            "Ly5hcG9sbG8uY2FuYnVzLlBjX2JjbV8yMDEuUGNfcmV2ZXJzZWxhbXByZXFU",
            "eXBlEkIKDXBjX2xvd2JlYW1yZXEYAiABKA4yKy5hcG9sbG8uY2FuYnVzLlBj",
            "X2JjbV8yMDEuUGNfbG93YmVhbXJlcVR5cGUSRAoOcGNfaGlnaGJlYW1yZXEY",
            "AyABKA4yLC5hcG9sbG8uY2FuYnVzLlBjX2JjbV8yMDEuUGNfaGlnaGJlYW1y",
            "ZXFUeXBlEk4KE3BjX3JpZ2h0dHVybmxhbXByZXEYBCABKA4yMS5hcG9sbG8u",
            "Y2FuYnVzLlBjX2JjbV8yMDEuUGNfcmlnaHR0dXJubGFtcHJlcVR5cGUSTAoS",
            "cGNfbGVmdHR1cm5sYW1wcmVxGAUgASgOMjAuYXBvbGxvLmNhbmJ1cy5QY19i",
            "Y21fMjAxLlBjX2xlZnR0dXJubGFtcHJlcVR5cGUSPAoKcGNfaG9ybnJlcRgG",
            "IAEoDjIoLmFwb2xsby5jYW5idXMuUGNfYmNtXzIwMS5QY19ob3JucmVxVHlw",
            "ZRJIChBwY19oYXphcmRsYW1wcmVxGAcgASgOMi4uYXBvbGxvLmNhbmJ1cy5Q",
            "Y19iY21fMjAxLlBjX2hhemFyZGxhbXByZXFUeXBlIk8KFVBjX3JldmVyc2Vs",
            "YW1wcmVxVHlwZRIbChdQQ19SRVZFUlNFTEFNUFJFUV9OT1JFURAAEhkKFVBD",
            "X1JFVkVSU0VMQU1QUkVRX1JFURABIkMKEVBjX2xvd2JlYW1yZXFUeXBlEhcK",
            "E1BDX0xPV0JFQU1SRVFfTk9SRVEQABIVChFQQ19MT1dCRUFNUkVRX1JFURAB",
            "IkYKElBjX2hpZ2hiZWFtcmVxVHlwZRIYChRQQ19ISUdIQkVBTVJFUV9OT1JF",
            "URAAEhYKElBDX0hJR0hCRUFNUkVRX1JFURABIlUKF1BjX3JpZ2h0dHVybmxh",
            "bXByZXFUeXBlEh0KGVBDX1JJR0hUVFVSTkxBTVBSRVFfTk9SRVEQABIbChdQ",
            "Q19SSUdIVFRVUk5MQU1QUkVRX1JFURABIlIKFlBjX2xlZnR0dXJubGFtcHJl",
            "cVR5cGUSHAoYUENfTEVGVFRVUk5MQU1QUkVRX05PUkVREAASGgoWUENfTEVG",
            "VFRVUk5MQU1QUkVRX1JFURABIjoKDlBjX2hvcm5yZXFUeXBlEhQKEFBDX0hP",
            "Uk5SRVFfTk9SRVEQABISCg5QQ19IT1JOUkVRX1JFURABIkwKFFBjX2hhemFy",
            "ZGxhbXByZXFUeXBlEhoKFlBDX0hBWkFSRExBTVBSRVFfTk9SRVEQABIYChRQ",
            "Q19IQVpBUkRMQU1QUkVRX1JFURABIrcRCg1TY3VfYmNzXzNfMzA4EksKEGJj",
            "c19ycndoZWVsc3BkdmQYASABKA4yMS5hcG9sbG8uY2FuYnVzLlNjdV9iY3Nf",
            "M18zMDguQmNzX3Jyd2hlZWxzcGR2ZFR5cGUSVwoWYmNzX3Jyd2hlZWxkaXJl",
            "Y3Rpb252ZBgCIAEoDjI3LmFwb2xsby5jYW5idXMuU2N1X2Jjc18zXzMwOC5C",
            "Y3NfcnJ3aGVlbGRpcmVjdGlvbnZkVHlwZRJLChBiY3Nfcmx3aGVlbHNwZHZk",
            "GAMgASgOMjEuYXBvbGxvLmNhbmJ1cy5TY3VfYmNzXzNfMzA4LkJjc19ybHdo",
            "ZWVsc3BkdmRUeXBlElcKFmJjc19ybHdoZWVsZGlyZWN0aW9udmQYBCABKA4y",
            "Ny5hcG9sbG8uY2FuYnVzLlNjdV9iY3NfM18zMDguQmNzX3Jsd2hlZWxkaXJl",
            "Y3Rpb252ZFR5cGUSSwoQYmNzX2Zyd2hlZWxzcGR2ZBgFIAEoDjIxLmFwb2xs",
            "by5jYW5idXMuU2N1X2Jjc18zXzMwOC5CY3NfZnJ3aGVlbHNwZHZkVHlwZRJX",
            "ChZiY3NfZnJ3aGVlbGRpcmVjdGlvbnZkGAYgASgOMjcuYXBvbGxvLmNhbmJ1",
            "cy5TY3VfYmNzXzNfMzA4LkJjc19mcndoZWVsZGlyZWN0aW9udmRUeXBlEksK",
            "EGJjc19mbHdoZWVsc3BkdmQYByABKA4yMS5hcG9sbG8uY2FuYnVzLlNjdV9i",
            "Y3NfM18zMDguQmNzX2Zsd2hlZWxzcGR2ZFR5cGUSVwoWYmNzX2Zsd2hlZWxk",
            "aXJlY3Rpb252ZBgIIAEoDjI3LmFwb2xsby5jYW5idXMuU2N1X2Jjc18zXzMw",
            "OC5CY3NfZmx3aGVlbGRpcmVjdGlvbnZkVHlwZRIWCg5iY3NfcnJ3aGVlbHNw",
            "ZBgJIAEoARJTChRiY3NfcnJ3aGVlbGRpcmVjdGlvbhgKIAEoDjI1LmFwb2xs",
            "by5jYW5idXMuU2N1X2Jjc18zXzMwOC5CY3NfcnJ3aGVlbGRpcmVjdGlvblR5",
            "cGUSFgoOYmNzX3Jsd2hlZWxzcGQYCyABKAESUwoUYmNzX3Jsd2hlZWxkaXJl",
            "Y3Rpb24YDCABKA4yNS5hcG9sbG8uY2FuYnVzLlNjdV9iY3NfM18zMDguQmNz",
            "X3Jsd2hlZWxkaXJlY3Rpb25UeXBlEhYKDmJjc19mcndoZWVsc3BkGA0gASgB",
            "ElMKFGJjc19mcndoZWVsZGlyZWN0aW9uGA4gASgOMjUuYXBvbGxvLmNhbmJ1",
            "cy5TY3VfYmNzXzNfMzA4LkJjc19mcndoZWVsZGlyZWN0aW9uVHlwZRIWCg5i",
            "Y3NfZmx3aGVlbHNwZBgPIAEoARJTChRiY3NfZmx3aGVlbGRpcmVjdGlvbhgQ",
            "IAEoDjI1LmFwb2xsby5jYW5idXMuU2N1X2Jjc18zXzMwOC5CY3NfZmx3aGVl",
            "bGRpcmVjdGlvblR5cGUiUAoUQmNzX3Jyd2hlZWxzcGR2ZFR5cGUSHAoYQkNT",
            "X1JSV0hFRUxTUERWRF9JTlZBTElEEAASGgoWQkNTX1JSV0hFRUxTUERWRF9W",
            "QUxJRBABImIKGkJjc19ycndoZWVsZGlyZWN0aW9udmRUeXBlEiIKHkJDU19S",
            "UldIRUVMRElSRUNUSU9OVkRfSU5WQUxJRBAAEiAKHEJDU19SUldIRUVMRElS",
            "RUNUSU9OVkRfVkFMSUQQASJQChRCY3Nfcmx3aGVlbHNwZHZkVHlwZRIcChhC",
            "Q1NfUkxXSEVFTFNQRFZEX0lOVkFMSUQQABIaChZCQ1NfUkxXSEVFTFNQRFZE",
            "X1ZBTElEEAEiYgoaQmNzX3Jsd2hlZWxkaXJlY3Rpb252ZFR5cGUSIgoeQkNT",
            "X1JMV0hFRUxESVJFQ1RJT05WRF9JTlZBTElEEAASIAocQkNTX1JMV0hFRUxE",
            "SVJFQ1RJT05WRF9WQUxJRBABIlAKFEJjc19mcndoZWVsc3BkdmRUeXBlEhwK",
            "GEJDU19GUldIRUVMU1BEVkRfSU5WQUxJRBAAEhoKFkJDU19GUldIRUVMU1BE",
            "VkRfVkFMSUQQASJiChpCY3NfZnJ3aGVlbGRpcmVjdGlvbnZkVHlwZRIiCh5C",
            "Q1NfRlJXSEVFTERJUkVDVElPTlZEX0lOVkFMSUQQABIgChxCQ1NfRlJXSEVF",
            "TERJUkVDVElPTlZEX1ZBTElEEAEiUAoUQmNzX2Zsd2hlZWxzcGR2ZFR5cGUS",
            "HAoYQkNTX0ZMV0hFRUxTUERWRF9JTlZBTElEEAASGgoWQkNTX0ZMV0hFRUxT",
            "UERWRF9WQUxJRBABImIKGkJjc19mbHdoZWVsZGlyZWN0aW9udmRUeXBlEiIK",
            "HkJDU19GTFdIRUVMRElSRUNUSU9OVkRfSU5WQUxJRBAAEiAKHEJDU19GTFdI",
            "RUVMRElSRUNUSU9OVkRfVkFMSUQQASJfChhCY3NfcnJ3aGVlbGRpcmVjdGlv",
            "blR5cGUSIAocQkNTX1JSV0hFRUxESVJFQ1RJT05fRk9SV0FSRBAAEiEKHUJD",
            "U19SUldIRUVMRElSRUNUSU9OX0JBQ0tXQVJEEAEiXwoYQmNzX3Jsd2hlZWxk",
            "aXJlY3Rpb25UeXBlEiAKHEJDU19STFdIRUVMRElSRUNUSU9OX0ZPUldBUkQQ",
            "ABIhCh1CQ1NfUkxXSEVFTERJUkVDVElPTl9CQUNLV0FSRBABIl8KGEJjc19m",
            "cndoZWVsZGlyZWN0aW9uVHlwZRIgChxCQ1NfRlJXSEVFTERJUkVDVElPTl9G",
            "T1JXQVJEEAASIQodQkNTX0ZSV0hFRUxESVJFQ1RJT05fQkFDS1dBUkQQASJf",
            "ChhCY3NfZmx3aGVlbGRpcmVjdGlvblR5cGUSIAocQkNTX0ZMV0hFRUxESVJF",
            "Q1RJT05fRk9SV0FSRBAAEiEKHUJDU19GTFdIRUVMRElSRUNUSU9OX0JBQ0tX",
            "QVJEEAEipQIKClBjX2VwYl8yMDMSOgoJcGNfZXBicmVxGAEgASgOMicuYXBv",
            "bGxvLmNhbmJ1cy5QY19lcGJfMjAzLlBjX2VwYnJlcVR5cGUSQAoMcGNfZXBi",
            "ZW5hYmxlGAIgASgOMiouYXBvbGxvLmNhbmJ1cy5QY19lcGJfMjAzLlBjX2Vw",
            "YmVuYWJsZVR5cGUiUgoNUGNfZXBicmVxVHlwZRIVChFQQ19FUEJSRVFfSU5W",
            "QUxJRBAAEhUKEVBDX0VQQlJFUV9SRUxFQVNFEAESEwoPUENfRVBCUkVRX0FQ",
            "UExZEAIiRQoQUGNfZXBiZW5hYmxlVHlwZRIYChRQQ19FUEJFTkFCTEVfRElT",
            "QUJMRRAAEhcKE1BDX0VQQkVOQUJMRV9FTkFCTEUQASK6AQoKUGNfYmNzXzIw",
            "MhIUCgxwY19icmtwZWRyZXEYASABKAESRgoPcGNfYnJrcGVkZW5hYmxlGAIg",
            "ASgOMi0uYXBvbGxvLmNhbmJ1cy5QY19iY3NfMjAyLlBjX2Jya3BlZGVuYWJs",
            "ZVR5cGUiTgoTUGNfYnJrcGVkZW5hYmxlVHlwZRIbChdQQ19CUktQRURFTkFC",
            "TEVfRElTQUJMRRAAEhoKFlBDX0JSS1BFREVOQUJMRV9FTkFCTEUQASKuBQoK",
            "UGNfdmN1XzIwNRIUCgxwY19hY2NwZWRyZXEYASABKAESRgoPcGNfYWNjcGVk",
            "ZW5hYmxlGAIgASgOMi0uYXBvbGxvLmNhbmJ1cy5QY192Y3VfMjA1LlBjX2Fj",
            "Y3BlZGVuYWJsZVR5cGUSEgoKcGNfdG9ycXJlcRgDIAEoARJCCg1wY190b3Jx",
            "ZW5hYmxlGAQgASgOMisuYXBvbGxvLmNhbmJ1cy5QY192Y3VfMjA1LlBjX3Rv",
            "cnFlbmFibGVUeXBlEjwKCnBjX2dlYXJyZXEYBSABKA4yKC5hcG9sbG8uY2Fu",
            "YnVzLlBjX3ZjdV8yMDUuUGNfZ2VhcnJlcVR5cGUSQgoNcGNfZ2VhcmVuYWJs",
            "ZRgGIAEoDjIrLmFwb2xsby5jYW5idXMuUGNfdmN1XzIwNS5QY19nZWFyZW5h",
            "YmxlVHlwZSJOChNQY19hY2NwZWRlbmFibGVUeXBlEhsKF1BDX0FDQ1BFREVO",
            "QUJMRV9ESVNBQkxFEAASGgoWUENfQUNDUEVERU5BQkxFX0VOQUJMRRABIkgK",
            "EVBjX3RvcnFlbmFibGVUeXBlEhkKFVBDX1RPUlFFTkFCTEVfRElTQUJMRRAA",
            "EhgKFFBDX1RPUlFFTkFCTEVfRU5BQkxFEAEigwEKDlBjX2dlYXJyZXFUeXBl",
            "EhYKElBDX0dFQVJSRVFfSU5WQUxJRBAAEhQKEFBDX0dFQVJSRVFfRFJJVkUQ",
            "ARIWChJQQ19HRUFSUkVRX05FVVRSQUwQAhIWChJQQ19HRUFSUkVRX1JFVkVS",
            "U0UQAxITCg9QQ19HRUFSUkVRX1BBUksQBCJIChFQY19nZWFyZW5hYmxlVHlw",
            "ZRIZChVQQ19HRUFSRU5BQkxFX0RJU0FCTEUQABIYChRQQ19HRUFSRU5BQkxF",
            "X0VOQUJMRRABIs8BCgpQY19lcHNfMjA0EhYKDnBjX3N0ZWVyc3BkcmVxGAEg",
            "ASgFEkQKDnBjX3N0ZWVyZW5hYmxlGAIgASgOMiwuYXBvbGxvLmNhbmJ1cy5Q",
            "Y19lcHNfMjA0LlBjX3N0ZWVyZW5hYmxlVHlwZRIWCg5wY19zdGVlcmFuZ3Jl",
            "cRgDIAEoASJLChJQY19zdGVlcmVuYWJsZVR5cGUSGgoWUENfU1RFRVJFTkFC",
            "TEVfRElTQUJMRRAAEhkKFVBDX1NURUVSRU5BQkxFX0VOQUJMRRABImgKDVNj",
            "dV92Y3VfMl8zMTMSFgoOdmN1X3RvcnFwb3NtYXgYASABKAESFgoOdmN1X3Rv",
            "cnFuZWdtYXgYAiABKAESEwoLdmN1X3RvcnFhY3QYAyABKAESEgoKdmN1X2Vu",
            "Z3NwZBgEIAEoBSLfAwoJU2N1XzFfMzAxEg0KBXZpbjE2GAEgASgFEkEKDXNj",
            "dV9zdG9wYnV0c3QYAiABKA4yKi5hcG9sbG8uY2FuYnVzLlNjdV8xXzMwMS5T",
            "Y3Vfc3RvcGJ1dHN0VHlwZRI9CgtzY3VfZHJ2bW9kZRgDIAEoDjIoLmFwb2xs",
            "by5jYW5idXMuU2N1XzFfMzAxLlNjdV9kcnZtb2RlVHlwZRI9CgtzY3VfZmF1",
            "bHRzdBgEIAEoDjIoLmFwb2xsby5jYW5idXMuU2N1XzFfMzAxLlNjdV9mYXVs",
            "dHN0VHlwZSJLChFTY3Vfc3RvcGJ1dHN0VHlwZRIbChdTQ1VfU1RPUEJVVFNU",
            "X1VOUFJFU1NFRBAAEhkKFVNDVV9TVE9QQlVUU1RfUFJFU1NFRBABInMKD1Nj",
            "dV9kcnZtb2RlVHlwZRIXChNTQ1VfRFJWTU9ERV9JTlZBTElEEAASFgoSU0NV",
            "X0RSVk1PREVfTUFOVUFMEAESGQoVU0NVX0RSVk1PREVfSU5URVJSVVBUEAIS",
            "FAoQU0NVX0RSVk1PREVfQVVUTxADIkAKD1NjdV9mYXVsdHN0VHlwZRIWChJT",
            "Q1VfRkFVTFRTVF9OT1JNQUwQABIVChFTQ1VfRkFVTFRTVF9GQVVMVBABIoMB",
            "CglTY3VfMl8zMDISDQoFdmluMDcYASABKAUSDQoFdmluMDYYAiABKAUSDQoF",
            "dmluMDUYAyABKAUSDQoFdmluMDQYBCABKAUSDQoFdmluMDMYBSABKAUSDQoF",
            "dmluMDIYBiABKAUSDQoFdmluMDEYByABKAUSDQoFdmluMDAYCCABKAUigwEK",
            "CVNjdV8zXzMwMxINCgV2aW4xNRgBIAEoBRINCgV2aW4xNBgCIAEoBRINCgV2",
            "aW4xMxgDIAEoBRINCgV2aW4xMhgEIAEoBRINCgV2aW4xMRgFIAEoBRINCgV2",
            "aW4xMBgGIAEoBRINCgV2aW4wORgHIAEoBRINCgV2aW4wOBgIIAEoBSKQDwoL",
            "U2N1X2JjbV8zMDQSSQoQYmNtX3ZlaHJldmVyc2VzdBgBIAEoDjIvLmFwb2xs",
            "by5jYW5idXMuU2N1X2JjbV8zMDQuQmNtX3ZlaHJldmVyc2VzdFR5cGUSTwoT",
            "YmNtX3JpZ2h0dHVybmxhbXBzdBgCIAEoDjIyLmFwb2xsby5jYW5idXMuU2N1",
            "X2JjbV8zMDQuQmNtX3JpZ2h0dHVybmxhbXBzdFR5cGUSSwoRYmNtX3JlYXJm",
            "b2dsYW1wc3QYAyABKA4yMC5hcG9sbG8uY2FuYnVzLlNjdV9iY21fMzA0LkJj",
            "bV9yZWFyZm9nbGFtcHN0VHlwZRJLChFiY21fcGFya2luZ2xhbXBzdBgEIAEo",
            "DjIwLmFwb2xsby5jYW5idXMuU2N1X2JjbV8zMDQuQmNtX3BhcmtpbmdsYW1w",
            "c3RUeXBlEkMKDWJjbV9sb3diZWFtc3QYBSABKA4yLC5hcG9sbG8uY2FuYnVz",
            "LlNjdV9iY21fMzA0LkJjbV9sb3diZWFtc3RUeXBlEk0KEmJjbV9sZWZ0dHVy",
            "bmxhbXBzdBgGIAEoDjIxLmFwb2xsby5jYW5idXMuU2N1X2JjbV8zMDQuQmNt",
            "X2xlZnR0dXJubGFtcHN0VHlwZRI7CgliY21fa2V5c3QYByABKA4yKC5hcG9s",
            "bG8uY2FuYnVzLlNjdV9iY21fMzA0LkJjbV9rZXlzdFR5cGUSPQoKYmNtX2hv",
            "cm5zdBgIIAEoDjIpLmFwb2xsby5jYW5idXMuU2N1X2JjbV8zMDQuQmNtX2hv",
            "cm5zdFR5cGUSRQoOYmNtX2hpZ2hiZWFtc3QYCSABKA4yLS5hcG9sbG8uY2Fu",
            "YnVzLlNjdV9iY21fMzA0LkJjbV9oaWdoYmVhbXN0VHlwZRJJChBiY21faGF6",
            "YXJkbGFtcHN0GAogASgOMi8uYXBvbGxvLmNhbmJ1cy5TY3VfYmNtXzMwNC5C",
            "Y21faGF6YXJkbGFtcHN0VHlwZRJNChJiY21fZnJvbnRmb2dsYW1wc3QYCyAB",
            "KA4yMS5hcG9sbG8uY2FuYnVzLlNjdV9iY21fMzA0LkJjbV9mcm9udGZvZ2xh",
            "bXBzdFR5cGUSVQoWYmNtX2JyYWtlbGlnaHRzd2l0Y2hzdBgMIAEoDjI1LmFw",
            "b2xsby5jYW5idXMuU2N1X2JjbV8zMDQuQmNtX2JyYWtlbGlnaHRzd2l0Y2hz",
            "dFR5cGUiUQoUQmNtX3ZlaHJldmVyc2VzdFR5cGUSGwoXQkNNX1ZFSFJFVkVS",
            "U0VTVF9OT1JNQUwQABIcChhCQ01fVkVIUkVWRVJTRVNUX1JFVkVSU0UQASJb",
            "ChdCY21fcmlnaHR0dXJubGFtcHN0VHlwZRIgChxCQ01fUklHSFRUVVJOTEFN",
            "UFNUX0lOQUNUSVZFEAASHgoaQkNNX1JJR0hUVFVSTkxBTVBTVF9BQ1RJVkUQ",
            "ASJVChVCY21fcmVhcmZvZ2xhbXBzdFR5cGUSHgoaQkNNX1JFQVJGT0dMQU1Q",
            "U1RfSU5BQ1RJVkUQABIcChhCQ01fUkVBUkZPR0xBTVBTVF9BQ1RJVkUQASJV",
            "ChVCY21fcGFya2luZ2xhbXBzdFR5cGUSHgoaQkNNX1BBUktJTkdMQU1QU1Rf",
            "SU5BQ1RJVkUQABIcChhCQ01fUEFSS0lOR0xBTVBTVF9BQ1RJVkUQASJJChFC",
            "Y21fbG93YmVhbXN0VHlwZRIaChZCQ01fTE9XQkVBTVNUX0lOQUNUSVZFEAAS",
            "GAoUQkNNX0xPV0JFQU1TVF9BQ1RJVkUQASJYChZCY21fbGVmdHR1cm5sYW1w",
            "c3RUeXBlEh8KG0JDTV9MRUZUVFVSTkxBTVBTVF9JTkFDVElWRRAAEh0KGUJD",
            "TV9MRUZUVFVSTkxBTVBTVF9BQ1RJVkUQASJcCg1CY21fa2V5c3RUeXBlEhEK",
            "DUJDTV9LRVlTVF9PRkYQABIRCg1CQ01fS0VZU1RfQUNDEAESEAoMQkNNX0tF",
            "WVNUX09OEAISEwoPQkNNX0tFWVNUX0NSQU5LEAMiQAoOQmNtX2hvcm5zdFR5",
            "cGUSFwoTQkNNX0hPUk5TVF9JTkFDVElWRRAAEhUKEUJDTV9IT1JOU1RfQUNU",
            "SVZFEAEiTAoSQmNtX2hpZ2hiZWFtc3RUeXBlEhsKF0JDTV9ISUdIQkVBTVNU",
            "X0lOQUNUSVZFEAASGQoVQkNNX0hJR0hCRUFNU1RfQUNUSVZFEAEiUgoUQmNt",
            "X2hhemFyZGxhbXBzdFR5cGUSHQoZQkNNX0hBWkFSRExBTVBTVF9JTkFDVElW",
            "RRAAEhsKF0JDTV9IQVpBUkRMQU1QU1RfQUNUSVZFEAEiWAoWQmNtX2Zyb250",
            "Zm9nbGFtcHN0VHlwZRIfChtCQ01fRlJPTlRGT0dMQU1QU1RfSU5BQ1RJVkUQ",
            "ABIdChlCQ01fRlJPTlRGT0dMQU1QU1RfQUNUSVZFEAEiZAoaQmNtX2JyYWtl",
            "bGlnaHRzd2l0Y2hzdFR5cGUSIwofQkNNX0JSQUtFTElHSFRTV0lUQ0hTVF9J",
            "TkFDVElWRRAAEiEKHUJDTV9CUkFLRUxJR0hUU1dJVENIU1RfQUNUSVZFEAEi",
            "+AsKDVNjdV9iY3NfMV8zMDYSSwoQYmNzX2FlYmF2YWlsYWJsZRgBIAEoDjIx",
            "LmFwb2xsby5jYW5idXMuU2N1X2Jjc18xXzMwNi5CY3NfYWViYXZhaWxhYmxl",
            "VHlwZRJLChBiY3NfY2RkYXZhaWxhYmxlGAIgASgOMjEuYXBvbGxvLmNhbmJ1",
            "cy5TY3VfYmNzXzFfMzA2LkJjc19jZGRhdmFpbGFibGVUeXBlEhUKDWJjc19i",
            "cmtwZWRhY3QYAyABKAESPwoKYmNzX2ludGlkeBgEIAEoDjIrLmFwb2xsby5j",
            "YW5idXMuU2N1X2Jjc18xXzMwNi5CY3NfaW50aWR4VHlwZRJHCg5iY3NfdmRj",
            "ZmF1bHRzdBgFIAEoDjIvLmFwb2xsby5jYW5idXMuU2N1X2Jjc18xXzMwNi5C",
            "Y3NfdmRjZmF1bHRzdFR5cGUSSQoPYmNzX3ZkY2FjdGl2ZXN0GAYgASgOMjAu",
            "YXBvbGxvLmNhbmJ1cy5TY3VfYmNzXzFfMzA2LkJjc192ZGNhY3RpdmVzdFR5",
            "cGUSRwoOYmNzX2Fic2ZhdWx0c3QYByABKA4yLy5hcG9sbG8uY2FuYnVzLlNj",
            "dV9iY3NfMV8zMDYuQmNzX2Fic2ZhdWx0c3RUeXBlEkkKD2Jjc19hYnNhY3Rp",
            "dmVzdBgIIAEoDjIwLmFwb2xsby5jYW5idXMuU2N1X2Jjc18xXzMwNi5CY3Nf",
            "YWJzYWN0aXZlc3RUeXBlEkEKC2Jjc19mYXVsdHN0GAkgASgOMiwuYXBvbGxv",
            "LmNhbmJ1cy5TY3VfYmNzXzFfMzA2LkJjc19mYXVsdHN0VHlwZRJBCgtiY3Nf",
            "ZHJ2bW9kZRgKIAEoDjIsLmFwb2xsby5jYW5idXMuU2N1X2Jjc18xXzMwNi5C",
            "Y3NfZHJ2bW9kZVR5cGUiWAoUQmNzX2FlYmF2YWlsYWJsZVR5cGUSIAocQkNT",
            "X0FFQkFWQUlMQUJMRV9VTkFWQUlMQUJMRRAAEh4KGkJDU19BRUJBVkFJTEFC",
            "TEVfQVZBSUxBQkxFEAEiWAoUQmNzX2NkZGF2YWlsYWJsZVR5cGUSIAocQkNT",
            "X0NEREFWQUlMQUJMRV9VTkFWQUlMQUJMRRAAEh4KGkJDU19DRERBVkFJTEFC",
            "TEVfQVZBSUxBQkxFEAEiowEKDkJjc19pbnRpZHhUeXBlEhQKEEJDU19JTlRJ",
            "RFhfTk9JTlQQABIXChNCQ1NfSU5USURYX09WRVJGTE9XEAESFgoSQkNTX0lO",
            "VElEWF9USU1FT1VUEAISGAoUQkNTX0lOVElEWF9BQ0NQRURJTlQQAxIYChRC",
            "Q1NfSU5USURYX0JSS1BFRElOVBAEEhYKEkJDU19JTlRJRFhfR0VBUklOVBAF",
            "IkkKEkJjc192ZGNmYXVsdHN0VHlwZRIZChVCQ1NfVkRDRkFVTFRTVF9OT1JN",
            "QUwQABIYChRCQ1NfVkRDRkFVTFRTVF9GQVVMVBABIk8KE0Jjc192ZGNhY3Rp",
            "dmVzdFR5cGUSHAoYQkNTX1ZEQ0FDVElWRVNUX0lOQUNUSVZFEAASGgoWQkNT",
            "X1ZEQ0FDVElWRVNUX0FDVElWRRABIkkKEkJjc19hYnNmYXVsdHN0VHlwZRIZ",
            "ChVCQ1NfQUJTRkFVTFRTVF9OT1JNQUwQABIYChRCQ1NfQUJTRkFVTFRTVF9G",
            "QVVMVBABIk8KE0Jjc19hYnNhY3RpdmVzdFR5cGUSHAoYQkNTX0FCU0FDVElW",
            "RVNUX0lOQUNUSVZFEAASGgoWQkNTX0FCU0FDVElWRVNUX0FDVElWRRABIkAK",
            "D0Jjc19mYXVsdHN0VHlwZRIWChJCQ1NfRkFVTFRTVF9OT1JNQUwQABIVChFC",
            "Q1NfRkFVTFRTVF9GQVVMVBABInMKD0Jjc19kcnZtb2RlVHlwZRIXChNCQ1Nf",
            "RFJWTU9ERV9JTlZBTElEEAASFgoSQkNTX0RSVk1PREVfTUFOVUFMEAESGQoV",
            "QkNTX0RSVk1PREVfSU5URVJSVVBUEAISFAoQQkNTX0RSVk1PREVfQVVUTxAD",
            "IvYBCg1TY3VfYmNzXzJfMzA3EkMKDGJjc192ZWhzcGR2ZBgBIAEoDjItLmFw",
            "b2xsby5jYW5idXMuU2N1X2Jjc18yXzMwNy5CY3NfdmVoc3BkdmRUeXBlEhMK",
            "C2Jjc195YXdyYXRlGAIgASgBEhIKCmJjc192ZWhzcGQYAyABKAESGAoQYmNz",
            "X3ZlaGxvbmdhY2NlbBgEIAEoARIXCg9iY3NfdmVobGF0YWNjZWwYBSABKAEi",
            "RAoQQmNzX3ZlaHNwZHZkVHlwZRIYChRCQ1NfVkVIU1BEVkRfSU5WQUxJRBAA",
            "EhYKEkJDU19WRUhTUERWRF9WQUxJRBABIrwFCgtTY3VfZXBiXzMxMBI9Cgpl",
            "cGJfaW50aWR4GAEgASgOMikuYXBvbGxvLmNhbmJ1cy5TY3VfZXBiXzMxMC5F",
            "cGJfaW50aWR4VHlwZRI/CgtlcGJfZHJ2bW9kZRgCIAEoDjIqLmFwb2xsby5j",
            "YW5idXMuU2N1X2VwYl8zMTAuRXBiX2Rydm1vZGVUeXBlEjsKCWVwYl9zeXNz",
            "dBgDIAEoDjIoLmFwb2xsby5jYW5idXMuU2N1X2VwYl8zMTAuRXBiX3N5c3N0",
            "VHlwZRI/CgtlcGJfZmF1bHRzdBgEIAEoDjIqLmFwb2xsby5jYW5idXMuU2N1",
            "X2VwYl8zMTAuRXBiX2ZhdWx0c3RUeXBlIlcKDkVwYl9pbnRpZHhUeXBlEhQK",
            "EEVQQl9JTlRJRFhfTk9JTlQQABIXChNFUEJfSU5USURYX09WRVJGTE9XEAES",
            "FgoSRVBCX0lOVElEWF9USU1FT1VUEAIicwoPRXBiX2Rydm1vZGVUeXBlEhcK",
            "E0VQQl9EUlZNT0RFX0lOVkFMSUQQABIWChJFUEJfRFJWTU9ERV9NQU5VQUwQ",
            "ARIZChVFUEJfRFJWTU9ERV9JTlRFUlJVUFQQAhIUChBFUEJfRFJWTU9ERV9B",
            "VVRPEAMingEKDUVwYl9zeXNzdFR5cGUSFgoSRVBCX1NZU1NUX1JFTEVBU0VE",
            "EAASFQoRRVBCX1NZU1NUX0FQUExJRUQQARIXChNFUEJfU1lTU1RfUkVMRUFT",
            "SU5HEAISEwoPRVBCX1NZU1NUX0ZBVUxUEAMSFgoSRVBCX1NZU1NUX0FQUExZ",
            "SU5HEAQSGAoURVBCX1NZU1NUX0RJU0VOR0FHRUQQBSJACg9FcGJfZmF1bHRz",
            "dFR5cGUSFgoSRVBCX0ZBVUxUU1RfTk9STUFMEAASFQoRRVBCX0ZBVUxUU1Rf",
            "RkFVTFQQASLZEAoNU2N1X3ZjdV8xXzMxMhJJCg92Y3VfZWxjc3lzZmF1bHQY",
            "ASABKA4yMC5hcG9sbG8uY2FuYnVzLlNjdV92Y3VfMV8zMTIuVmN1X2VsY3N5",
            "c2ZhdWx0VHlwZRJDCgx2Y3VfYnJrcGVkc3QYAiABKA4yLS5hcG9sbG8uY2Fu",
            "YnVzLlNjdV92Y3VfMV8zMTIuVmN1X2Jya3BlZHN0VHlwZRI/Cgp2Y3VfaW50",
            "aWR4GAMgASgOMisuYXBvbGxvLmNhbmJ1cy5TY3VfdmN1XzFfMzEyLlZjdV9p",
            "bnRpZHhUeXBlEkcKDnZjdV9nZWFyaW50aWR4GAQgASgOMi8uYXBvbGxvLmNh",
            "bmJ1cy5TY3VfdmN1XzFfMzEyLlZjdV9nZWFyaW50aWR4VHlwZRJJCg92Y3Vf",
            "Z2VhcmRydm1vZGUYBSABKA4yMC5hcG9sbG8uY2FuYnVzLlNjdV92Y3VfMV8z",
            "MTIuVmN1X2dlYXJkcnZtb2RlVHlwZRIVCg12Y3VfYWNjcGVkYWN0GAYgASgB",
            "EhUKDXZjdV9icmtwZWRwc3QYByABKAESEgoKdmN1X3ZlaHJuZxgIIAEoBRIV",
            "Cg12Y3VfYWNjcGVkcHN0GAkgASgBEkMKDHZjdV92ZWhyZHlzdBgKIAEoDjIt",
            "LmFwb2xsby5jYW5idXMuU2N1X3ZjdV8xXzMxMi5WY3VfdmVocmR5c3RUeXBl",
            "EkEKC3ZjdV9mYXVsdHN0GAsgASgOMiwuYXBvbGxvLmNhbmJ1cy5TY3VfdmN1",
            "XzFfMzEyLlZjdV9mYXVsdHN0VHlwZRJBCgt2Y3VfZHJ2bW9kZRgMIAEoDjIs",
            "LmFwb2xsby5jYW5idXMuU2N1X3ZjdV8xXzMxMi5WY3VfZHJ2bW9kZVR5cGUS",
            "QQoLdmN1X2dlYXJwc3QYDSABKA4yLC5hcG9sbG8uY2FuYnVzLlNjdV92Y3Vf",
            "MV8zMTIuVmN1X2dlYXJwc3RUeXBlEkkKD3ZjdV9nZWFyZmF1bHRzdBgOIAEo",
            "DjIwLmFwb2xsby5jYW5idXMuU2N1X3ZjdV8xXzMxMi5WY3VfZ2VhcmZhdWx0",
            "c3RUeXBlEkEKC3ZjdV9nZWFyYWN0GA8gASgOMiwuYXBvbGxvLmNhbmJ1cy5T",
            "Y3VfdmN1XzFfMzEyLlZjdV9nZWFyYWN0VHlwZSJMChNWY3VfZWxjc3lzZmF1",
            "bHRUeXBlEhoKFlZDVV9FTENTWVNGQVVMVF9OT1JNQUwQABIZChVWQ1VfRUxD",
            "U1lTRkFVTFRfRkFVTFQQASJIChBWY3VfYnJrcGVkc3RUeXBlEhoKFlZDVV9C",
            "UktQRURTVF9VTlBSRVNTRUQQABIYChRWQ1VfQlJLUEVEU1RfUFJFU1NFRBAB",
            "IqMBCg5WY3VfaW50aWR4VHlwZRIUChBWQ1VfSU5USURYX05PSU5UEAASFwoT",
            "VkNVX0lOVElEWF9PVkVSRkxPVxABEhYKElZDVV9JTlRJRFhfVElNRU9VVBAC",
            "EhgKFFZDVV9JTlRJRFhfQUNDUEVESU5UEAMSGAoUVkNVX0lOVElEWF9CUktQ",
            "RURJTlQQBBIWChJWQ1VfSU5USURYX0dFQVJJTlQQBSJnChJWY3VfZ2Vhcmlu",
            "dGlkeFR5cGUSGAoUVkNVX0dFQVJJTlRJRFhfTk9JTlQQABIbChdWQ1VfR0VB",
            "UklOVElEWF9PVkVSRkxPVxABEhoKFlZDVV9HRUFSSU5USURYX1RJTUVPVVQQ",
            "AiKHAQoTVmN1X2dlYXJkcnZtb2RlVHlwZRIbChdWQ1VfR0VBUkRSVk1PREVf",
            "SU5WQUxJRBAAEhoKFlZDVV9HRUFSRFJWTU9ERV9NQU5VQUwQARIdChlWQ1Vf",
            "R0VBUkRSVk1PREVfSU5URVJSVVBUEAISGAoUVkNVX0dFQVJEUlZNT0RFX0FV",
            "VE8QAyJFChBWY3VfdmVocmR5c3RUeXBlEhkKFVZDVV9WRUhSRFlTVF9OT1RS",
            "RUFEWRAAEhYKElZDVV9WRUhSRFlTVF9SRUFEWRABIpoBCg9WY3VfZmF1bHRz",
            "dFR5cGUSFgoSVkNVX0ZBVUxUU1RfTk9STUFMEAASFgoSVkNVX0ZBVUxUU1Rf",
            "REVSQVRFEAESFAoQVkNVX0ZBVUxUU1RfUlNWMRACEhQKEFZDVV9GQVVMVFNU",
            "X1JTVjIQAxIUChBWQ1VfRkFVTFRTVF9SU1YzEAQSFQoRVkNVX0ZBVUxUU1Rf",
            "RkFVTFQQBSJzCg9WY3VfZHJ2bW9kZVR5cGUSFwoTVkNVX0RSVk1PREVfSU5W",
            "QUxJRBAAEhYKElZDVV9EUlZNT0RFX01BTlVBTBABEhkKFVZDVV9EUlZNT0RF",
            "X0lOVEVSUlVQVBACEhQKEFZDVV9EUlZNT0RFX0FVVE8QAyKJAQoPVmN1X2dl",
            "YXJwc3RUeXBlEhcKE1ZDVV9HRUFSUFNUX0lOVkFMSUQQABIVChFWQ1VfR0VB",
            "UlBTVF9EUklWRRABEhcKE1ZDVV9HRUFSUFNUX05FVVRSQUwQAhIXChNWQ1Vf",
            "R0VBUlBTVF9SRVZFUlNFEAMSFAoQVkNVX0dFQVJQU1RfUEFSSxAEIkwKE1Zj",
            "dV9nZWFyZmF1bHRzdFR5cGUSGgoWVkNVX0dFQVJGQVVMVFNUX05PUk1BTBAA",
            "EhkKFVZDVV9HRUFSRkFVTFRTVF9GQVVMVBABIokBCg9WY3VfZ2VhcmFjdFR5",
            "cGUSFwoTVkNVX0dFQVJBQ1RfSU5WQUxJRBAAEhUKEVZDVV9HRUFSQUNUX0RS",
            "SVZFEAESFwoTVkNVX0dFQVJBQ1RfTkVVVFJBTBACEhcKE1ZDVV9HRUFSQUNU",
            "X1JFVkVSU0UQAxIUChBWQ1VfR0VBUkFDVF9QQVJLEAQiqgQKC1NjdV9lcHNf",
            "MzExEj0KCmVwc19pbnRpZHgYASABKA4yKS5hcG9sbG8uY2FuYnVzLlNjdV9l",
            "cHNfMzExLkVwc19pbnRpZHhUeXBlEhkKEWVwc19zdGVlcmFuZ2xlc3BkGAIg",
            "ASgBEhYKDmVwc19zdGVlcmFuZ2xlGAMgASgBEj8KC2Vwc19mYXVsdHN0GAQg",
            "ASgOMiouYXBvbGxvLmNhbmJ1cy5TY3VfZXBzXzMxMS5FcHNfZmF1bHRzdFR5",
            "cGUSPwoLZXBzX2Rydm1vZGUYBSABKA4yKi5hcG9sbG8uY2FuYnVzLlNjdV9l",
            "cHNfMzExLkVwc19kcnZtb2RlVHlwZSJwCg5FcHNfaW50aWR4VHlwZRIUChBF",
            "UFNfSU5USURYX05PSU5UEAASFwoTRVBTX0lOVElEWF9PVkVSRkxPVxABEhYK",
            "EkVQU19JTlRJRFhfVElNRU9VVBACEhcKE0VQU19JTlRJRFhfU1RFRVJJTlQQ",
            "AyJACg9FcHNfZmF1bHRzdFR5cGUSFgoSRVBTX0ZBVUxUU1RfTk9STUFMEAAS",
            "FQoRRVBTX0ZBVUxUU1RfRkFVTFQQASJzCg9FcHNfZHJ2bW9kZVR5cGUSFwoT",
            "RVBTX0RSVk1PREVfSU5WQUxJRBAAEhYKEkVQU19EUlZNT0RFX01BTlVBTBAB",
            "EhkKFUVQU19EUlZNT0RFX0lOVEVSUlVQVBACEhQKEEVQU19EUlZNT0RFX0FV",
            "VE8QAyKTBgoDR2UzEi0KCnBjX2JjbV8yMDEYASABKAsyGS5hcG9sbG8uY2Fu",
            "YnVzLlBjX2JjbV8yMDESMwoNc2N1X2Jjc18zXzMwOBgCIAEoCzIcLmFwb2xs",
            "by5jYW5idXMuU2N1X2Jjc18zXzMwOBItCgpwY19lcGJfMjAzGAMgASgLMhku",
            "YXBvbGxvLmNhbmJ1cy5QY19lcGJfMjAzEi0KCnBjX2Jjc18yMDIYBCABKAsy",
            "GS5hcG9sbG8uY2FuYnVzLlBjX2Jjc18yMDISLQoKcGNfdmN1XzIwNRgFIAEo",
            "CzIZLmFwb2xsby5jYW5idXMuUGNfdmN1XzIwNRItCgpwY19lcHNfMjA0GAYg",
            "ASgLMhkuYXBvbGxvLmNhbmJ1cy5QY19lcHNfMjA0EjMKDXNjdV92Y3VfMl8z",
            "MTMYByABKAsyHC5hcG9sbG8uY2FuYnVzLlNjdV92Y3VfMl8zMTMSKwoJc2N1",
            "XzFfMzAxGAggASgLMhguYXBvbGxvLmNhbmJ1cy5TY3VfMV8zMDESKwoJc2N1",
            "XzJfMzAyGAkgASgLMhguYXBvbGxvLmNhbmJ1cy5TY3VfMl8zMDISKwoJc2N1",
            "XzNfMzAzGAogASgLMhguYXBvbGxvLmNhbmJ1cy5TY3VfM18zMDMSLwoLc2N1",
            "X2JjbV8zMDQYCyABKAsyGi5hcG9sbG8uY2FuYnVzLlNjdV9iY21fMzA0EjMK",
            "DXNjdV9iY3NfMV8zMDYYDCABKAsyHC5hcG9sbG8uY2FuYnVzLlNjdV9iY3Nf",
            "MV8zMDYSMwoNc2N1X2Jjc18yXzMwNxgNIAEoCzIcLmFwb2xsby5jYW5idXMu",
            "U2N1X2Jjc18yXzMwNxIvCgtzY3VfZXBiXzMxMBgOIAEoCzIaLmFwb2xsby5j",
            "YW5idXMuU2N1X2VwYl8zMTASMwoNc2N1X3ZjdV8xXzMxMhgPIAEoCzIcLmFw",
            "b2xsby5jYW5idXMuU2N1X3ZjdV8xXzMxMhIvCgtzY3VfZXBzXzMxMRgQIAEo",
            "CzIaLmFwb2xsby5jYW5idXMuU2N1X2Vwc18zMTFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Canbus.Pc_bcm_201), global::Apollo.Canbus.Pc_bcm_201.Parser, new[]{ "PcReverselampreq", "PcLowbeamreq", "PcHighbeamreq", "PcRightturnlampreq", "PcLeftturnlampreq", "PcHornreq", "PcHazardlampreq" }, null, new[]{ typeof(global::Apollo.Canbus.Pc_bcm_201.Types.Pc_reverselampreqType), typeof(global::Apollo.Canbus.Pc_bcm_201.Types.Pc_lowbeamreqType), typeof(global::Apollo.Canbus.Pc_bcm_201.Types.Pc_highbeamreqType), typeof(global::Apollo.Canbus.Pc_bcm_201.Types.Pc_rightturnlampreqType), typeof(global::Apollo.Canbus.Pc_bcm_201.Types.Pc_leftturnlampreqType), typeof(global::Apollo.Canbus.Pc_bcm_201.Types.Pc_hornreqType), typeof(global::Apollo.Canbus.Pc_bcm_201.Types.Pc_hazardlampreqType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Canbus.Scu_bcs_3_308), global::Apollo.Canbus.Scu_bcs_3_308.Parser, new[]{ "BcsRrwheelspdvd", "BcsRrwheeldirectionvd", "BcsRlwheelspdvd", "BcsRlwheeldirectionvd", "BcsFrwheelspdvd", "BcsFrwheeldirectionvd", "BcsFlwheelspdvd", "BcsFlwheeldirectionvd", "BcsRrwheelspd", "BcsRrwheeldirection", "BcsRlwheelspd", "BcsRlwheeldirection", "BcsFrwheelspd", "BcsFrwheeldirection", "BcsFlwheelspd", "BcsFlwheeldirection" }, null, new[]{ typeof(global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_rrwheelspdvdType), typeof(global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_rrwheeldirectionvdType), typeof(global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_rlwheelspdvdType), typeof(global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_rlwheeldirectionvdType), typeof(global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_frwheelspdvdType), typeof(global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_frwheeldirectionvdType), typeof(global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_flwheelspdvdType), typeof(global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_flwheeldirectionvdType), typeof(global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_rrwheeldirectionType), typeof(global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_rlwheeldirectionType), typeof(global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_frwheeldirectionType), typeof(global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_flwheeldirectionType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Canbus.Pc_epb_203), global::Apollo.Canbus.Pc_epb_203.Parser, new[]{ "PcEpbreq", "PcEpbenable" }, null, new[]{ typeof(global::Apollo.Canbus.Pc_epb_203.Types.Pc_epbreqType), typeof(global::Apollo.Canbus.Pc_epb_203.Types.Pc_epbenableType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Canbus.Pc_bcs_202), global::Apollo.Canbus.Pc_bcs_202.Parser, new[]{ "PcBrkpedreq", "PcBrkpedenable" }, null, new[]{ typeof(global::Apollo.Canbus.Pc_bcs_202.Types.Pc_brkpedenableType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Canbus.Pc_vcu_205), global::Apollo.Canbus.Pc_vcu_205.Parser, new[]{ "PcAccpedreq", "PcAccpedenable", "PcTorqreq", "PcTorqenable", "PcGearreq", "PcGearenable" }, null, new[]{ typeof(global::Apollo.Canbus.Pc_vcu_205.Types.Pc_accpedenableType), typeof(global::Apollo.Canbus.Pc_vcu_205.Types.Pc_torqenableType), typeof(global::Apollo.Canbus.Pc_vcu_205.Types.Pc_gearreqType), typeof(global::Apollo.Canbus.Pc_vcu_205.Types.Pc_gearenableType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Canbus.Pc_eps_204), global::Apollo.Canbus.Pc_eps_204.Parser, new[]{ "PcSteerspdreq", "PcSteerenable", "PcSteerangreq" }, null, new[]{ typeof(global::Apollo.Canbus.Pc_eps_204.Types.Pc_steerenableType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Canbus.Scu_vcu_2_313), global::Apollo.Canbus.Scu_vcu_2_313.Parser, new[]{ "VcuTorqposmax", "VcuTorqnegmax", "VcuTorqact", "VcuEngspd" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Canbus.Scu_1_301), global::Apollo.Canbus.Scu_1_301.Parser, new[]{ "Vin16", "ScuStopbutst", "ScuDrvmode", "ScuFaultst" }, null, new[]{ typeof(global::Apollo.Canbus.Scu_1_301.Types.Scu_stopbutstType), typeof(global::Apollo.Canbus.Scu_1_301.Types.Scu_drvmodeType), typeof(global::Apollo.Canbus.Scu_1_301.Types.Scu_faultstType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Canbus.Scu_2_302), global::Apollo.Canbus.Scu_2_302.Parser, new[]{ "Vin07", "Vin06", "Vin05", "Vin04", "Vin03", "Vin02", "Vin01", "Vin00" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Canbus.Scu_3_303), global::Apollo.Canbus.Scu_3_303.Parser, new[]{ "Vin15", "Vin14", "Vin13", "Vin12", "Vin11", "Vin10", "Vin09", "Vin08" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Canbus.Scu_bcm_304), global::Apollo.Canbus.Scu_bcm_304.Parser, new[]{ "BcmVehreversest", "BcmRightturnlampst", "BcmRearfoglampst", "BcmParkinglampst", "BcmLowbeamst", "BcmLeftturnlampst", "BcmKeyst", "BcmHornst", "BcmHighbeamst", "BcmHazardlampst", "BcmFrontfoglampst", "BcmBrakelightswitchst" }, null, new[]{ typeof(global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_vehreversestType), typeof(global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_rightturnlampstType), typeof(global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_rearfoglampstType), typeof(global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_parkinglampstType), typeof(global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_lowbeamstType), typeof(global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_leftturnlampstType), typeof(global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_keystType), typeof(global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_hornstType), typeof(global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_highbeamstType), typeof(global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_hazardlampstType), typeof(global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_frontfoglampstType), typeof(global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_brakelightswitchstType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Canbus.Scu_bcs_1_306), global::Apollo.Canbus.Scu_bcs_1_306.Parser, new[]{ "BcsAebavailable", "BcsCddavailable", "BcsBrkpedact", "BcsIntidx", "BcsVdcfaultst", "BcsVdcactivest", "BcsAbsfaultst", "BcsAbsactivest", "BcsFaultst", "BcsDrvmode" }, null, new[]{ typeof(global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_aebavailableType), typeof(global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_cddavailableType), typeof(global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_intidxType), typeof(global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_vdcfaultstType), typeof(global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_vdcactivestType), typeof(global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_absfaultstType), typeof(global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_absactivestType), typeof(global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_faultstType), typeof(global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_drvmodeType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Canbus.Scu_bcs_2_307), global::Apollo.Canbus.Scu_bcs_2_307.Parser, new[]{ "BcsVehspdvd", "BcsYawrate", "BcsVehspd", "BcsVehlongaccel", "BcsVehlataccel" }, null, new[]{ typeof(global::Apollo.Canbus.Scu_bcs_2_307.Types.Bcs_vehspdvdType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Canbus.Scu_epb_310), global::Apollo.Canbus.Scu_epb_310.Parser, new[]{ "EpbIntidx", "EpbDrvmode", "EpbSysst", "EpbFaultst" }, null, new[]{ typeof(global::Apollo.Canbus.Scu_epb_310.Types.Epb_intidxType), typeof(global::Apollo.Canbus.Scu_epb_310.Types.Epb_drvmodeType), typeof(global::Apollo.Canbus.Scu_epb_310.Types.Epb_sysstType), typeof(global::Apollo.Canbus.Scu_epb_310.Types.Epb_faultstType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Canbus.Scu_vcu_1_312), global::Apollo.Canbus.Scu_vcu_1_312.Parser, new[]{ "VcuElcsysfault", "VcuBrkpedst", "VcuIntidx", "VcuGearintidx", "VcuGeardrvmode", "VcuAccpedact", "VcuBrkpedpst", "VcuVehrng", "VcuAccpedpst", "VcuVehrdyst", "VcuFaultst", "VcuDrvmode", "VcuGearpst", "VcuGearfaultst", "VcuGearact" }, null, new[]{ typeof(global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_elcsysfaultType), typeof(global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_brkpedstType), typeof(global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_intidxType), typeof(global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_gearintidxType), typeof(global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_geardrvmodeType), typeof(global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_vehrdystType), typeof(global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_faultstType), typeof(global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_drvmodeType), typeof(global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_gearpstType), typeof(global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_gearfaultstType), typeof(global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_gearactType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Canbus.Scu_eps_311), global::Apollo.Canbus.Scu_eps_311.Parser, new[]{ "EpsIntidx", "EpsSteeranglespd", "EpsSteerangle", "EpsFaultst", "EpsDrvmode" }, null, new[]{ typeof(global::Apollo.Canbus.Scu_eps_311.Types.Eps_intidxType), typeof(global::Apollo.Canbus.Scu_eps_311.Types.Eps_faultstType), typeof(global::Apollo.Canbus.Scu_eps_311.Types.Eps_drvmodeType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Canbus.Ge3), global::Apollo.Canbus.Ge3.Parser, new[]{ "PcBcm201", "ScuBcs3308", "PcEpb203", "PcBcs202", "PcVcu205", "PcEps204", "ScuVcu2313", "Scu1301", "Scu2302", "Scu3303", "ScuBcm304", "ScuBcs1306", "ScuBcs2307", "ScuEpb310", "ScuVcu1312", "ScuEps311" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Pc_bcm_201 : pb::IMessage<Pc_bcm_201> {
    private static readonly pb::MessageParser<Pc_bcm_201> _parser = new pb::MessageParser<Pc_bcm_201>(() => new Pc_bcm_201());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Pc_bcm_201> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Canbus.Ge3Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pc_bcm_201() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pc_bcm_201(Pc_bcm_201 other) : this() {
      pcReverselampreq_ = other.pcReverselampreq_;
      pcLowbeamreq_ = other.pcLowbeamreq_;
      pcHighbeamreq_ = other.pcHighbeamreq_;
      pcRightturnlampreq_ = other.pcRightturnlampreq_;
      pcLeftturnlampreq_ = other.pcLeftturnlampreq_;
      pcHornreq_ = other.pcHornreq_;
      pcHazardlampreq_ = other.pcHazardlampreq_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pc_bcm_201 Clone() {
      return new Pc_bcm_201(this);
    }

    /// <summary>Field number for the "pc_reverselampreq" field.</summary>
    public const int PcReverselampreqFieldNumber = 1;
    private global::Apollo.Canbus.Pc_bcm_201.Types.Pc_reverselampreqType pcReverselampreq_ = 0;
    /// <summary>
    /// Left turn lamp request  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Pc_bcm_201.Types.Pc_reverselampreqType PcReverselampreq {
      get { return pcReverselampreq_; }
      set {
        pcReverselampreq_ = value;
      }
    }

    /// <summary>Field number for the "pc_lowbeamreq" field.</summary>
    public const int PcLowbeamreqFieldNumber = 2;
    private global::Apollo.Canbus.Pc_bcm_201.Types.Pc_lowbeamreqType pcLowbeamreq_ = 0;
    /// <summary>
    /// Left turn lamp request  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Pc_bcm_201.Types.Pc_lowbeamreqType PcLowbeamreq {
      get { return pcLowbeamreq_; }
      set {
        pcLowbeamreq_ = value;
      }
    }

    /// <summary>Field number for the "pc_highbeamreq" field.</summary>
    public const int PcHighbeamreqFieldNumber = 3;
    private global::Apollo.Canbus.Pc_bcm_201.Types.Pc_highbeamreqType pcHighbeamreq_ = 0;
    /// <summary>
    /// Left turn lamp request  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Pc_bcm_201.Types.Pc_highbeamreqType PcHighbeamreq {
      get { return pcHighbeamreq_; }
      set {
        pcHighbeamreq_ = value;
      }
    }

    /// <summary>Field number for the "pc_rightturnlampreq" field.</summary>
    public const int PcRightturnlampreqFieldNumber = 4;
    private global::Apollo.Canbus.Pc_bcm_201.Types.Pc_rightturnlampreqType pcRightturnlampreq_ = 0;
    /// <summary>
    /// Right turn lamp request  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Pc_bcm_201.Types.Pc_rightturnlampreqType PcRightturnlampreq {
      get { return pcRightturnlampreq_; }
      set {
        pcRightturnlampreq_ = value;
      }
    }

    /// <summary>Field number for the "pc_leftturnlampreq" field.</summary>
    public const int PcLeftturnlampreqFieldNumber = 5;
    private global::Apollo.Canbus.Pc_bcm_201.Types.Pc_leftturnlampreqType pcLeftturnlampreq_ = 0;
    /// <summary>
    /// Left turn lamp request  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Pc_bcm_201.Types.Pc_leftturnlampreqType PcLeftturnlampreq {
      get { return pcLeftturnlampreq_; }
      set {
        pcLeftturnlampreq_ = value;
      }
    }

    /// <summary>Field number for the "pc_hornreq" field.</summary>
    public const int PcHornreqFieldNumber = 6;
    private global::Apollo.Canbus.Pc_bcm_201.Types.Pc_hornreqType pcHornreq_ = 0;
    /// <summary>
    /// Horn request  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Pc_bcm_201.Types.Pc_hornreqType PcHornreq {
      get { return pcHornreq_; }
      set {
        pcHornreq_ = value;
      }
    }

    /// <summary>Field number for the "pc_hazardlampreq" field.</summary>
    public const int PcHazardlampreqFieldNumber = 7;
    private global::Apollo.Canbus.Pc_bcm_201.Types.Pc_hazardlampreqType pcHazardlampreq_ = 0;
    /// <summary>
    /// Hazard lamp request  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Pc_bcm_201.Types.Pc_hazardlampreqType PcHazardlampreq {
      get { return pcHazardlampreq_; }
      set {
        pcHazardlampreq_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Pc_bcm_201);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Pc_bcm_201 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PcReverselampreq != other.PcReverselampreq) return false;
      if (PcLowbeamreq != other.PcLowbeamreq) return false;
      if (PcHighbeamreq != other.PcHighbeamreq) return false;
      if (PcRightturnlampreq != other.PcRightturnlampreq) return false;
      if (PcLeftturnlampreq != other.PcLeftturnlampreq) return false;
      if (PcHornreq != other.PcHornreq) return false;
      if (PcHazardlampreq != other.PcHazardlampreq) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PcReverselampreq != 0) hash ^= PcReverselampreq.GetHashCode();
      if (PcLowbeamreq != 0) hash ^= PcLowbeamreq.GetHashCode();
      if (PcHighbeamreq != 0) hash ^= PcHighbeamreq.GetHashCode();
      if (PcRightturnlampreq != 0) hash ^= PcRightturnlampreq.GetHashCode();
      if (PcLeftturnlampreq != 0) hash ^= PcLeftturnlampreq.GetHashCode();
      if (PcHornreq != 0) hash ^= PcHornreq.GetHashCode();
      if (PcHazardlampreq != 0) hash ^= PcHazardlampreq.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PcReverselampreq != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PcReverselampreq);
      }
      if (PcLowbeamreq != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) PcLowbeamreq);
      }
      if (PcHighbeamreq != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) PcHighbeamreq);
      }
      if (PcRightturnlampreq != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) PcRightturnlampreq);
      }
      if (PcLeftturnlampreq != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) PcLeftturnlampreq);
      }
      if (PcHornreq != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) PcHornreq);
      }
      if (PcHazardlampreq != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) PcHazardlampreq);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PcReverselampreq != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PcReverselampreq);
      }
      if (PcLowbeamreq != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PcLowbeamreq);
      }
      if (PcHighbeamreq != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PcHighbeamreq);
      }
      if (PcRightturnlampreq != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PcRightturnlampreq);
      }
      if (PcLeftturnlampreq != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PcLeftturnlampreq);
      }
      if (PcHornreq != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PcHornreq);
      }
      if (PcHazardlampreq != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PcHazardlampreq);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Pc_bcm_201 other) {
      if (other == null) {
        return;
      }
      if (other.PcReverselampreq != 0) {
        PcReverselampreq = other.PcReverselampreq;
      }
      if (other.PcLowbeamreq != 0) {
        PcLowbeamreq = other.PcLowbeamreq;
      }
      if (other.PcHighbeamreq != 0) {
        PcHighbeamreq = other.PcHighbeamreq;
      }
      if (other.PcRightturnlampreq != 0) {
        PcRightturnlampreq = other.PcRightturnlampreq;
      }
      if (other.PcLeftturnlampreq != 0) {
        PcLeftturnlampreq = other.PcLeftturnlampreq;
      }
      if (other.PcHornreq != 0) {
        PcHornreq = other.PcHornreq;
      }
      if (other.PcHazardlampreq != 0) {
        PcHazardlampreq = other.PcHazardlampreq;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            pcReverselampreq_ = (global::Apollo.Canbus.Pc_bcm_201.Types.Pc_reverselampreqType) input.ReadEnum();
            break;
          }
          case 16: {
            pcLowbeamreq_ = (global::Apollo.Canbus.Pc_bcm_201.Types.Pc_lowbeamreqType) input.ReadEnum();
            break;
          }
          case 24: {
            pcHighbeamreq_ = (global::Apollo.Canbus.Pc_bcm_201.Types.Pc_highbeamreqType) input.ReadEnum();
            break;
          }
          case 32: {
            pcRightturnlampreq_ = (global::Apollo.Canbus.Pc_bcm_201.Types.Pc_rightturnlampreqType) input.ReadEnum();
            break;
          }
          case 40: {
            pcLeftturnlampreq_ = (global::Apollo.Canbus.Pc_bcm_201.Types.Pc_leftturnlampreqType) input.ReadEnum();
            break;
          }
          case 48: {
            pcHornreq_ = (global::Apollo.Canbus.Pc_bcm_201.Types.Pc_hornreqType) input.ReadEnum();
            break;
          }
          case 56: {
            pcHazardlampreq_ = (global::Apollo.Canbus.Pc_bcm_201.Types.Pc_hazardlampreqType) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Pc_bcm_201 message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Control Message
      /// </summary>
      public enum Pc_reverselampreqType {
        [pbr::OriginalName("PC_REVERSELAMPREQ_NOREQ")] PcReverselampreqNoreq = 0,
        [pbr::OriginalName("PC_REVERSELAMPREQ_REQ")] PcReverselampreqReq = 1,
      }

      public enum Pc_lowbeamreqType {
        [pbr::OriginalName("PC_LOWBEAMREQ_NOREQ")] PcLowbeamreqNoreq = 0,
        [pbr::OriginalName("PC_LOWBEAMREQ_REQ")] PcLowbeamreqReq = 1,
      }

      public enum Pc_highbeamreqType {
        [pbr::OriginalName("PC_HIGHBEAMREQ_NOREQ")] PcHighbeamreqNoreq = 0,
        [pbr::OriginalName("PC_HIGHBEAMREQ_REQ")] PcHighbeamreqReq = 1,
      }

      public enum Pc_rightturnlampreqType {
        [pbr::OriginalName("PC_RIGHTTURNLAMPREQ_NOREQ")] PcRightturnlampreqNoreq = 0,
        [pbr::OriginalName("PC_RIGHTTURNLAMPREQ_REQ")] PcRightturnlampreqReq = 1,
      }

      public enum Pc_leftturnlampreqType {
        [pbr::OriginalName("PC_LEFTTURNLAMPREQ_NOREQ")] PcLeftturnlampreqNoreq = 0,
        [pbr::OriginalName("PC_LEFTTURNLAMPREQ_REQ")] PcLeftturnlampreqReq = 1,
      }

      public enum Pc_hornreqType {
        [pbr::OriginalName("PC_HORNREQ_NOREQ")] PcHornreqNoreq = 0,
        [pbr::OriginalName("PC_HORNREQ_REQ")] PcHornreqReq = 1,
      }

      public enum Pc_hazardlampreqType {
        [pbr::OriginalName("PC_HAZARDLAMPREQ_NOREQ")] PcHazardlampreqNoreq = 0,
        [pbr::OriginalName("PC_HAZARDLAMPREQ_REQ")] PcHazardlampreqReq = 1,
      }

    }
    #endregion

  }

  public sealed partial class Scu_bcs_3_308 : pb::IMessage<Scu_bcs_3_308> {
    private static readonly pb::MessageParser<Scu_bcs_3_308> _parser = new pb::MessageParser<Scu_bcs_3_308>(() => new Scu_bcs_3_308());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Scu_bcs_3_308> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Canbus.Ge3Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scu_bcs_3_308() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scu_bcs_3_308(Scu_bcs_3_308 other) : this() {
      bcsRrwheelspdvd_ = other.bcsRrwheelspdvd_;
      bcsRrwheeldirectionvd_ = other.bcsRrwheeldirectionvd_;
      bcsRlwheelspdvd_ = other.bcsRlwheelspdvd_;
      bcsRlwheeldirectionvd_ = other.bcsRlwheeldirectionvd_;
      bcsFrwheelspdvd_ = other.bcsFrwheelspdvd_;
      bcsFrwheeldirectionvd_ = other.bcsFrwheeldirectionvd_;
      bcsFlwheelspdvd_ = other.bcsFlwheelspdvd_;
      bcsFlwheeldirectionvd_ = other.bcsFlwheeldirectionvd_;
      bcsRrwheelspd_ = other.bcsRrwheelspd_;
      bcsRrwheeldirection_ = other.bcsRrwheeldirection_;
      bcsRlwheelspd_ = other.bcsRlwheelspd_;
      bcsRlwheeldirection_ = other.bcsRlwheeldirection_;
      bcsFrwheelspd_ = other.bcsFrwheelspd_;
      bcsFrwheeldirection_ = other.bcsFrwheeldirection_;
      bcsFlwheelspd_ = other.bcsFlwheelspd_;
      bcsFlwheeldirection_ = other.bcsFlwheeldirection_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scu_bcs_3_308 Clone() {
      return new Scu_bcs_3_308(this);
    }

    /// <summary>Field number for the "bcs_rrwheelspdvd" field.</summary>
    public const int BcsRrwheelspdvdFieldNumber = 1;
    private global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_rrwheelspdvdType bcsRrwheelspdvd_ = 0;
    /// <summary>
    /// Rear right wheel speed valid data  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_rrwheelspdvdType BcsRrwheelspdvd {
      get { return bcsRrwheelspdvd_; }
      set {
        bcsRrwheelspdvd_ = value;
      }
    }

    /// <summary>Field number for the "bcs_rrwheeldirectionvd" field.</summary>
    public const int BcsRrwheeldirectionvdFieldNumber = 2;
    private global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_rrwheeldirectionvdType bcsRrwheeldirectionvd_ = 0;
    /// <summary>
    /// Rear right wheel speed direction valid data  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_rrwheeldirectionvdType BcsRrwheeldirectionvd {
      get { return bcsRrwheeldirectionvd_; }
      set {
        bcsRrwheeldirectionvd_ = value;
      }
    }

    /// <summary>Field number for the "bcs_rlwheelspdvd" field.</summary>
    public const int BcsRlwheelspdvdFieldNumber = 3;
    private global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_rlwheelspdvdType bcsRlwheelspdvd_ = 0;
    /// <summary>
    /// Rear left wheel speed valid data  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_rlwheelspdvdType BcsRlwheelspdvd {
      get { return bcsRlwheelspdvd_; }
      set {
        bcsRlwheelspdvd_ = value;
      }
    }

    /// <summary>Field number for the "bcs_rlwheeldirectionvd" field.</summary>
    public const int BcsRlwheeldirectionvdFieldNumber = 4;
    private global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_rlwheeldirectionvdType bcsRlwheeldirectionvd_ = 0;
    /// <summary>
    /// Rear left wheel speed direction valid data  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_rlwheeldirectionvdType BcsRlwheeldirectionvd {
      get { return bcsRlwheeldirectionvd_; }
      set {
        bcsRlwheeldirectionvd_ = value;
      }
    }

    /// <summary>Field number for the "bcs_frwheelspdvd" field.</summary>
    public const int BcsFrwheelspdvdFieldNumber = 5;
    private global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_frwheelspdvdType bcsFrwheelspdvd_ = 0;
    /// <summary>
    /// Front right wheel speed valid data  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_frwheelspdvdType BcsFrwheelspdvd {
      get { return bcsFrwheelspdvd_; }
      set {
        bcsFrwheelspdvd_ = value;
      }
    }

    /// <summary>Field number for the "bcs_frwheeldirectionvd" field.</summary>
    public const int BcsFrwheeldirectionvdFieldNumber = 6;
    private global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_frwheeldirectionvdType bcsFrwheeldirectionvd_ = 0;
    /// <summary>
    /// Front right wheel speed direction valid data  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_frwheeldirectionvdType BcsFrwheeldirectionvd {
      get { return bcsFrwheeldirectionvd_; }
      set {
        bcsFrwheeldirectionvd_ = value;
      }
    }

    /// <summary>Field number for the "bcs_flwheelspdvd" field.</summary>
    public const int BcsFlwheelspdvdFieldNumber = 7;
    private global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_flwheelspdvdType bcsFlwheelspdvd_ = 0;
    /// <summary>
    /// Front left wheel speed valid data  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_flwheelspdvdType BcsFlwheelspdvd {
      get { return bcsFlwheelspdvd_; }
      set {
        bcsFlwheelspdvd_ = value;
      }
    }

    /// <summary>Field number for the "bcs_flwheeldirectionvd" field.</summary>
    public const int BcsFlwheeldirectionvdFieldNumber = 8;
    private global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_flwheeldirectionvdType bcsFlwheeldirectionvd_ = 0;
    /// <summary>
    /// Front left wheel speed direction valid data  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_flwheeldirectionvdType BcsFlwheeldirectionvd {
      get { return bcsFlwheeldirectionvd_; }
      set {
        bcsFlwheeldirectionvd_ = value;
      }
    }

    /// <summary>Field number for the "bcs_rrwheelspd" field.</summary>
    public const int BcsRrwheelspdFieldNumber = 9;
    private double bcsRrwheelspd_;
    /// <summary>
    /// Rear right wheel speed  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double BcsRrwheelspd {
      get { return bcsRrwheelspd_; }
      set {
        bcsRrwheelspd_ = value;
      }
    }

    /// <summary>Field number for the "bcs_rrwheeldirection" field.</summary>
    public const int BcsRrwheeldirectionFieldNumber = 10;
    private global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_rrwheeldirectionType bcsRrwheeldirection_ = 0;
    /// <summary>
    /// Rear right wheel speed direction  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_rrwheeldirectionType BcsRrwheeldirection {
      get { return bcsRrwheeldirection_; }
      set {
        bcsRrwheeldirection_ = value;
      }
    }

    /// <summary>Field number for the "bcs_rlwheelspd" field.</summary>
    public const int BcsRlwheelspdFieldNumber = 11;
    private double bcsRlwheelspd_;
    /// <summary>
    /// Rear left wheel speed  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double BcsRlwheelspd {
      get { return bcsRlwheelspd_; }
      set {
        bcsRlwheelspd_ = value;
      }
    }

    /// <summary>Field number for the "bcs_rlwheeldirection" field.</summary>
    public const int BcsRlwheeldirectionFieldNumber = 12;
    private global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_rlwheeldirectionType bcsRlwheeldirection_ = 0;
    /// <summary>
    /// Rear left wheel speed direction  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_rlwheeldirectionType BcsRlwheeldirection {
      get { return bcsRlwheeldirection_; }
      set {
        bcsRlwheeldirection_ = value;
      }
    }

    /// <summary>Field number for the "bcs_frwheelspd" field.</summary>
    public const int BcsFrwheelspdFieldNumber = 13;
    private double bcsFrwheelspd_;
    /// <summary>
    /// Front right wheel speed  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double BcsFrwheelspd {
      get { return bcsFrwheelspd_; }
      set {
        bcsFrwheelspd_ = value;
      }
    }

    /// <summary>Field number for the "bcs_frwheeldirection" field.</summary>
    public const int BcsFrwheeldirectionFieldNumber = 14;
    private global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_frwheeldirectionType bcsFrwheeldirection_ = 0;
    /// <summary>
    /// Front right wheel speed direction  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_frwheeldirectionType BcsFrwheeldirection {
      get { return bcsFrwheeldirection_; }
      set {
        bcsFrwheeldirection_ = value;
      }
    }

    /// <summary>Field number for the "bcs_flwheelspd" field.</summary>
    public const int BcsFlwheelspdFieldNumber = 15;
    private double bcsFlwheelspd_;
    /// <summary>
    /// Front left wheel speed  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double BcsFlwheelspd {
      get { return bcsFlwheelspd_; }
      set {
        bcsFlwheelspd_ = value;
      }
    }

    /// <summary>Field number for the "bcs_flwheeldirection" field.</summary>
    public const int BcsFlwheeldirectionFieldNumber = 16;
    private global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_flwheeldirectionType bcsFlwheeldirection_ = 0;
    /// <summary>
    /// Front left wheel speed direction  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_flwheeldirectionType BcsFlwheeldirection {
      get { return bcsFlwheeldirection_; }
      set {
        bcsFlwheeldirection_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Scu_bcs_3_308);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Scu_bcs_3_308 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BcsRrwheelspdvd != other.BcsRrwheelspdvd) return false;
      if (BcsRrwheeldirectionvd != other.BcsRrwheeldirectionvd) return false;
      if (BcsRlwheelspdvd != other.BcsRlwheelspdvd) return false;
      if (BcsRlwheeldirectionvd != other.BcsRlwheeldirectionvd) return false;
      if (BcsFrwheelspdvd != other.BcsFrwheelspdvd) return false;
      if (BcsFrwheeldirectionvd != other.BcsFrwheeldirectionvd) return false;
      if (BcsFlwheelspdvd != other.BcsFlwheelspdvd) return false;
      if (BcsFlwheeldirectionvd != other.BcsFlwheeldirectionvd) return false;
      if (BcsRrwheelspd != other.BcsRrwheelspd) return false;
      if (BcsRrwheeldirection != other.BcsRrwheeldirection) return false;
      if (BcsRlwheelspd != other.BcsRlwheelspd) return false;
      if (BcsRlwheeldirection != other.BcsRlwheeldirection) return false;
      if (BcsFrwheelspd != other.BcsFrwheelspd) return false;
      if (BcsFrwheeldirection != other.BcsFrwheeldirection) return false;
      if (BcsFlwheelspd != other.BcsFlwheelspd) return false;
      if (BcsFlwheeldirection != other.BcsFlwheeldirection) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BcsRrwheelspdvd != 0) hash ^= BcsRrwheelspdvd.GetHashCode();
      if (BcsRrwheeldirectionvd != 0) hash ^= BcsRrwheeldirectionvd.GetHashCode();
      if (BcsRlwheelspdvd != 0) hash ^= BcsRlwheelspdvd.GetHashCode();
      if (BcsRlwheeldirectionvd != 0) hash ^= BcsRlwheeldirectionvd.GetHashCode();
      if (BcsFrwheelspdvd != 0) hash ^= BcsFrwheelspdvd.GetHashCode();
      if (BcsFrwheeldirectionvd != 0) hash ^= BcsFrwheeldirectionvd.GetHashCode();
      if (BcsFlwheelspdvd != 0) hash ^= BcsFlwheelspdvd.GetHashCode();
      if (BcsFlwheeldirectionvd != 0) hash ^= BcsFlwheeldirectionvd.GetHashCode();
      if (BcsRrwheelspd != 0D) hash ^= BcsRrwheelspd.GetHashCode();
      if (BcsRrwheeldirection != 0) hash ^= BcsRrwheeldirection.GetHashCode();
      if (BcsRlwheelspd != 0D) hash ^= BcsRlwheelspd.GetHashCode();
      if (BcsRlwheeldirection != 0) hash ^= BcsRlwheeldirection.GetHashCode();
      if (BcsFrwheelspd != 0D) hash ^= BcsFrwheelspd.GetHashCode();
      if (BcsFrwheeldirection != 0) hash ^= BcsFrwheeldirection.GetHashCode();
      if (BcsFlwheelspd != 0D) hash ^= BcsFlwheelspd.GetHashCode();
      if (BcsFlwheeldirection != 0) hash ^= BcsFlwheeldirection.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BcsRrwheelspdvd != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) BcsRrwheelspdvd);
      }
      if (BcsRrwheeldirectionvd != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) BcsRrwheeldirectionvd);
      }
      if (BcsRlwheelspdvd != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) BcsRlwheelspdvd);
      }
      if (BcsRlwheeldirectionvd != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) BcsRlwheeldirectionvd);
      }
      if (BcsFrwheelspdvd != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) BcsFrwheelspdvd);
      }
      if (BcsFrwheeldirectionvd != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) BcsFrwheeldirectionvd);
      }
      if (BcsFlwheelspdvd != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) BcsFlwheelspdvd);
      }
      if (BcsFlwheeldirectionvd != 0) {
        output.WriteRawTag(64);
        output.WriteEnum((int) BcsFlwheeldirectionvd);
      }
      if (BcsRrwheelspd != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(BcsRrwheelspd);
      }
      if (BcsRrwheeldirection != 0) {
        output.WriteRawTag(80);
        output.WriteEnum((int) BcsRrwheeldirection);
      }
      if (BcsRlwheelspd != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(BcsRlwheelspd);
      }
      if (BcsRlwheeldirection != 0) {
        output.WriteRawTag(96);
        output.WriteEnum((int) BcsRlwheeldirection);
      }
      if (BcsFrwheelspd != 0D) {
        output.WriteRawTag(105);
        output.WriteDouble(BcsFrwheelspd);
      }
      if (BcsFrwheeldirection != 0) {
        output.WriteRawTag(112);
        output.WriteEnum((int) BcsFrwheeldirection);
      }
      if (BcsFlwheelspd != 0D) {
        output.WriteRawTag(121);
        output.WriteDouble(BcsFlwheelspd);
      }
      if (BcsFlwheeldirection != 0) {
        output.WriteRawTag(128, 1);
        output.WriteEnum((int) BcsFlwheeldirection);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BcsRrwheelspdvd != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BcsRrwheelspdvd);
      }
      if (BcsRrwheeldirectionvd != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BcsRrwheeldirectionvd);
      }
      if (BcsRlwheelspdvd != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BcsRlwheelspdvd);
      }
      if (BcsRlwheeldirectionvd != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BcsRlwheeldirectionvd);
      }
      if (BcsFrwheelspdvd != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BcsFrwheelspdvd);
      }
      if (BcsFrwheeldirectionvd != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BcsFrwheeldirectionvd);
      }
      if (BcsFlwheelspdvd != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BcsFlwheelspdvd);
      }
      if (BcsFlwheeldirectionvd != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BcsFlwheeldirectionvd);
      }
      if (BcsRrwheelspd != 0D) {
        size += 1 + 8;
      }
      if (BcsRrwheeldirection != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BcsRrwheeldirection);
      }
      if (BcsRlwheelspd != 0D) {
        size += 1 + 8;
      }
      if (BcsRlwheeldirection != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BcsRlwheeldirection);
      }
      if (BcsFrwheelspd != 0D) {
        size += 1 + 8;
      }
      if (BcsFrwheeldirection != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BcsFrwheeldirection);
      }
      if (BcsFlwheelspd != 0D) {
        size += 1 + 8;
      }
      if (BcsFlwheeldirection != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) BcsFlwheeldirection);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Scu_bcs_3_308 other) {
      if (other == null) {
        return;
      }
      if (other.BcsRrwheelspdvd != 0) {
        BcsRrwheelspdvd = other.BcsRrwheelspdvd;
      }
      if (other.BcsRrwheeldirectionvd != 0) {
        BcsRrwheeldirectionvd = other.BcsRrwheeldirectionvd;
      }
      if (other.BcsRlwheelspdvd != 0) {
        BcsRlwheelspdvd = other.BcsRlwheelspdvd;
      }
      if (other.BcsRlwheeldirectionvd != 0) {
        BcsRlwheeldirectionvd = other.BcsRlwheeldirectionvd;
      }
      if (other.BcsFrwheelspdvd != 0) {
        BcsFrwheelspdvd = other.BcsFrwheelspdvd;
      }
      if (other.BcsFrwheeldirectionvd != 0) {
        BcsFrwheeldirectionvd = other.BcsFrwheeldirectionvd;
      }
      if (other.BcsFlwheelspdvd != 0) {
        BcsFlwheelspdvd = other.BcsFlwheelspdvd;
      }
      if (other.BcsFlwheeldirectionvd != 0) {
        BcsFlwheeldirectionvd = other.BcsFlwheeldirectionvd;
      }
      if (other.BcsRrwheelspd != 0D) {
        BcsRrwheelspd = other.BcsRrwheelspd;
      }
      if (other.BcsRrwheeldirection != 0) {
        BcsRrwheeldirection = other.BcsRrwheeldirection;
      }
      if (other.BcsRlwheelspd != 0D) {
        BcsRlwheelspd = other.BcsRlwheelspd;
      }
      if (other.BcsRlwheeldirection != 0) {
        BcsRlwheeldirection = other.BcsRlwheeldirection;
      }
      if (other.BcsFrwheelspd != 0D) {
        BcsFrwheelspd = other.BcsFrwheelspd;
      }
      if (other.BcsFrwheeldirection != 0) {
        BcsFrwheeldirection = other.BcsFrwheeldirection;
      }
      if (other.BcsFlwheelspd != 0D) {
        BcsFlwheelspd = other.BcsFlwheelspd;
      }
      if (other.BcsFlwheeldirection != 0) {
        BcsFlwheeldirection = other.BcsFlwheeldirection;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            bcsRrwheelspdvd_ = (global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_rrwheelspdvdType) input.ReadEnum();
            break;
          }
          case 16: {
            bcsRrwheeldirectionvd_ = (global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_rrwheeldirectionvdType) input.ReadEnum();
            break;
          }
          case 24: {
            bcsRlwheelspdvd_ = (global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_rlwheelspdvdType) input.ReadEnum();
            break;
          }
          case 32: {
            bcsRlwheeldirectionvd_ = (global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_rlwheeldirectionvdType) input.ReadEnum();
            break;
          }
          case 40: {
            bcsFrwheelspdvd_ = (global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_frwheelspdvdType) input.ReadEnum();
            break;
          }
          case 48: {
            bcsFrwheeldirectionvd_ = (global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_frwheeldirectionvdType) input.ReadEnum();
            break;
          }
          case 56: {
            bcsFlwheelspdvd_ = (global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_flwheelspdvdType) input.ReadEnum();
            break;
          }
          case 64: {
            bcsFlwheeldirectionvd_ = (global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_flwheeldirectionvdType) input.ReadEnum();
            break;
          }
          case 73: {
            BcsRrwheelspd = input.ReadDouble();
            break;
          }
          case 80: {
            bcsRrwheeldirection_ = (global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_rrwheeldirectionType) input.ReadEnum();
            break;
          }
          case 89: {
            BcsRlwheelspd = input.ReadDouble();
            break;
          }
          case 96: {
            bcsRlwheeldirection_ = (global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_rlwheeldirectionType) input.ReadEnum();
            break;
          }
          case 105: {
            BcsFrwheelspd = input.ReadDouble();
            break;
          }
          case 112: {
            bcsFrwheeldirection_ = (global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_frwheeldirectionType) input.ReadEnum();
            break;
          }
          case 121: {
            BcsFlwheelspd = input.ReadDouble();
            break;
          }
          case 128: {
            bcsFlwheeldirection_ = (global::Apollo.Canbus.Scu_bcs_3_308.Types.Bcs_flwheeldirectionType) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Scu_bcs_3_308 message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Report Message
      /// </summary>
      public enum Bcs_rrwheelspdvdType {
        [pbr::OriginalName("BCS_RRWHEELSPDVD_INVALID")] BcsRrwheelspdvdInvalid = 0,
        [pbr::OriginalName("BCS_RRWHEELSPDVD_VALID")] BcsRrwheelspdvdValid = 1,
      }

      public enum Bcs_rrwheeldirectionvdType {
        [pbr::OriginalName("BCS_RRWHEELDIRECTIONVD_INVALID")] BcsRrwheeldirectionvdInvalid = 0,
        [pbr::OriginalName("BCS_RRWHEELDIRECTIONVD_VALID")] BcsRrwheeldirectionvdValid = 1,
      }

      public enum Bcs_rlwheelspdvdType {
        [pbr::OriginalName("BCS_RLWHEELSPDVD_INVALID")] BcsRlwheelspdvdInvalid = 0,
        [pbr::OriginalName("BCS_RLWHEELSPDVD_VALID")] BcsRlwheelspdvdValid = 1,
      }

      public enum Bcs_rlwheeldirectionvdType {
        [pbr::OriginalName("BCS_RLWHEELDIRECTIONVD_INVALID")] BcsRlwheeldirectionvdInvalid = 0,
        [pbr::OriginalName("BCS_RLWHEELDIRECTIONVD_VALID")] BcsRlwheeldirectionvdValid = 1,
      }

      public enum Bcs_frwheelspdvdType {
        [pbr::OriginalName("BCS_FRWHEELSPDVD_INVALID")] BcsFrwheelspdvdInvalid = 0,
        [pbr::OriginalName("BCS_FRWHEELSPDVD_VALID")] BcsFrwheelspdvdValid = 1,
      }

      public enum Bcs_frwheeldirectionvdType {
        [pbr::OriginalName("BCS_FRWHEELDIRECTIONVD_INVALID")] BcsFrwheeldirectionvdInvalid = 0,
        [pbr::OriginalName("BCS_FRWHEELDIRECTIONVD_VALID")] BcsFrwheeldirectionvdValid = 1,
      }

      public enum Bcs_flwheelspdvdType {
        [pbr::OriginalName("BCS_FLWHEELSPDVD_INVALID")] BcsFlwheelspdvdInvalid = 0,
        [pbr::OriginalName("BCS_FLWHEELSPDVD_VALID")] BcsFlwheelspdvdValid = 1,
      }

      public enum Bcs_flwheeldirectionvdType {
        [pbr::OriginalName("BCS_FLWHEELDIRECTIONVD_INVALID")] BcsFlwheeldirectionvdInvalid = 0,
        [pbr::OriginalName("BCS_FLWHEELDIRECTIONVD_VALID")] BcsFlwheeldirectionvdValid = 1,
      }

      public enum Bcs_rrwheeldirectionType {
        [pbr::OriginalName("BCS_RRWHEELDIRECTION_FORWARD")] BcsRrwheeldirectionForward = 0,
        [pbr::OriginalName("BCS_RRWHEELDIRECTION_BACKWARD")] BcsRrwheeldirectionBackward = 1,
      }

      public enum Bcs_rlwheeldirectionType {
        [pbr::OriginalName("BCS_RLWHEELDIRECTION_FORWARD")] BcsRlwheeldirectionForward = 0,
        [pbr::OriginalName("BCS_RLWHEELDIRECTION_BACKWARD")] BcsRlwheeldirectionBackward = 1,
      }

      public enum Bcs_frwheeldirectionType {
        [pbr::OriginalName("BCS_FRWHEELDIRECTION_FORWARD")] BcsFrwheeldirectionForward = 0,
        [pbr::OriginalName("BCS_FRWHEELDIRECTION_BACKWARD")] BcsFrwheeldirectionBackward = 1,
      }

      public enum Bcs_flwheeldirectionType {
        [pbr::OriginalName("BCS_FLWHEELDIRECTION_FORWARD")] BcsFlwheeldirectionForward = 0,
        [pbr::OriginalName("BCS_FLWHEELDIRECTION_BACKWARD")] BcsFlwheeldirectionBackward = 1,
      }

    }
    #endregion

  }

  public sealed partial class Pc_epb_203 : pb::IMessage<Pc_epb_203> {
    private static readonly pb::MessageParser<Pc_epb_203> _parser = new pb::MessageParser<Pc_epb_203>(() => new Pc_epb_203());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Pc_epb_203> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Canbus.Ge3Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pc_epb_203() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pc_epb_203(Pc_epb_203 other) : this() {
      pcEpbreq_ = other.pcEpbreq_;
      pcEpbenable_ = other.pcEpbenable_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pc_epb_203 Clone() {
      return new Pc_epb_203(this);
    }

    /// <summary>Field number for the "pc_epbreq" field.</summary>
    public const int PcEpbreqFieldNumber = 1;
    private global::Apollo.Canbus.Pc_epb_203.Types.Pc_epbreqType pcEpbreq_ = 0;
    /// <summary>
    /// EPB request  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Pc_epb_203.Types.Pc_epbreqType PcEpbreq {
      get { return pcEpbreq_; }
      set {
        pcEpbreq_ = value;
      }
    }

    /// <summary>Field number for the "pc_epbenable" field.</summary>
    public const int PcEpbenableFieldNumber = 2;
    private global::Apollo.Canbus.Pc_epb_203.Types.Pc_epbenableType pcEpbenable_ = 0;
    /// <summary>
    /// EPB control enable  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Pc_epb_203.Types.Pc_epbenableType PcEpbenable {
      get { return pcEpbenable_; }
      set {
        pcEpbenable_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Pc_epb_203);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Pc_epb_203 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PcEpbreq != other.PcEpbreq) return false;
      if (PcEpbenable != other.PcEpbenable) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PcEpbreq != 0) hash ^= PcEpbreq.GetHashCode();
      if (PcEpbenable != 0) hash ^= PcEpbenable.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PcEpbreq != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PcEpbreq);
      }
      if (PcEpbenable != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) PcEpbenable);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PcEpbreq != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PcEpbreq);
      }
      if (PcEpbenable != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PcEpbenable);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Pc_epb_203 other) {
      if (other == null) {
        return;
      }
      if (other.PcEpbreq != 0) {
        PcEpbreq = other.PcEpbreq;
      }
      if (other.PcEpbenable != 0) {
        PcEpbenable = other.PcEpbenable;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            pcEpbreq_ = (global::Apollo.Canbus.Pc_epb_203.Types.Pc_epbreqType) input.ReadEnum();
            break;
          }
          case 16: {
            pcEpbenable_ = (global::Apollo.Canbus.Pc_epb_203.Types.Pc_epbenableType) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Pc_epb_203 message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Control Message
      /// </summary>
      public enum Pc_epbreqType {
        [pbr::OriginalName("PC_EPBREQ_INVALID")] PcEpbreqInvalid = 0,
        [pbr::OriginalName("PC_EPBREQ_RELEASE")] PcEpbreqRelease = 1,
        [pbr::OriginalName("PC_EPBREQ_APPLY")] PcEpbreqApply = 2,
      }

      public enum Pc_epbenableType {
        [pbr::OriginalName("PC_EPBENABLE_DISABLE")] PcEpbenableDisable = 0,
        [pbr::OriginalName("PC_EPBENABLE_ENABLE")] PcEpbenableEnable = 1,
      }

    }
    #endregion

  }

  public sealed partial class Pc_bcs_202 : pb::IMessage<Pc_bcs_202> {
    private static readonly pb::MessageParser<Pc_bcs_202> _parser = new pb::MessageParser<Pc_bcs_202>(() => new Pc_bcs_202());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Pc_bcs_202> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Canbus.Ge3Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pc_bcs_202() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pc_bcs_202(Pc_bcs_202 other) : this() {
      pcBrkpedreq_ = other.pcBrkpedreq_;
      pcBrkpedenable_ = other.pcBrkpedenable_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pc_bcs_202 Clone() {
      return new Pc_bcs_202(this);
    }

    /// <summary>Field number for the "pc_brkpedreq" field.</summary>
    public const int PcBrkpedreqFieldNumber = 1;
    private double pcBrkpedreq_;
    /// <summary>
    /// Brake pedal request  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double PcBrkpedreq {
      get { return pcBrkpedreq_; }
      set {
        pcBrkpedreq_ = value;
      }
    }

    /// <summary>Field number for the "pc_brkpedenable" field.</summary>
    public const int PcBrkpedenableFieldNumber = 2;
    private global::Apollo.Canbus.Pc_bcs_202.Types.Pc_brkpedenableType pcBrkpedenable_ = 0;
    /// <summary>
    /// Brake pedal control enable  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Pc_bcs_202.Types.Pc_brkpedenableType PcBrkpedenable {
      get { return pcBrkpedenable_; }
      set {
        pcBrkpedenable_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Pc_bcs_202);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Pc_bcs_202 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PcBrkpedreq != other.PcBrkpedreq) return false;
      if (PcBrkpedenable != other.PcBrkpedenable) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PcBrkpedreq != 0D) hash ^= PcBrkpedreq.GetHashCode();
      if (PcBrkpedenable != 0) hash ^= PcBrkpedenable.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PcBrkpedreq != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(PcBrkpedreq);
      }
      if (PcBrkpedenable != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) PcBrkpedenable);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PcBrkpedreq != 0D) {
        size += 1 + 8;
      }
      if (PcBrkpedenable != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PcBrkpedenable);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Pc_bcs_202 other) {
      if (other == null) {
        return;
      }
      if (other.PcBrkpedreq != 0D) {
        PcBrkpedreq = other.PcBrkpedreq;
      }
      if (other.PcBrkpedenable != 0) {
        PcBrkpedenable = other.PcBrkpedenable;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 9: {
            PcBrkpedreq = input.ReadDouble();
            break;
          }
          case 16: {
            pcBrkpedenable_ = (global::Apollo.Canbus.Pc_bcs_202.Types.Pc_brkpedenableType) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Pc_bcs_202 message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Control Message
      /// </summary>
      public enum Pc_brkpedenableType {
        [pbr::OriginalName("PC_BRKPEDENABLE_DISABLE")] PcBrkpedenableDisable = 0,
        [pbr::OriginalName("PC_BRKPEDENABLE_ENABLE")] PcBrkpedenableEnable = 1,
      }

    }
    #endregion

  }

  public sealed partial class Pc_vcu_205 : pb::IMessage<Pc_vcu_205> {
    private static readonly pb::MessageParser<Pc_vcu_205> _parser = new pb::MessageParser<Pc_vcu_205>(() => new Pc_vcu_205());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Pc_vcu_205> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Canbus.Ge3Reflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pc_vcu_205() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pc_vcu_205(Pc_vcu_205 other) : this() {
      pcAccpedreq_ = other.pcAccpedreq_;
      pcAccpedenable_ = other.pcAccpedenable_;
      pcTorqreq_ = other.pcTorqreq_;
      pcTorqenable_ = other.pcTorqenable_;
      pcGearreq_ = other.pcGearreq_;
      pcGearenable_ = other.pcGearenable_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pc_vcu_205 Clone() {
      return new Pc_vcu_205(this);
    }

    /// <summary>Field number for the "pc_accpedreq" field.</summary>
    public const int PcAccpedreqFieldNumber = 1;
    private double pcAccpedreq_;
    /// <summary>
    /// Acceleration pedal request  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double PcAccpedreq {
      get { return pcAccpedreq_; }
      set {
        pcAccpedreq_ = value;
      }
    }

    /// <summary>Field number for the "pc_accpedenable" field.</summary>
    public const int PcAccpedenableFieldNumber = 2;
    private global::Apollo.Canbus.Pc_vcu_205.Types.Pc_accpedenableType pcAccpedenable_ = 0;
    /// <summary>
    /// Acceleration pedal control enable  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Pc_vcu_205.Types.Pc_accpedenableType PcAccpedenable {
      get { return pcAccpedenable_; }
      set {
        pcAccpedenable_ = value;
      }
    }

    /// <summary>Field number for the "pc_torqreq" field.</summary>
    public const int PcTorqreqFieldNumber = 3;
    private double pcTorqreq_;
    /// <summary>
    /// Torque request  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double PcTorqreq {
      get { return pcTorqreq_; }
      set {
        pcTorqreq_ = value;
      }
    }

    /// <summary>Field number for the "pc_torqenable" field.</summary>
    public const int PcTorqenableFieldNumber = 4;
    private global::Apollo.Canbus.Pc_vcu_205.Types.Pc_torqenableType pcTorqenable_ = 0;
    /// <summary>
    /// Torque control enable  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Pc_vcu_205.Types.Pc_torqenableType PcTorqenable {
      get { return pcTorqenable_; }
      set {
        pcTorqenable_ = value;
      }
    }

    /// <summary>Field number for the "pc_gearreq" field.</summary>
    public const int PcGearreqFieldNumber = 5;
    private global::Apollo.Canbus.Pc_vcu_205.Types.Pc_gearreqType pcGearreq_ = 0;
    /// <summary>
    /// Gear request  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Pc_vcu_205.Types.Pc_gearreqType PcGearreq {
      get { return pcGearreq_; }
      set {
        pcGearreq_ = value;
      }
    }

    /// <summary>Field number for the "pc_gearenable" field.</summary>
    public const int PcGearenableFieldNumber = 6;
    private global::Apollo.Canbus.Pc_vcu_205.Types.Pc_gearenableType pcGearenable_ = 0;
    /// <summary>
    /// Gear control enable  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Pc_vcu_205.Types.Pc_gearenableType PcGearenable {
      get { return pcGearenable_; }
      set {
        pcGearenable_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Pc_vcu_205);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Pc_vcu_205 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PcAccpedreq != other.PcAccpedreq) return false;
      if (PcAccpedenable != other.PcAccpedenable) return false;
      if (PcTorqreq != other.PcTorqreq) return false;
      if (PcTorqenable != other.PcTorqenable) return false;
      if (PcGearreq != other.PcGearreq) return false;
      if (PcGearenable != other.PcGearenable) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PcAccpedreq != 0D) hash ^= PcAccpedreq.GetHashCode();
      if (PcAccpedenable != 0) hash ^= PcAccpedenable.GetHashCode();
      if (PcTorqreq != 0D) hash ^= PcTorqreq.GetHashCode();
      if (PcTorqenable != 0) hash ^= PcTorqenable.GetHashCode();
      if (PcGearreq != 0) hash ^= PcGearreq.GetHashCode();
      if (PcGearenable != 0) hash ^= PcGearenable.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PcAccpedreq != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(PcAccpedreq);
      }
      if (PcAccpedenable != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) PcAccpedenable);
      }
      if (PcTorqreq != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(PcTorqreq);
      }
      if (PcTorqenable != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) PcTorqenable);
      }
      if (PcGearreq != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) PcGearreq);
      }
      if (PcGearenable != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) PcGearenable);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PcAccpedreq != 0D) {
        size += 1 + 8;
      }
      if (PcAccpedenable != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PcAccpedenable);
      }
      if (PcTorqreq != 0D) {
        size += 1 + 8;
      }
      if (PcTorqenable != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PcTorqenable);
      }
      if (PcGearreq != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PcGearreq);
      }
      if (PcGearenable != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PcGearenable);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Pc_vcu_205 other) {
      if (other == null) {
        return;
      }
      if (other.PcAccpedreq != 0D) {
        PcAccpedreq = other.PcAccpedreq;
      }
      if (other.PcAccpedenable != 0) {
        PcAccpedenable = other.PcAccpedenable;
      }
      if (other.PcTorqreq != 0D) {
        PcTorqreq = other.PcTorqreq;
      }
      if (other.PcTorqenable != 0) {
        PcTorqenable = other.PcTorqenable;
      }
      if (other.PcGearreq != 0) {
        PcGearreq = other.PcGearreq;
      }
      if (other.PcGearenable != 0) {
        PcGearenable = other.PcGearenable;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 9: {
            PcAccpedreq = input.ReadDouble();
            break;
          }
          case 16: {
            pcAccpedenable_ = (global::Apollo.Canbus.Pc_vcu_205.Types.Pc_accpedenableType) input.ReadEnum();
            break;
          }
          case 25: {
            PcTorqreq = input.ReadDouble();
            break;
          }
          case 32: {
            pcTorqenable_ = (global::Apollo.Canbus.Pc_vcu_205.Types.Pc_torqenableType) input.ReadEnum();
            break;
          }
          case 40: {
            pcGearreq_ = (global::Apollo.Canbus.Pc_vcu_205.Types.Pc_gearreqType) input.ReadEnum();
            break;
          }
          case 48: {
            pcGearenable_ = (global::Apollo.Canbus.Pc_vcu_205.Types.Pc_gearenableType) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Pc_vcu_205 message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Control Message
      /// </summary>
      public enum Pc_accpedenableType {
        [pbr::OriginalName("PC_ACCPEDENABLE_DISABLE")] PcAccpedenableDisable = 0,
        [pbr::OriginalName("PC_ACCPEDENABLE_ENABLE")] PcAccpedenableEnable = 1,
      }

      public enum Pc_torqenableType {
        [pbr::OriginalName("PC_TORQENABLE_DISABLE")] PcTorqenableDisable = 0,
        [pbr::OriginalName("PC_TORQENABLE_ENABLE")] PcTorqenableEnable = 1,
      }

      public enum Pc_gearreqType {
        [pbr::OriginalName("PC_GEARREQ_INVALID")] PcGearreqInvalid = 0,
        [pbr::OriginalName("PC_GEARREQ_DRIVE")] PcGearreqDrive = 1,
        [pbr::OriginalName("PC_GEARREQ_NEUTRAL")] PcGearreqNeutral = 2,
        [pbr::OriginalName("PC_GEARREQ_REVERSE")] PcGearreqReverse = 3,
        [pbr::OriginalName("PC_GEARREQ_PARK")] PcGearreqPark = 4,
      }

      public enum Pc_gearenableType {
        [pbr::OriginalName("PC_GEARENABLE_DISABLE")] PcGearenableDisable = 0,
        [pbr::OriginalName("PC_GEARENABLE_ENABLE")] PcGearenableEnable = 1,
      }

    }
    #endregion

  }

  public sealed partial class Pc_eps_204 : pb::IMessage<Pc_eps_204> {
    private static readonly pb::MessageParser<Pc_eps_204> _parser = new pb::MessageParser<Pc_eps_204>(() => new Pc_eps_204());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Pc_eps_204> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Canbus.Ge3Reflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pc_eps_204() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pc_eps_204(Pc_eps_204 other) : this() {
      pcSteerspdreq_ = other.pcSteerspdreq_;
      pcSteerenable_ = other.pcSteerenable_;
      pcSteerangreq_ = other.pcSteerangreq_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pc_eps_204 Clone() {
      return new Pc_eps_204(this);
    }

    /// <summary>Field number for the "pc_steerspdreq" field.</summary>
    public const int PcSteerspdreqFieldNumber = 1;
    private int pcSteerspdreq_;
    /// <summary>
    /// Steer speed request  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PcSteerspdreq {
      get { return pcSteerspdreq_; }
      set {
        pcSteerspdreq_ = value;
      }
    }

    /// <summary>Field number for the "pc_steerenable" field.</summary>
    public const int PcSteerenableFieldNumber = 2;
    private global::Apollo.Canbus.Pc_eps_204.Types.Pc_steerenableType pcSteerenable_ = 0;
    /// <summary>
    /// Steer control enable  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Pc_eps_204.Types.Pc_steerenableType PcSteerenable {
      get { return pcSteerenable_; }
      set {
        pcSteerenable_ = value;
      }
    }

    /// <summary>Field number for the "pc_steerangreq" field.</summary>
    public const int PcSteerangreqFieldNumber = 3;
    private double pcSteerangreq_;
    /// <summary>
    /// Steer angle request  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double PcSteerangreq {
      get { return pcSteerangreq_; }
      set {
        pcSteerangreq_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Pc_eps_204);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Pc_eps_204 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PcSteerspdreq != other.PcSteerspdreq) return false;
      if (PcSteerenable != other.PcSteerenable) return false;
      if (PcSteerangreq != other.PcSteerangreq) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PcSteerspdreq != 0) hash ^= PcSteerspdreq.GetHashCode();
      if (PcSteerenable != 0) hash ^= PcSteerenable.GetHashCode();
      if (PcSteerangreq != 0D) hash ^= PcSteerangreq.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PcSteerspdreq != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PcSteerspdreq);
      }
      if (PcSteerenable != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) PcSteerenable);
      }
      if (PcSteerangreq != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(PcSteerangreq);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PcSteerspdreq != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PcSteerspdreq);
      }
      if (PcSteerenable != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PcSteerenable);
      }
      if (PcSteerangreq != 0D) {
        size += 1 + 8;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Pc_eps_204 other) {
      if (other == null) {
        return;
      }
      if (other.PcSteerspdreq != 0) {
        PcSteerspdreq = other.PcSteerspdreq;
      }
      if (other.PcSteerenable != 0) {
        PcSteerenable = other.PcSteerenable;
      }
      if (other.PcSteerangreq != 0D) {
        PcSteerangreq = other.PcSteerangreq;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            PcSteerspdreq = input.ReadInt32();
            break;
          }
          case 16: {
            pcSteerenable_ = (global::Apollo.Canbus.Pc_eps_204.Types.Pc_steerenableType) input.ReadEnum();
            break;
          }
          case 25: {
            PcSteerangreq = input.ReadDouble();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Pc_eps_204 message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Control Message
      /// </summary>
      public enum Pc_steerenableType {
        [pbr::OriginalName("PC_STEERENABLE_DISABLE")] PcSteerenableDisable = 0,
        [pbr::OriginalName("PC_STEERENABLE_ENABLE")] PcSteerenableEnable = 1,
      }

    }
    #endregion

  }

  public sealed partial class Scu_vcu_2_313 : pb::IMessage<Scu_vcu_2_313> {
    private static readonly pb::MessageParser<Scu_vcu_2_313> _parser = new pb::MessageParser<Scu_vcu_2_313>(() => new Scu_vcu_2_313());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Scu_vcu_2_313> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Canbus.Ge3Reflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scu_vcu_2_313() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scu_vcu_2_313(Scu_vcu_2_313 other) : this() {
      vcuTorqposmax_ = other.vcuTorqposmax_;
      vcuTorqnegmax_ = other.vcuTorqnegmax_;
      vcuTorqact_ = other.vcuTorqact_;
      vcuEngspd_ = other.vcuEngspd_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scu_vcu_2_313 Clone() {
      return new Scu_vcu_2_313(this);
    }

    /// <summary>Field number for the "vcu_torqposmax" field.</summary>
    public const int VcuTorqposmaxFieldNumber = 1;
    private double vcuTorqposmax_;
    /// <summary>
    /// Report Message
    /// Max positive torque  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double VcuTorqposmax {
      get { return vcuTorqposmax_; }
      set {
        vcuTorqposmax_ = value;
      }
    }

    /// <summary>Field number for the "vcu_torqnegmax" field.</summary>
    public const int VcuTorqnegmaxFieldNumber = 2;
    private double vcuTorqnegmax_;
    /// <summary>
    /// Max negative torque  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double VcuTorqnegmax {
      get { return vcuTorqnegmax_; }
      set {
        vcuTorqnegmax_ = value;
      }
    }

    /// <summary>Field number for the "vcu_torqact" field.</summary>
    public const int VcuTorqactFieldNumber = 3;
    private double vcuTorqact_;
    /// <summary>
    /// Actual torque  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double VcuTorqact {
      get { return vcuTorqact_; }
      set {
        vcuTorqact_ = value;
      }
    }

    /// <summary>Field number for the "vcu_engspd" field.</summary>
    public const int VcuEngspdFieldNumber = 4;
    private int vcuEngspd_;
    /// <summary>
    /// Engine speed  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VcuEngspd {
      get { return vcuEngspd_; }
      set {
        vcuEngspd_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Scu_vcu_2_313);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Scu_vcu_2_313 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VcuTorqposmax != other.VcuTorqposmax) return false;
      if (VcuTorqnegmax != other.VcuTorqnegmax) return false;
      if (VcuTorqact != other.VcuTorqact) return false;
      if (VcuEngspd != other.VcuEngspd) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (VcuTorqposmax != 0D) hash ^= VcuTorqposmax.GetHashCode();
      if (VcuTorqnegmax != 0D) hash ^= VcuTorqnegmax.GetHashCode();
      if (VcuTorqact != 0D) hash ^= VcuTorqact.GetHashCode();
      if (VcuEngspd != 0) hash ^= VcuEngspd.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (VcuTorqposmax != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(VcuTorqposmax);
      }
      if (VcuTorqnegmax != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(VcuTorqnegmax);
      }
      if (VcuTorqact != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(VcuTorqact);
      }
      if (VcuEngspd != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(VcuEngspd);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (VcuTorqposmax != 0D) {
        size += 1 + 8;
      }
      if (VcuTorqnegmax != 0D) {
        size += 1 + 8;
      }
      if (VcuTorqact != 0D) {
        size += 1 + 8;
      }
      if (VcuEngspd != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VcuEngspd);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Scu_vcu_2_313 other) {
      if (other == null) {
        return;
      }
      if (other.VcuTorqposmax != 0D) {
        VcuTorqposmax = other.VcuTorqposmax;
      }
      if (other.VcuTorqnegmax != 0D) {
        VcuTorqnegmax = other.VcuTorqnegmax;
      }
      if (other.VcuTorqact != 0D) {
        VcuTorqact = other.VcuTorqact;
      }
      if (other.VcuEngspd != 0) {
        VcuEngspd = other.VcuEngspd;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 9: {
            VcuTorqposmax = input.ReadDouble();
            break;
          }
          case 17: {
            VcuTorqnegmax = input.ReadDouble();
            break;
          }
          case 25: {
            VcuTorqact = input.ReadDouble();
            break;
          }
          case 32: {
            VcuEngspd = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Scu_1_301 : pb::IMessage<Scu_1_301> {
    private static readonly pb::MessageParser<Scu_1_301> _parser = new pb::MessageParser<Scu_1_301>(() => new Scu_1_301());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Scu_1_301> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Canbus.Ge3Reflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scu_1_301() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scu_1_301(Scu_1_301 other) : this() {
      vin16_ = other.vin16_;
      scuStopbutst_ = other.scuStopbutst_;
      scuDrvmode_ = other.scuDrvmode_;
      scuFaultst_ = other.scuFaultst_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scu_1_301 Clone() {
      return new Scu_1_301(this);
    }

    /// <summary>Field number for the "vin16" field.</summary>
    public const int Vin16FieldNumber = 1;
    private int vin16_;
    /// <summary>
    /// VIN string character 16  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vin16 {
      get { return vin16_; }
      set {
        vin16_ = value;
      }
    }

    /// <summary>Field number for the "scu_stopbutst" field.</summary>
    public const int ScuStopbutstFieldNumber = 2;
    private global::Apollo.Canbus.Scu_1_301.Types.Scu_stopbutstType scuStopbutst_ = 0;
    /// <summary>
    /// Brake pedal position  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_1_301.Types.Scu_stopbutstType ScuStopbutst {
      get { return scuStopbutst_; }
      set {
        scuStopbutst_ = value;
      }
    }

    /// <summary>Field number for the "scu_drvmode" field.</summary>
    public const int ScuDrvmodeFieldNumber = 3;
    private global::Apollo.Canbus.Scu_1_301.Types.Scu_drvmodeType scuDrvmode_ = 0;
    /// <summary>
    /// SCU drive mode  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_1_301.Types.Scu_drvmodeType ScuDrvmode {
      get { return scuDrvmode_; }
      set {
        scuDrvmode_ = value;
      }
    }

    /// <summary>Field number for the "scu_faultst" field.</summary>
    public const int ScuFaultstFieldNumber = 4;
    private global::Apollo.Canbus.Scu_1_301.Types.Scu_faultstType scuFaultst_ = 0;
    /// <summary>
    /// SCU fault status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_1_301.Types.Scu_faultstType ScuFaultst {
      get { return scuFaultst_; }
      set {
        scuFaultst_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Scu_1_301);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Scu_1_301 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Vin16 != other.Vin16) return false;
      if (ScuStopbutst != other.ScuStopbutst) return false;
      if (ScuDrvmode != other.ScuDrvmode) return false;
      if (ScuFaultst != other.ScuFaultst) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Vin16 != 0) hash ^= Vin16.GetHashCode();
      if (ScuStopbutst != 0) hash ^= ScuStopbutst.GetHashCode();
      if (ScuDrvmode != 0) hash ^= ScuDrvmode.GetHashCode();
      if (ScuFaultst != 0) hash ^= ScuFaultst.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Vin16 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Vin16);
      }
      if (ScuStopbutst != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ScuStopbutst);
      }
      if (ScuDrvmode != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ScuDrvmode);
      }
      if (ScuFaultst != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ScuFaultst);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Vin16 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vin16);
      }
      if (ScuStopbutst != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ScuStopbutst);
      }
      if (ScuDrvmode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ScuDrvmode);
      }
      if (ScuFaultst != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ScuFaultst);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Scu_1_301 other) {
      if (other == null) {
        return;
      }
      if (other.Vin16 != 0) {
        Vin16 = other.Vin16;
      }
      if (other.ScuStopbutst != 0) {
        ScuStopbutst = other.ScuStopbutst;
      }
      if (other.ScuDrvmode != 0) {
        ScuDrvmode = other.ScuDrvmode;
      }
      if (other.ScuFaultst != 0) {
        ScuFaultst = other.ScuFaultst;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Vin16 = input.ReadInt32();
            break;
          }
          case 16: {
            scuStopbutst_ = (global::Apollo.Canbus.Scu_1_301.Types.Scu_stopbutstType) input.ReadEnum();
            break;
          }
          case 24: {
            scuDrvmode_ = (global::Apollo.Canbus.Scu_1_301.Types.Scu_drvmodeType) input.ReadEnum();
            break;
          }
          case 32: {
            scuFaultst_ = (global::Apollo.Canbus.Scu_1_301.Types.Scu_faultstType) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Scu_1_301 message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Report Message
      /// </summary>
      public enum Scu_stopbutstType {
        [pbr::OriginalName("SCU_STOPBUTST_UNPRESSED")] ScuStopbutstUnpressed = 0,
        [pbr::OriginalName("SCU_STOPBUTST_PRESSED")] ScuStopbutstPressed = 1,
      }

      public enum Scu_drvmodeType {
        [pbr::OriginalName("SCU_DRVMODE_INVALID")] ScuDrvmodeInvalid = 0,
        [pbr::OriginalName("SCU_DRVMODE_MANUAL")] ScuDrvmodeManual = 1,
        [pbr::OriginalName("SCU_DRVMODE_INTERRUPT")] ScuDrvmodeInterrupt = 2,
        [pbr::OriginalName("SCU_DRVMODE_AUTO")] ScuDrvmodeAuto = 3,
      }

      public enum Scu_faultstType {
        [pbr::OriginalName("SCU_FAULTST_NORMAL")] ScuFaultstNormal = 0,
        [pbr::OriginalName("SCU_FAULTST_FAULT")] ScuFaultstFault = 1,
      }

    }
    #endregion

  }

  public sealed partial class Scu_2_302 : pb::IMessage<Scu_2_302> {
    private static readonly pb::MessageParser<Scu_2_302> _parser = new pb::MessageParser<Scu_2_302>(() => new Scu_2_302());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Scu_2_302> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Canbus.Ge3Reflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scu_2_302() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scu_2_302(Scu_2_302 other) : this() {
      vin07_ = other.vin07_;
      vin06_ = other.vin06_;
      vin05_ = other.vin05_;
      vin04_ = other.vin04_;
      vin03_ = other.vin03_;
      vin02_ = other.vin02_;
      vin01_ = other.vin01_;
      vin00_ = other.vin00_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scu_2_302 Clone() {
      return new Scu_2_302(this);
    }

    /// <summary>Field number for the "vin07" field.</summary>
    public const int Vin07FieldNumber = 1;
    private int vin07_;
    /// <summary>
    /// Report Message
    /// VIN string character 07  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vin07 {
      get { return vin07_; }
      set {
        vin07_ = value;
      }
    }

    /// <summary>Field number for the "vin06" field.</summary>
    public const int Vin06FieldNumber = 2;
    private int vin06_;
    /// <summary>
    /// VIN string character 06  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vin06 {
      get { return vin06_; }
      set {
        vin06_ = value;
      }
    }

    /// <summary>Field number for the "vin05" field.</summary>
    public const int Vin05FieldNumber = 3;
    private int vin05_;
    /// <summary>
    /// VIN string character 05  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vin05 {
      get { return vin05_; }
      set {
        vin05_ = value;
      }
    }

    /// <summary>Field number for the "vin04" field.</summary>
    public const int Vin04FieldNumber = 4;
    private int vin04_;
    /// <summary>
    /// VIN string character 04  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vin04 {
      get { return vin04_; }
      set {
        vin04_ = value;
      }
    }

    /// <summary>Field number for the "vin03" field.</summary>
    public const int Vin03FieldNumber = 5;
    private int vin03_;
    /// <summary>
    /// VIN string character 03  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vin03 {
      get { return vin03_; }
      set {
        vin03_ = value;
      }
    }

    /// <summary>Field number for the "vin02" field.</summary>
    public const int Vin02FieldNumber = 6;
    private int vin02_;
    /// <summary>
    /// VIN string character 02  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vin02 {
      get { return vin02_; }
      set {
        vin02_ = value;
      }
    }

    /// <summary>Field number for the "vin01" field.</summary>
    public const int Vin01FieldNumber = 7;
    private int vin01_;
    /// <summary>
    /// VIN string character 01  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vin01 {
      get { return vin01_; }
      set {
        vin01_ = value;
      }
    }

    /// <summary>Field number for the "vin00" field.</summary>
    public const int Vin00FieldNumber = 8;
    private int vin00_;
    /// <summary>
    /// VIN string character 00  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vin00 {
      get { return vin00_; }
      set {
        vin00_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Scu_2_302);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Scu_2_302 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Vin07 != other.Vin07) return false;
      if (Vin06 != other.Vin06) return false;
      if (Vin05 != other.Vin05) return false;
      if (Vin04 != other.Vin04) return false;
      if (Vin03 != other.Vin03) return false;
      if (Vin02 != other.Vin02) return false;
      if (Vin01 != other.Vin01) return false;
      if (Vin00 != other.Vin00) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Vin07 != 0) hash ^= Vin07.GetHashCode();
      if (Vin06 != 0) hash ^= Vin06.GetHashCode();
      if (Vin05 != 0) hash ^= Vin05.GetHashCode();
      if (Vin04 != 0) hash ^= Vin04.GetHashCode();
      if (Vin03 != 0) hash ^= Vin03.GetHashCode();
      if (Vin02 != 0) hash ^= Vin02.GetHashCode();
      if (Vin01 != 0) hash ^= Vin01.GetHashCode();
      if (Vin00 != 0) hash ^= Vin00.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Vin07 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Vin07);
      }
      if (Vin06 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Vin06);
      }
      if (Vin05 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Vin05);
      }
      if (Vin04 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Vin04);
      }
      if (Vin03 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Vin03);
      }
      if (Vin02 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Vin02);
      }
      if (Vin01 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Vin01);
      }
      if (Vin00 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Vin00);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Vin07 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vin07);
      }
      if (Vin06 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vin06);
      }
      if (Vin05 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vin05);
      }
      if (Vin04 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vin04);
      }
      if (Vin03 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vin03);
      }
      if (Vin02 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vin02);
      }
      if (Vin01 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vin01);
      }
      if (Vin00 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vin00);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Scu_2_302 other) {
      if (other == null) {
        return;
      }
      if (other.Vin07 != 0) {
        Vin07 = other.Vin07;
      }
      if (other.Vin06 != 0) {
        Vin06 = other.Vin06;
      }
      if (other.Vin05 != 0) {
        Vin05 = other.Vin05;
      }
      if (other.Vin04 != 0) {
        Vin04 = other.Vin04;
      }
      if (other.Vin03 != 0) {
        Vin03 = other.Vin03;
      }
      if (other.Vin02 != 0) {
        Vin02 = other.Vin02;
      }
      if (other.Vin01 != 0) {
        Vin01 = other.Vin01;
      }
      if (other.Vin00 != 0) {
        Vin00 = other.Vin00;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Vin07 = input.ReadInt32();
            break;
          }
          case 16: {
            Vin06 = input.ReadInt32();
            break;
          }
          case 24: {
            Vin05 = input.ReadInt32();
            break;
          }
          case 32: {
            Vin04 = input.ReadInt32();
            break;
          }
          case 40: {
            Vin03 = input.ReadInt32();
            break;
          }
          case 48: {
            Vin02 = input.ReadInt32();
            break;
          }
          case 56: {
            Vin01 = input.ReadInt32();
            break;
          }
          case 64: {
            Vin00 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Scu_3_303 : pb::IMessage<Scu_3_303> {
    private static readonly pb::MessageParser<Scu_3_303> _parser = new pb::MessageParser<Scu_3_303>(() => new Scu_3_303());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Scu_3_303> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Canbus.Ge3Reflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scu_3_303() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scu_3_303(Scu_3_303 other) : this() {
      vin15_ = other.vin15_;
      vin14_ = other.vin14_;
      vin13_ = other.vin13_;
      vin12_ = other.vin12_;
      vin11_ = other.vin11_;
      vin10_ = other.vin10_;
      vin09_ = other.vin09_;
      vin08_ = other.vin08_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scu_3_303 Clone() {
      return new Scu_3_303(this);
    }

    /// <summary>Field number for the "vin15" field.</summary>
    public const int Vin15FieldNumber = 1;
    private int vin15_;
    /// <summary>
    /// Report Message
    /// VIN string character 15  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vin15 {
      get { return vin15_; }
      set {
        vin15_ = value;
      }
    }

    /// <summary>Field number for the "vin14" field.</summary>
    public const int Vin14FieldNumber = 2;
    private int vin14_;
    /// <summary>
    /// VIN string character 14  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vin14 {
      get { return vin14_; }
      set {
        vin14_ = value;
      }
    }

    /// <summary>Field number for the "vin13" field.</summary>
    public const int Vin13FieldNumber = 3;
    private int vin13_;
    /// <summary>
    /// VIN string character 13  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vin13 {
      get { return vin13_; }
      set {
        vin13_ = value;
      }
    }

    /// <summary>Field number for the "vin12" field.</summary>
    public const int Vin12FieldNumber = 4;
    private int vin12_;
    /// <summary>
    /// VIN string character 12  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vin12 {
      get { return vin12_; }
      set {
        vin12_ = value;
      }
    }

    /// <summary>Field number for the "vin11" field.</summary>
    public const int Vin11FieldNumber = 5;
    private int vin11_;
    /// <summary>
    /// VIN string character 11  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vin11 {
      get { return vin11_; }
      set {
        vin11_ = value;
      }
    }

    /// <summary>Field number for the "vin10" field.</summary>
    public const int Vin10FieldNumber = 6;
    private int vin10_;
    /// <summary>
    /// VIN string character 10  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vin10 {
      get { return vin10_; }
      set {
        vin10_ = value;
      }
    }

    /// <summary>Field number for the "vin09" field.</summary>
    public const int Vin09FieldNumber = 7;
    private int vin09_;
    /// <summary>
    /// VIN string character 09  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vin09 {
      get { return vin09_; }
      set {
        vin09_ = value;
      }
    }

    /// <summary>Field number for the "vin08" field.</summary>
    public const int Vin08FieldNumber = 8;
    private int vin08_;
    /// <summary>
    /// VIN string character 08  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vin08 {
      get { return vin08_; }
      set {
        vin08_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Scu_3_303);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Scu_3_303 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Vin15 != other.Vin15) return false;
      if (Vin14 != other.Vin14) return false;
      if (Vin13 != other.Vin13) return false;
      if (Vin12 != other.Vin12) return false;
      if (Vin11 != other.Vin11) return false;
      if (Vin10 != other.Vin10) return false;
      if (Vin09 != other.Vin09) return false;
      if (Vin08 != other.Vin08) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Vin15 != 0) hash ^= Vin15.GetHashCode();
      if (Vin14 != 0) hash ^= Vin14.GetHashCode();
      if (Vin13 != 0) hash ^= Vin13.GetHashCode();
      if (Vin12 != 0) hash ^= Vin12.GetHashCode();
      if (Vin11 != 0) hash ^= Vin11.GetHashCode();
      if (Vin10 != 0) hash ^= Vin10.GetHashCode();
      if (Vin09 != 0) hash ^= Vin09.GetHashCode();
      if (Vin08 != 0) hash ^= Vin08.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Vin15 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Vin15);
      }
      if (Vin14 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Vin14);
      }
      if (Vin13 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Vin13);
      }
      if (Vin12 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Vin12);
      }
      if (Vin11 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Vin11);
      }
      if (Vin10 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Vin10);
      }
      if (Vin09 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Vin09);
      }
      if (Vin08 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Vin08);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Vin15 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vin15);
      }
      if (Vin14 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vin14);
      }
      if (Vin13 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vin13);
      }
      if (Vin12 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vin12);
      }
      if (Vin11 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vin11);
      }
      if (Vin10 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vin10);
      }
      if (Vin09 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vin09);
      }
      if (Vin08 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vin08);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Scu_3_303 other) {
      if (other == null) {
        return;
      }
      if (other.Vin15 != 0) {
        Vin15 = other.Vin15;
      }
      if (other.Vin14 != 0) {
        Vin14 = other.Vin14;
      }
      if (other.Vin13 != 0) {
        Vin13 = other.Vin13;
      }
      if (other.Vin12 != 0) {
        Vin12 = other.Vin12;
      }
      if (other.Vin11 != 0) {
        Vin11 = other.Vin11;
      }
      if (other.Vin10 != 0) {
        Vin10 = other.Vin10;
      }
      if (other.Vin09 != 0) {
        Vin09 = other.Vin09;
      }
      if (other.Vin08 != 0) {
        Vin08 = other.Vin08;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Vin15 = input.ReadInt32();
            break;
          }
          case 16: {
            Vin14 = input.ReadInt32();
            break;
          }
          case 24: {
            Vin13 = input.ReadInt32();
            break;
          }
          case 32: {
            Vin12 = input.ReadInt32();
            break;
          }
          case 40: {
            Vin11 = input.ReadInt32();
            break;
          }
          case 48: {
            Vin10 = input.ReadInt32();
            break;
          }
          case 56: {
            Vin09 = input.ReadInt32();
            break;
          }
          case 64: {
            Vin08 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Scu_bcm_304 : pb::IMessage<Scu_bcm_304> {
    private static readonly pb::MessageParser<Scu_bcm_304> _parser = new pb::MessageParser<Scu_bcm_304>(() => new Scu_bcm_304());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Scu_bcm_304> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Canbus.Ge3Reflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scu_bcm_304() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scu_bcm_304(Scu_bcm_304 other) : this() {
      bcmVehreversest_ = other.bcmVehreversest_;
      bcmRightturnlampst_ = other.bcmRightturnlampst_;
      bcmRearfoglampst_ = other.bcmRearfoglampst_;
      bcmParkinglampst_ = other.bcmParkinglampst_;
      bcmLowbeamst_ = other.bcmLowbeamst_;
      bcmLeftturnlampst_ = other.bcmLeftturnlampst_;
      bcmKeyst_ = other.bcmKeyst_;
      bcmHornst_ = other.bcmHornst_;
      bcmHighbeamst_ = other.bcmHighbeamst_;
      bcmHazardlampst_ = other.bcmHazardlampst_;
      bcmFrontfoglampst_ = other.bcmFrontfoglampst_;
      bcmBrakelightswitchst_ = other.bcmBrakelightswitchst_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scu_bcm_304 Clone() {
      return new Scu_bcm_304(this);
    }

    /// <summary>Field number for the "bcm_vehreversest" field.</summary>
    public const int BcmVehreversestFieldNumber = 1;
    private global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_vehreversestType bcmVehreversest_ = 0;
    /// <summary>
    /// Vehicle reverse status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_vehreversestType BcmVehreversest {
      get { return bcmVehreversest_; }
      set {
        bcmVehreversest_ = value;
      }
    }

    /// <summary>Field number for the "bcm_rightturnlampst" field.</summary>
    public const int BcmRightturnlampstFieldNumber = 2;
    private global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_rightturnlampstType bcmRightturnlampst_ = 0;
    /// <summary>
    /// Right turn lamp status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_rightturnlampstType BcmRightturnlampst {
      get { return bcmRightturnlampst_; }
      set {
        bcmRightturnlampst_ = value;
      }
    }

    /// <summary>Field number for the "bcm_rearfoglampst" field.</summary>
    public const int BcmRearfoglampstFieldNumber = 3;
    private global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_rearfoglampstType bcmRearfoglampst_ = 0;
    /// <summary>
    /// Rear fog lamp status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_rearfoglampstType BcmRearfoglampst {
      get { return bcmRearfoglampst_; }
      set {
        bcmRearfoglampst_ = value;
      }
    }

    /// <summary>Field number for the "bcm_parkinglampst" field.</summary>
    public const int BcmParkinglampstFieldNumber = 4;
    private global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_parkinglampstType bcmParkinglampst_ = 0;
    /// <summary>
    /// Parking lamp status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_parkinglampstType BcmParkinglampst {
      get { return bcmParkinglampst_; }
      set {
        bcmParkinglampst_ = value;
      }
    }

    /// <summary>Field number for the "bcm_lowbeamst" field.</summary>
    public const int BcmLowbeamstFieldNumber = 5;
    private global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_lowbeamstType bcmLowbeamst_ = 0;
    /// <summary>
    /// Low beam status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_lowbeamstType BcmLowbeamst {
      get { return bcmLowbeamst_; }
      set {
        bcmLowbeamst_ = value;
      }
    }

    /// <summary>Field number for the "bcm_leftturnlampst" field.</summary>
    public const int BcmLeftturnlampstFieldNumber = 6;
    private global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_leftturnlampstType bcmLeftturnlampst_ = 0;
    /// <summary>
    /// Left turn lamp status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_leftturnlampstType BcmLeftturnlampst {
      get { return bcmLeftturnlampst_; }
      set {
        bcmLeftturnlampst_ = value;
      }
    }

    /// <summary>Field number for the "bcm_keyst" field.</summary>
    public const int BcmKeystFieldNumber = 7;
    private global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_keystType bcmKeyst_ = 0;
    /// <summary>
    /// Key status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_keystType BcmKeyst {
      get { return bcmKeyst_; }
      set {
        bcmKeyst_ = value;
      }
    }

    /// <summary>Field number for the "bcm_hornst" field.</summary>
    public const int BcmHornstFieldNumber = 8;
    private global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_hornstType bcmHornst_ = 0;
    /// <summary>
    /// Horn status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_hornstType BcmHornst {
      get { return bcmHornst_; }
      set {
        bcmHornst_ = value;
      }
    }

    /// <summary>Field number for the "bcm_highbeamst" field.</summary>
    public const int BcmHighbeamstFieldNumber = 9;
    private global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_highbeamstType bcmHighbeamst_ = 0;
    /// <summary>
    /// High beam status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_highbeamstType BcmHighbeamst {
      get { return bcmHighbeamst_; }
      set {
        bcmHighbeamst_ = value;
      }
    }

    /// <summary>Field number for the "bcm_hazardlampst" field.</summary>
    public const int BcmHazardlampstFieldNumber = 10;
    private global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_hazardlampstType bcmHazardlampst_ = 0;
    /// <summary>
    /// Hazard lamp status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_hazardlampstType BcmHazardlampst {
      get { return bcmHazardlampst_; }
      set {
        bcmHazardlampst_ = value;
      }
    }

    /// <summary>Field number for the "bcm_frontfoglampst" field.</summary>
    public const int BcmFrontfoglampstFieldNumber = 11;
    private global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_frontfoglampstType bcmFrontfoglampst_ = 0;
    /// <summary>
    /// Front fog lamp status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_frontfoglampstType BcmFrontfoglampst {
      get { return bcmFrontfoglampst_; }
      set {
        bcmFrontfoglampst_ = value;
      }
    }

    /// <summary>Field number for the "bcm_brakelightswitchst" field.</summary>
    public const int BcmBrakelightswitchstFieldNumber = 12;
    private global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_brakelightswitchstType bcmBrakelightswitchst_ = 0;
    /// <summary>
    /// Brake light switch status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_brakelightswitchstType BcmBrakelightswitchst {
      get { return bcmBrakelightswitchst_; }
      set {
        bcmBrakelightswitchst_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Scu_bcm_304);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Scu_bcm_304 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BcmVehreversest != other.BcmVehreversest) return false;
      if (BcmRightturnlampst != other.BcmRightturnlampst) return false;
      if (BcmRearfoglampst != other.BcmRearfoglampst) return false;
      if (BcmParkinglampst != other.BcmParkinglampst) return false;
      if (BcmLowbeamst != other.BcmLowbeamst) return false;
      if (BcmLeftturnlampst != other.BcmLeftturnlampst) return false;
      if (BcmKeyst != other.BcmKeyst) return false;
      if (BcmHornst != other.BcmHornst) return false;
      if (BcmHighbeamst != other.BcmHighbeamst) return false;
      if (BcmHazardlampst != other.BcmHazardlampst) return false;
      if (BcmFrontfoglampst != other.BcmFrontfoglampst) return false;
      if (BcmBrakelightswitchst != other.BcmBrakelightswitchst) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BcmVehreversest != 0) hash ^= BcmVehreversest.GetHashCode();
      if (BcmRightturnlampst != 0) hash ^= BcmRightturnlampst.GetHashCode();
      if (BcmRearfoglampst != 0) hash ^= BcmRearfoglampst.GetHashCode();
      if (BcmParkinglampst != 0) hash ^= BcmParkinglampst.GetHashCode();
      if (BcmLowbeamst != 0) hash ^= BcmLowbeamst.GetHashCode();
      if (BcmLeftturnlampst != 0) hash ^= BcmLeftturnlampst.GetHashCode();
      if (BcmKeyst != 0) hash ^= BcmKeyst.GetHashCode();
      if (BcmHornst != 0) hash ^= BcmHornst.GetHashCode();
      if (BcmHighbeamst != 0) hash ^= BcmHighbeamst.GetHashCode();
      if (BcmHazardlampst != 0) hash ^= BcmHazardlampst.GetHashCode();
      if (BcmFrontfoglampst != 0) hash ^= BcmFrontfoglampst.GetHashCode();
      if (BcmBrakelightswitchst != 0) hash ^= BcmBrakelightswitchst.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BcmVehreversest != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) BcmVehreversest);
      }
      if (BcmRightturnlampst != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) BcmRightturnlampst);
      }
      if (BcmRearfoglampst != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) BcmRearfoglampst);
      }
      if (BcmParkinglampst != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) BcmParkinglampst);
      }
      if (BcmLowbeamst != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) BcmLowbeamst);
      }
      if (BcmLeftturnlampst != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) BcmLeftturnlampst);
      }
      if (BcmKeyst != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) BcmKeyst);
      }
      if (BcmHornst != 0) {
        output.WriteRawTag(64);
        output.WriteEnum((int) BcmHornst);
      }
      if (BcmHighbeamst != 0) {
        output.WriteRawTag(72);
        output.WriteEnum((int) BcmHighbeamst);
      }
      if (BcmHazardlampst != 0) {
        output.WriteRawTag(80);
        output.WriteEnum((int) BcmHazardlampst);
      }
      if (BcmFrontfoglampst != 0) {
        output.WriteRawTag(88);
        output.WriteEnum((int) BcmFrontfoglampst);
      }
      if (BcmBrakelightswitchst != 0) {
        output.WriteRawTag(96);
        output.WriteEnum((int) BcmBrakelightswitchst);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BcmVehreversest != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BcmVehreversest);
      }
      if (BcmRightturnlampst != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BcmRightturnlampst);
      }
      if (BcmRearfoglampst != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BcmRearfoglampst);
      }
      if (BcmParkinglampst != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BcmParkinglampst);
      }
      if (BcmLowbeamst != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BcmLowbeamst);
      }
      if (BcmLeftturnlampst != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BcmLeftturnlampst);
      }
      if (BcmKeyst != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BcmKeyst);
      }
      if (BcmHornst != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BcmHornst);
      }
      if (BcmHighbeamst != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BcmHighbeamst);
      }
      if (BcmHazardlampst != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BcmHazardlampst);
      }
      if (BcmFrontfoglampst != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BcmFrontfoglampst);
      }
      if (BcmBrakelightswitchst != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BcmBrakelightswitchst);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Scu_bcm_304 other) {
      if (other == null) {
        return;
      }
      if (other.BcmVehreversest != 0) {
        BcmVehreversest = other.BcmVehreversest;
      }
      if (other.BcmRightturnlampst != 0) {
        BcmRightturnlampst = other.BcmRightturnlampst;
      }
      if (other.BcmRearfoglampst != 0) {
        BcmRearfoglampst = other.BcmRearfoglampst;
      }
      if (other.BcmParkinglampst != 0) {
        BcmParkinglampst = other.BcmParkinglampst;
      }
      if (other.BcmLowbeamst != 0) {
        BcmLowbeamst = other.BcmLowbeamst;
      }
      if (other.BcmLeftturnlampst != 0) {
        BcmLeftturnlampst = other.BcmLeftturnlampst;
      }
      if (other.BcmKeyst != 0) {
        BcmKeyst = other.BcmKeyst;
      }
      if (other.BcmHornst != 0) {
        BcmHornst = other.BcmHornst;
      }
      if (other.BcmHighbeamst != 0) {
        BcmHighbeamst = other.BcmHighbeamst;
      }
      if (other.BcmHazardlampst != 0) {
        BcmHazardlampst = other.BcmHazardlampst;
      }
      if (other.BcmFrontfoglampst != 0) {
        BcmFrontfoglampst = other.BcmFrontfoglampst;
      }
      if (other.BcmBrakelightswitchst != 0) {
        BcmBrakelightswitchst = other.BcmBrakelightswitchst;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            bcmVehreversest_ = (global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_vehreversestType) input.ReadEnum();
            break;
          }
          case 16: {
            bcmRightturnlampst_ = (global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_rightturnlampstType) input.ReadEnum();
            break;
          }
          case 24: {
            bcmRearfoglampst_ = (global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_rearfoglampstType) input.ReadEnum();
            break;
          }
          case 32: {
            bcmParkinglampst_ = (global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_parkinglampstType) input.ReadEnum();
            break;
          }
          case 40: {
            bcmLowbeamst_ = (global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_lowbeamstType) input.ReadEnum();
            break;
          }
          case 48: {
            bcmLeftturnlampst_ = (global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_leftturnlampstType) input.ReadEnum();
            break;
          }
          case 56: {
            bcmKeyst_ = (global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_keystType) input.ReadEnum();
            break;
          }
          case 64: {
            bcmHornst_ = (global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_hornstType) input.ReadEnum();
            break;
          }
          case 72: {
            bcmHighbeamst_ = (global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_highbeamstType) input.ReadEnum();
            break;
          }
          case 80: {
            bcmHazardlampst_ = (global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_hazardlampstType) input.ReadEnum();
            break;
          }
          case 88: {
            bcmFrontfoglampst_ = (global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_frontfoglampstType) input.ReadEnum();
            break;
          }
          case 96: {
            bcmBrakelightswitchst_ = (global::Apollo.Canbus.Scu_bcm_304.Types.Bcm_brakelightswitchstType) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Scu_bcm_304 message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Report Message
      /// </summary>
      public enum Bcm_vehreversestType {
        [pbr::OriginalName("BCM_VEHREVERSEST_NORMAL")] BcmVehreversestNormal = 0,
        [pbr::OriginalName("BCM_VEHREVERSEST_REVERSE")] BcmVehreversestReverse = 1,
      }

      public enum Bcm_rightturnlampstType {
        [pbr::OriginalName("BCM_RIGHTTURNLAMPST_INACTIVE")] BcmRightturnlampstInactive = 0,
        [pbr::OriginalName("BCM_RIGHTTURNLAMPST_ACTIVE")] BcmRightturnlampstActive = 1,
      }

      public enum Bcm_rearfoglampstType {
        [pbr::OriginalName("BCM_REARFOGLAMPST_INACTIVE")] BcmRearfoglampstInactive = 0,
        [pbr::OriginalName("BCM_REARFOGLAMPST_ACTIVE")] BcmRearfoglampstActive = 1,
      }

      public enum Bcm_parkinglampstType {
        [pbr::OriginalName("BCM_PARKINGLAMPST_INACTIVE")] BcmParkinglampstInactive = 0,
        [pbr::OriginalName("BCM_PARKINGLAMPST_ACTIVE")] BcmParkinglampstActive = 1,
      }

      public enum Bcm_lowbeamstType {
        [pbr::OriginalName("BCM_LOWBEAMST_INACTIVE")] BcmLowbeamstInactive = 0,
        [pbr::OriginalName("BCM_LOWBEAMST_ACTIVE")] BcmLowbeamstActive = 1,
      }

      public enum Bcm_leftturnlampstType {
        [pbr::OriginalName("BCM_LEFTTURNLAMPST_INACTIVE")] BcmLeftturnlampstInactive = 0,
        [pbr::OriginalName("BCM_LEFTTURNLAMPST_ACTIVE")] BcmLeftturnlampstActive = 1,
      }

      public enum Bcm_keystType {
        [pbr::OriginalName("BCM_KEYST_OFF")] BcmKeystOff = 0,
        [pbr::OriginalName("BCM_KEYST_ACC")] BcmKeystAcc = 1,
        [pbr::OriginalName("BCM_KEYST_ON")] BcmKeystOn = 2,
        [pbr::OriginalName("BCM_KEYST_CRANK")] BcmKeystCrank = 3,
      }

      public enum Bcm_hornstType {
        [pbr::OriginalName("BCM_HORNST_INACTIVE")] BcmHornstInactive = 0,
        [pbr::OriginalName("BCM_HORNST_ACTIVE")] BcmHornstActive = 1,
      }

      public enum Bcm_highbeamstType {
        [pbr::OriginalName("BCM_HIGHBEAMST_INACTIVE")] BcmHighbeamstInactive = 0,
        [pbr::OriginalName("BCM_HIGHBEAMST_ACTIVE")] BcmHighbeamstActive = 1,
      }

      public enum Bcm_hazardlampstType {
        [pbr::OriginalName("BCM_HAZARDLAMPST_INACTIVE")] BcmHazardlampstInactive = 0,
        [pbr::OriginalName("BCM_HAZARDLAMPST_ACTIVE")] BcmHazardlampstActive = 1,
      }

      public enum Bcm_frontfoglampstType {
        [pbr::OriginalName("BCM_FRONTFOGLAMPST_INACTIVE")] BcmFrontfoglampstInactive = 0,
        [pbr::OriginalName("BCM_FRONTFOGLAMPST_ACTIVE")] BcmFrontfoglampstActive = 1,
      }

      public enum Bcm_brakelightswitchstType {
        [pbr::OriginalName("BCM_BRAKELIGHTSWITCHST_INACTIVE")] BcmBrakelightswitchstInactive = 0,
        [pbr::OriginalName("BCM_BRAKELIGHTSWITCHST_ACTIVE")] BcmBrakelightswitchstActive = 1,
      }

    }
    #endregion

  }

  public sealed partial class Scu_bcs_1_306 : pb::IMessage<Scu_bcs_1_306> {
    private static readonly pb::MessageParser<Scu_bcs_1_306> _parser = new pb::MessageParser<Scu_bcs_1_306>(() => new Scu_bcs_1_306());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Scu_bcs_1_306> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Canbus.Ge3Reflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scu_bcs_1_306() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scu_bcs_1_306(Scu_bcs_1_306 other) : this() {
      bcsAebavailable_ = other.bcsAebavailable_;
      bcsCddavailable_ = other.bcsCddavailable_;
      bcsBrkpedact_ = other.bcsBrkpedact_;
      bcsIntidx_ = other.bcsIntidx_;
      bcsVdcfaultst_ = other.bcsVdcfaultst_;
      bcsVdcactivest_ = other.bcsVdcactivest_;
      bcsAbsfaultst_ = other.bcsAbsfaultst_;
      bcsAbsactivest_ = other.bcsAbsactivest_;
      bcsFaultst_ = other.bcsFaultst_;
      bcsDrvmode_ = other.bcsDrvmode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scu_bcs_1_306 Clone() {
      return new Scu_bcs_1_306(this);
    }

    /// <summary>Field number for the "bcs_aebavailable" field.</summary>
    public const int BcsAebavailableFieldNumber = 1;
    private global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_aebavailableType bcsAebavailable_ = 0;
    /// <summary>
    /// VDC active status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_aebavailableType BcsAebavailable {
      get { return bcsAebavailable_; }
      set {
        bcsAebavailable_ = value;
      }
    }

    /// <summary>Field number for the "bcs_cddavailable" field.</summary>
    public const int BcsCddavailableFieldNumber = 2;
    private global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_cddavailableType bcsCddavailable_ = 0;
    /// <summary>
    /// VDC active status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_cddavailableType BcsCddavailable {
      get { return bcsCddavailable_; }
      set {
        bcsCddavailable_ = value;
      }
    }

    /// <summary>Field number for the "bcs_brkpedact" field.</summary>
    public const int BcsBrkpedactFieldNumber = 3;
    private double bcsBrkpedact_;
    /// <summary>
    /// Actual brake pedal position  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double BcsBrkpedact {
      get { return bcsBrkpedact_; }
      set {
        bcsBrkpedact_ = value;
      }
    }

    /// <summary>Field number for the "bcs_intidx" field.</summary>
    public const int BcsIntidxFieldNumber = 4;
    private global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_intidxType bcsIntidx_ = 0;
    /// <summary>
    /// BCS interrupt index  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_intidxType BcsIntidx {
      get { return bcsIntidx_; }
      set {
        bcsIntidx_ = value;
      }
    }

    /// <summary>Field number for the "bcs_vdcfaultst" field.</summary>
    public const int BcsVdcfaultstFieldNumber = 5;
    private global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_vdcfaultstType bcsVdcfaultst_ = 0;
    /// <summary>
    /// VDC fault status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_vdcfaultstType BcsVdcfaultst {
      get { return bcsVdcfaultst_; }
      set {
        bcsVdcfaultst_ = value;
      }
    }

    /// <summary>Field number for the "bcs_vdcactivest" field.</summary>
    public const int BcsVdcactivestFieldNumber = 6;
    private global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_vdcactivestType bcsVdcactivest_ = 0;
    /// <summary>
    /// VDC active status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_vdcactivestType BcsVdcactivest {
      get { return bcsVdcactivest_; }
      set {
        bcsVdcactivest_ = value;
      }
    }

    /// <summary>Field number for the "bcs_absfaultst" field.</summary>
    public const int BcsAbsfaultstFieldNumber = 7;
    private global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_absfaultstType bcsAbsfaultst_ = 0;
    /// <summary>
    /// ABS fault status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_absfaultstType BcsAbsfaultst {
      get { return bcsAbsfaultst_; }
      set {
        bcsAbsfaultst_ = value;
      }
    }

    /// <summary>Field number for the "bcs_absactivest" field.</summary>
    public const int BcsAbsactivestFieldNumber = 8;
    private global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_absactivestType bcsAbsactivest_ = 0;
    /// <summary>
    /// ABS active status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_absactivestType BcsAbsactivest {
      get { return bcsAbsactivest_; }
      set {
        bcsAbsactivest_ = value;
      }
    }

    /// <summary>Field number for the "bcs_faultst" field.</summary>
    public const int BcsFaultstFieldNumber = 9;
    private global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_faultstType bcsFaultst_ = 0;
    /// <summary>
    /// BCS fault status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_faultstType BcsFaultst {
      get { return bcsFaultst_; }
      set {
        bcsFaultst_ = value;
      }
    }

    /// <summary>Field number for the "bcs_drvmode" field.</summary>
    public const int BcsDrvmodeFieldNumber = 10;
    private global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_drvmodeType bcsDrvmode_ = 0;
    /// <summary>
    /// BCS drive mode  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_drvmodeType BcsDrvmode {
      get { return bcsDrvmode_; }
      set {
        bcsDrvmode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Scu_bcs_1_306);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Scu_bcs_1_306 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BcsAebavailable != other.BcsAebavailable) return false;
      if (BcsCddavailable != other.BcsCddavailable) return false;
      if (BcsBrkpedact != other.BcsBrkpedact) return false;
      if (BcsIntidx != other.BcsIntidx) return false;
      if (BcsVdcfaultst != other.BcsVdcfaultst) return false;
      if (BcsVdcactivest != other.BcsVdcactivest) return false;
      if (BcsAbsfaultst != other.BcsAbsfaultst) return false;
      if (BcsAbsactivest != other.BcsAbsactivest) return false;
      if (BcsFaultst != other.BcsFaultst) return false;
      if (BcsDrvmode != other.BcsDrvmode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BcsAebavailable != 0) hash ^= BcsAebavailable.GetHashCode();
      if (BcsCddavailable != 0) hash ^= BcsCddavailable.GetHashCode();
      if (BcsBrkpedact != 0D) hash ^= BcsBrkpedact.GetHashCode();
      if (BcsIntidx != 0) hash ^= BcsIntidx.GetHashCode();
      if (BcsVdcfaultst != 0) hash ^= BcsVdcfaultst.GetHashCode();
      if (BcsVdcactivest != 0) hash ^= BcsVdcactivest.GetHashCode();
      if (BcsAbsfaultst != 0) hash ^= BcsAbsfaultst.GetHashCode();
      if (BcsAbsactivest != 0) hash ^= BcsAbsactivest.GetHashCode();
      if (BcsFaultst != 0) hash ^= BcsFaultst.GetHashCode();
      if (BcsDrvmode != 0) hash ^= BcsDrvmode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BcsAebavailable != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) BcsAebavailable);
      }
      if (BcsCddavailable != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) BcsCddavailable);
      }
      if (BcsBrkpedact != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(BcsBrkpedact);
      }
      if (BcsIntidx != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) BcsIntidx);
      }
      if (BcsVdcfaultst != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) BcsVdcfaultst);
      }
      if (BcsVdcactivest != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) BcsVdcactivest);
      }
      if (BcsAbsfaultst != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) BcsAbsfaultst);
      }
      if (BcsAbsactivest != 0) {
        output.WriteRawTag(64);
        output.WriteEnum((int) BcsAbsactivest);
      }
      if (BcsFaultst != 0) {
        output.WriteRawTag(72);
        output.WriteEnum((int) BcsFaultst);
      }
      if (BcsDrvmode != 0) {
        output.WriteRawTag(80);
        output.WriteEnum((int) BcsDrvmode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BcsAebavailable != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BcsAebavailable);
      }
      if (BcsCddavailable != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BcsCddavailable);
      }
      if (BcsBrkpedact != 0D) {
        size += 1 + 8;
      }
      if (BcsIntidx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BcsIntidx);
      }
      if (BcsVdcfaultst != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BcsVdcfaultst);
      }
      if (BcsVdcactivest != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BcsVdcactivest);
      }
      if (BcsAbsfaultst != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BcsAbsfaultst);
      }
      if (BcsAbsactivest != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BcsAbsactivest);
      }
      if (BcsFaultst != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BcsFaultst);
      }
      if (BcsDrvmode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BcsDrvmode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Scu_bcs_1_306 other) {
      if (other == null) {
        return;
      }
      if (other.BcsAebavailable != 0) {
        BcsAebavailable = other.BcsAebavailable;
      }
      if (other.BcsCddavailable != 0) {
        BcsCddavailable = other.BcsCddavailable;
      }
      if (other.BcsBrkpedact != 0D) {
        BcsBrkpedact = other.BcsBrkpedact;
      }
      if (other.BcsIntidx != 0) {
        BcsIntidx = other.BcsIntidx;
      }
      if (other.BcsVdcfaultst != 0) {
        BcsVdcfaultst = other.BcsVdcfaultst;
      }
      if (other.BcsVdcactivest != 0) {
        BcsVdcactivest = other.BcsVdcactivest;
      }
      if (other.BcsAbsfaultst != 0) {
        BcsAbsfaultst = other.BcsAbsfaultst;
      }
      if (other.BcsAbsactivest != 0) {
        BcsAbsactivest = other.BcsAbsactivest;
      }
      if (other.BcsFaultst != 0) {
        BcsFaultst = other.BcsFaultst;
      }
      if (other.BcsDrvmode != 0) {
        BcsDrvmode = other.BcsDrvmode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            bcsAebavailable_ = (global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_aebavailableType) input.ReadEnum();
            break;
          }
          case 16: {
            bcsCddavailable_ = (global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_cddavailableType) input.ReadEnum();
            break;
          }
          case 25: {
            BcsBrkpedact = input.ReadDouble();
            break;
          }
          case 32: {
            bcsIntidx_ = (global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_intidxType) input.ReadEnum();
            break;
          }
          case 40: {
            bcsVdcfaultst_ = (global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_vdcfaultstType) input.ReadEnum();
            break;
          }
          case 48: {
            bcsVdcactivest_ = (global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_vdcactivestType) input.ReadEnum();
            break;
          }
          case 56: {
            bcsAbsfaultst_ = (global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_absfaultstType) input.ReadEnum();
            break;
          }
          case 64: {
            bcsAbsactivest_ = (global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_absactivestType) input.ReadEnum();
            break;
          }
          case 72: {
            bcsFaultst_ = (global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_faultstType) input.ReadEnum();
            break;
          }
          case 80: {
            bcsDrvmode_ = (global::Apollo.Canbus.Scu_bcs_1_306.Types.Bcs_drvmodeType) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Scu_bcs_1_306 message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Report Message
      /// </summary>
      public enum Bcs_aebavailableType {
        [pbr::OriginalName("BCS_AEBAVAILABLE_UNAVAILABLE")] BcsAebavailableUnavailable = 0,
        [pbr::OriginalName("BCS_AEBAVAILABLE_AVAILABLE")] BcsAebavailableAvailable = 1,
      }

      public enum Bcs_cddavailableType {
        [pbr::OriginalName("BCS_CDDAVAILABLE_UNAVAILABLE")] BcsCddavailableUnavailable = 0,
        [pbr::OriginalName("BCS_CDDAVAILABLE_AVAILABLE")] BcsCddavailableAvailable = 1,
      }

      public enum Bcs_intidxType {
        [pbr::OriginalName("BCS_INTIDX_NOINT")] BcsIntidxNoint = 0,
        [pbr::OriginalName("BCS_INTIDX_OVERFLOW")] BcsIntidxOverflow = 1,
        [pbr::OriginalName("BCS_INTIDX_TIMEOUT")] BcsIntidxTimeout = 2,
        [pbr::OriginalName("BCS_INTIDX_ACCPEDINT")] BcsIntidxAccpedint = 3,
        [pbr::OriginalName("BCS_INTIDX_BRKPEDINT")] BcsIntidxBrkpedint = 4,
        [pbr::OriginalName("BCS_INTIDX_GEARINT")] BcsIntidxGearint = 5,
      }

      public enum Bcs_vdcfaultstType {
        [pbr::OriginalName("BCS_VDCFAULTST_NORMAL")] BcsVdcfaultstNormal = 0,
        [pbr::OriginalName("BCS_VDCFAULTST_FAULT")] BcsVdcfaultstFault = 1,
      }

      public enum Bcs_vdcactivestType {
        [pbr::OriginalName("BCS_VDCACTIVEST_INACTIVE")] BcsVdcactivestInactive = 0,
        [pbr::OriginalName("BCS_VDCACTIVEST_ACTIVE")] BcsVdcactivestActive = 1,
      }

      public enum Bcs_absfaultstType {
        [pbr::OriginalName("BCS_ABSFAULTST_NORMAL")] BcsAbsfaultstNormal = 0,
        [pbr::OriginalName("BCS_ABSFAULTST_FAULT")] BcsAbsfaultstFault = 1,
      }

      public enum Bcs_absactivestType {
        [pbr::OriginalName("BCS_ABSACTIVEST_INACTIVE")] BcsAbsactivestInactive = 0,
        [pbr::OriginalName("BCS_ABSACTIVEST_ACTIVE")] BcsAbsactivestActive = 1,
      }

      public enum Bcs_faultstType {
        [pbr::OriginalName("BCS_FAULTST_NORMAL")] BcsFaultstNormal = 0,
        [pbr::OriginalName("BCS_FAULTST_FAULT")] BcsFaultstFault = 1,
      }

      public enum Bcs_drvmodeType {
        [pbr::OriginalName("BCS_DRVMODE_INVALID")] BcsDrvmodeInvalid = 0,
        [pbr::OriginalName("BCS_DRVMODE_MANUAL")] BcsDrvmodeManual = 1,
        [pbr::OriginalName("BCS_DRVMODE_INTERRUPT")] BcsDrvmodeInterrupt = 2,
        [pbr::OriginalName("BCS_DRVMODE_AUTO")] BcsDrvmodeAuto = 3,
      }

    }
    #endregion

  }

  public sealed partial class Scu_bcs_2_307 : pb::IMessage<Scu_bcs_2_307> {
    private static readonly pb::MessageParser<Scu_bcs_2_307> _parser = new pb::MessageParser<Scu_bcs_2_307>(() => new Scu_bcs_2_307());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Scu_bcs_2_307> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Canbus.Ge3Reflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scu_bcs_2_307() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scu_bcs_2_307(Scu_bcs_2_307 other) : this() {
      bcsVehspdvd_ = other.bcsVehspdvd_;
      bcsYawrate_ = other.bcsYawrate_;
      bcsVehspd_ = other.bcsVehspd_;
      bcsVehlongaccel_ = other.bcsVehlongaccel_;
      bcsVehlataccel_ = other.bcsVehlataccel_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scu_bcs_2_307 Clone() {
      return new Scu_bcs_2_307(this);
    }

    /// <summary>Field number for the "bcs_vehspdvd" field.</summary>
    public const int BcsVehspdvdFieldNumber = 1;
    private global::Apollo.Canbus.Scu_bcs_2_307.Types.Bcs_vehspdvdType bcsVehspdvd_ = 0;
    /// <summary>
    /// Vehicle speed valid data  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcs_2_307.Types.Bcs_vehspdvdType BcsVehspdvd {
      get { return bcsVehspdvd_; }
      set {
        bcsVehspdvd_ = value;
      }
    }

    /// <summary>Field number for the "bcs_yawrate" field.</summary>
    public const int BcsYawrateFieldNumber = 2;
    private double bcsYawrate_;
    /// <summary>
    /// Yaw rate  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double BcsYawrate {
      get { return bcsYawrate_; }
      set {
        bcsYawrate_ = value;
      }
    }

    /// <summary>Field number for the "bcs_vehspd" field.</summary>
    public const int BcsVehspdFieldNumber = 3;
    private double bcsVehspd_;
    /// <summary>
    /// Vehicle speed  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double BcsVehspd {
      get { return bcsVehspd_; }
      set {
        bcsVehspd_ = value;
      }
    }

    /// <summary>Field number for the "bcs_vehlongaccel" field.</summary>
    public const int BcsVehlongaccelFieldNumber = 4;
    private double bcsVehlongaccel_;
    /// <summary>
    /// Vehicle longitudinal acceleration  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double BcsVehlongaccel {
      get { return bcsVehlongaccel_; }
      set {
        bcsVehlongaccel_ = value;
      }
    }

    /// <summary>Field number for the "bcs_vehlataccel" field.</summary>
    public const int BcsVehlataccelFieldNumber = 5;
    private double bcsVehlataccel_;
    /// <summary>
    /// Vehicle lateral acceleration  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double BcsVehlataccel {
      get { return bcsVehlataccel_; }
      set {
        bcsVehlataccel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Scu_bcs_2_307);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Scu_bcs_2_307 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BcsVehspdvd != other.BcsVehspdvd) return false;
      if (BcsYawrate != other.BcsYawrate) return false;
      if (BcsVehspd != other.BcsVehspd) return false;
      if (BcsVehlongaccel != other.BcsVehlongaccel) return false;
      if (BcsVehlataccel != other.BcsVehlataccel) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BcsVehspdvd != 0) hash ^= BcsVehspdvd.GetHashCode();
      if (BcsYawrate != 0D) hash ^= BcsYawrate.GetHashCode();
      if (BcsVehspd != 0D) hash ^= BcsVehspd.GetHashCode();
      if (BcsVehlongaccel != 0D) hash ^= BcsVehlongaccel.GetHashCode();
      if (BcsVehlataccel != 0D) hash ^= BcsVehlataccel.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BcsVehspdvd != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) BcsVehspdvd);
      }
      if (BcsYawrate != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(BcsYawrate);
      }
      if (BcsVehspd != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(BcsVehspd);
      }
      if (BcsVehlongaccel != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(BcsVehlongaccel);
      }
      if (BcsVehlataccel != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(BcsVehlataccel);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BcsVehspdvd != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BcsVehspdvd);
      }
      if (BcsYawrate != 0D) {
        size += 1 + 8;
      }
      if (BcsVehspd != 0D) {
        size += 1 + 8;
      }
      if (BcsVehlongaccel != 0D) {
        size += 1 + 8;
      }
      if (BcsVehlataccel != 0D) {
        size += 1 + 8;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Scu_bcs_2_307 other) {
      if (other == null) {
        return;
      }
      if (other.BcsVehspdvd != 0) {
        BcsVehspdvd = other.BcsVehspdvd;
      }
      if (other.BcsYawrate != 0D) {
        BcsYawrate = other.BcsYawrate;
      }
      if (other.BcsVehspd != 0D) {
        BcsVehspd = other.BcsVehspd;
      }
      if (other.BcsVehlongaccel != 0D) {
        BcsVehlongaccel = other.BcsVehlongaccel;
      }
      if (other.BcsVehlataccel != 0D) {
        BcsVehlataccel = other.BcsVehlataccel;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            bcsVehspdvd_ = (global::Apollo.Canbus.Scu_bcs_2_307.Types.Bcs_vehspdvdType) input.ReadEnum();
            break;
          }
          case 17: {
            BcsYawrate = input.ReadDouble();
            break;
          }
          case 25: {
            BcsVehspd = input.ReadDouble();
            break;
          }
          case 33: {
            BcsVehlongaccel = input.ReadDouble();
            break;
          }
          case 41: {
            BcsVehlataccel = input.ReadDouble();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Scu_bcs_2_307 message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Report Message
      /// </summary>
      public enum Bcs_vehspdvdType {
        [pbr::OriginalName("BCS_VEHSPDVD_INVALID")] BcsVehspdvdInvalid = 0,
        [pbr::OriginalName("BCS_VEHSPDVD_VALID")] BcsVehspdvdValid = 1,
      }

    }
    #endregion

  }

  public sealed partial class Scu_epb_310 : pb::IMessage<Scu_epb_310> {
    private static readonly pb::MessageParser<Scu_epb_310> _parser = new pb::MessageParser<Scu_epb_310>(() => new Scu_epb_310());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Scu_epb_310> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Canbus.Ge3Reflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scu_epb_310() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scu_epb_310(Scu_epb_310 other) : this() {
      epbIntidx_ = other.epbIntidx_;
      epbDrvmode_ = other.epbDrvmode_;
      epbSysst_ = other.epbSysst_;
      epbFaultst_ = other.epbFaultst_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scu_epb_310 Clone() {
      return new Scu_epb_310(this);
    }

    /// <summary>Field number for the "epb_intidx" field.</summary>
    public const int EpbIntidxFieldNumber = 1;
    private global::Apollo.Canbus.Scu_epb_310.Types.Epb_intidxType epbIntidx_ = 0;
    /// <summary>
    /// EPS interrupt index  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_epb_310.Types.Epb_intidxType EpbIntidx {
      get { return epbIntidx_; }
      set {
        epbIntidx_ = value;
      }
    }

    /// <summary>Field number for the "epb_drvmode" field.</summary>
    public const int EpbDrvmodeFieldNumber = 2;
    private global::Apollo.Canbus.Scu_epb_310.Types.Epb_drvmodeType epbDrvmode_ = 0;
    /// <summary>
    /// EPB drive mode  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_epb_310.Types.Epb_drvmodeType EpbDrvmode {
      get { return epbDrvmode_; }
      set {
        epbDrvmode_ = value;
      }
    }

    /// <summary>Field number for the "epb_sysst" field.</summary>
    public const int EpbSysstFieldNumber = 3;
    private global::Apollo.Canbus.Scu_epb_310.Types.Epb_sysstType epbSysst_ = 0;
    /// <summary>
    /// EPB system status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_epb_310.Types.Epb_sysstType EpbSysst {
      get { return epbSysst_; }
      set {
        epbSysst_ = value;
      }
    }

    /// <summary>Field number for the "epb_faultst" field.</summary>
    public const int EpbFaultstFieldNumber = 4;
    private global::Apollo.Canbus.Scu_epb_310.Types.Epb_faultstType epbFaultst_ = 0;
    /// <summary>
    /// EPB fault status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_epb_310.Types.Epb_faultstType EpbFaultst {
      get { return epbFaultst_; }
      set {
        epbFaultst_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Scu_epb_310);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Scu_epb_310 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EpbIntidx != other.EpbIntidx) return false;
      if (EpbDrvmode != other.EpbDrvmode) return false;
      if (EpbSysst != other.EpbSysst) return false;
      if (EpbFaultst != other.EpbFaultst) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EpbIntidx != 0) hash ^= EpbIntidx.GetHashCode();
      if (EpbDrvmode != 0) hash ^= EpbDrvmode.GetHashCode();
      if (EpbSysst != 0) hash ^= EpbSysst.GetHashCode();
      if (EpbFaultst != 0) hash ^= EpbFaultst.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EpbIntidx != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) EpbIntidx);
      }
      if (EpbDrvmode != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) EpbDrvmode);
      }
      if (EpbSysst != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) EpbSysst);
      }
      if (EpbFaultst != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) EpbFaultst);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EpbIntidx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EpbIntidx);
      }
      if (EpbDrvmode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EpbDrvmode);
      }
      if (EpbSysst != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EpbSysst);
      }
      if (EpbFaultst != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EpbFaultst);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Scu_epb_310 other) {
      if (other == null) {
        return;
      }
      if (other.EpbIntidx != 0) {
        EpbIntidx = other.EpbIntidx;
      }
      if (other.EpbDrvmode != 0) {
        EpbDrvmode = other.EpbDrvmode;
      }
      if (other.EpbSysst != 0) {
        EpbSysst = other.EpbSysst;
      }
      if (other.EpbFaultst != 0) {
        EpbFaultst = other.EpbFaultst;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            epbIntidx_ = (global::Apollo.Canbus.Scu_epb_310.Types.Epb_intidxType) input.ReadEnum();
            break;
          }
          case 16: {
            epbDrvmode_ = (global::Apollo.Canbus.Scu_epb_310.Types.Epb_drvmodeType) input.ReadEnum();
            break;
          }
          case 24: {
            epbSysst_ = (global::Apollo.Canbus.Scu_epb_310.Types.Epb_sysstType) input.ReadEnum();
            break;
          }
          case 32: {
            epbFaultst_ = (global::Apollo.Canbus.Scu_epb_310.Types.Epb_faultstType) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Scu_epb_310 message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Report Message
      /// </summary>
      public enum Epb_intidxType {
        [pbr::OriginalName("EPB_INTIDX_NOINT")] EpbIntidxNoint = 0,
        [pbr::OriginalName("EPB_INTIDX_OVERFLOW")] EpbIntidxOverflow = 1,
        [pbr::OriginalName("EPB_INTIDX_TIMEOUT")] EpbIntidxTimeout = 2,
      }

      public enum Epb_drvmodeType {
        [pbr::OriginalName("EPB_DRVMODE_INVALID")] EpbDrvmodeInvalid = 0,
        [pbr::OriginalName("EPB_DRVMODE_MANUAL")] EpbDrvmodeManual = 1,
        [pbr::OriginalName("EPB_DRVMODE_INTERRUPT")] EpbDrvmodeInterrupt = 2,
        [pbr::OriginalName("EPB_DRVMODE_AUTO")] EpbDrvmodeAuto = 3,
      }

      public enum Epb_sysstType {
        [pbr::OriginalName("EPB_SYSST_RELEASED")] EpbSysstReleased = 0,
        [pbr::OriginalName("EPB_SYSST_APPLIED")] EpbSysstApplied = 1,
        [pbr::OriginalName("EPB_SYSST_RELEASING")] EpbSysstReleasing = 2,
        [pbr::OriginalName("EPB_SYSST_FAULT")] EpbSysstFault = 3,
        [pbr::OriginalName("EPB_SYSST_APPLYING")] EpbSysstApplying = 4,
        [pbr::OriginalName("EPB_SYSST_DISENGAGED")] EpbSysstDisengaged = 5,
      }

      public enum Epb_faultstType {
        [pbr::OriginalName("EPB_FAULTST_NORMAL")] EpbFaultstNormal = 0,
        [pbr::OriginalName("EPB_FAULTST_FAULT")] EpbFaultstFault = 1,
      }

    }
    #endregion

  }

  public sealed partial class Scu_vcu_1_312 : pb::IMessage<Scu_vcu_1_312> {
    private static readonly pb::MessageParser<Scu_vcu_1_312> _parser = new pb::MessageParser<Scu_vcu_1_312>(() => new Scu_vcu_1_312());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Scu_vcu_1_312> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Canbus.Ge3Reflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scu_vcu_1_312() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scu_vcu_1_312(Scu_vcu_1_312 other) : this() {
      vcuElcsysfault_ = other.vcuElcsysfault_;
      vcuBrkpedst_ = other.vcuBrkpedst_;
      vcuIntidx_ = other.vcuIntidx_;
      vcuGearintidx_ = other.vcuGearintidx_;
      vcuGeardrvmode_ = other.vcuGeardrvmode_;
      vcuAccpedact_ = other.vcuAccpedact_;
      vcuBrkpedpst_ = other.vcuBrkpedpst_;
      vcuVehrng_ = other.vcuVehrng_;
      vcuAccpedpst_ = other.vcuAccpedpst_;
      vcuVehrdyst_ = other.vcuVehrdyst_;
      vcuFaultst_ = other.vcuFaultst_;
      vcuDrvmode_ = other.vcuDrvmode_;
      vcuGearpst_ = other.vcuGearpst_;
      vcuGearfaultst_ = other.vcuGearfaultst_;
      vcuGearact_ = other.vcuGearact_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scu_vcu_1_312 Clone() {
      return new Scu_vcu_1_312(this);
    }

    /// <summary>Field number for the "vcu_elcsysfault" field.</summary>
    public const int VcuElcsysfaultFieldNumber = 1;
    private global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_elcsysfaultType vcuElcsysfault_ = 0;
    /// <summary>
    /// Gear fault status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_elcsysfaultType VcuElcsysfault {
      get { return vcuElcsysfault_; }
      set {
        vcuElcsysfault_ = value;
      }
    }

    /// <summary>Field number for the "vcu_brkpedst" field.</summary>
    public const int VcuBrkpedstFieldNumber = 2;
    private global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_brkpedstType vcuBrkpedst_ = 0;
    /// <summary>
    /// Brake pedal position  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_brkpedstType VcuBrkpedst {
      get { return vcuBrkpedst_; }
      set {
        vcuBrkpedst_ = value;
      }
    }

    /// <summary>Field number for the "vcu_intidx" field.</summary>
    public const int VcuIntidxFieldNumber = 3;
    private global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_intidxType vcuIntidx_ = 0;
    /// <summary>
    /// VCU interrupt index  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_intidxType VcuIntidx {
      get { return vcuIntidx_; }
      set {
        vcuIntidx_ = value;
      }
    }

    /// <summary>Field number for the "vcu_gearintidx" field.</summary>
    public const int VcuGearintidxFieldNumber = 4;
    private global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_gearintidxType vcuGearintidx_ = 0;
    /// <summary>
    /// Gear interrupt index  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_gearintidxType VcuGearintidx {
      get { return vcuGearintidx_; }
      set {
        vcuGearintidx_ = value;
      }
    }

    /// <summary>Field number for the "vcu_geardrvmode" field.</summary>
    public const int VcuGeardrvmodeFieldNumber = 5;
    private global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_geardrvmodeType vcuGeardrvmode_ = 0;
    /// <summary>
    /// VCU Gear drive mode  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_geardrvmodeType VcuGeardrvmode {
      get { return vcuGeardrvmode_; }
      set {
        vcuGeardrvmode_ = value;
      }
    }

    /// <summary>Field number for the "vcu_accpedact" field.</summary>
    public const int VcuAccpedactFieldNumber = 6;
    private double vcuAccpedact_;
    /// <summary>
    /// Actual acceleration pedal position  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double VcuAccpedact {
      get { return vcuAccpedact_; }
      set {
        vcuAccpedact_ = value;
      }
    }

    /// <summary>Field number for the "vcu_brkpedpst" field.</summary>
    public const int VcuBrkpedpstFieldNumber = 7;
    private double vcuBrkpedpst_;
    /// <summary>
    /// Brake pedal position  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double VcuBrkpedpst {
      get { return vcuBrkpedpst_; }
      set {
        vcuBrkpedpst_ = value;
      }
    }

    /// <summary>Field number for the "vcu_vehrng" field.</summary>
    public const int VcuVehrngFieldNumber = 8;
    private int vcuVehrng_;
    /// <summary>
    /// Veh range  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VcuVehrng {
      get { return vcuVehrng_; }
      set {
        vcuVehrng_ = value;
      }
    }

    /// <summary>Field number for the "vcu_accpedpst" field.</summary>
    public const int VcuAccpedpstFieldNumber = 9;
    private double vcuAccpedpst_;
    /// <summary>
    /// Actual acceleration pedal position  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double VcuAccpedpst {
      get { return vcuAccpedpst_; }
      set {
        vcuAccpedpst_ = value;
      }
    }

    /// <summary>Field number for the "vcu_vehrdyst" field.</summary>
    public const int VcuVehrdystFieldNumber = 10;
    private global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_vehrdystType vcuVehrdyst_ = 0;
    /// <summary>
    /// HEV system ready status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_vehrdystType VcuVehrdyst {
      get { return vcuVehrdyst_; }
      set {
        vcuVehrdyst_ = value;
      }
    }

    /// <summary>Field number for the "vcu_faultst" field.</summary>
    public const int VcuFaultstFieldNumber = 11;
    private global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_faultstType vcuFaultst_ = 0;
    /// <summary>
    /// VCU fault status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_faultstType VcuFaultst {
      get { return vcuFaultst_; }
      set {
        vcuFaultst_ = value;
      }
    }

    /// <summary>Field number for the "vcu_drvmode" field.</summary>
    public const int VcuDrvmodeFieldNumber = 12;
    private global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_drvmodeType vcuDrvmode_ = 0;
    /// <summary>
    /// VCU drive mode  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_drvmodeType VcuDrvmode {
      get { return vcuDrvmode_; }
      set {
        vcuDrvmode_ = value;
      }
    }

    /// <summary>Field number for the "vcu_gearpst" field.</summary>
    public const int VcuGearpstFieldNumber = 13;
    private global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_gearpstType vcuGearpst_ = 0;
    /// <summary>
    /// Gear lever position  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_gearpstType VcuGearpst {
      get { return vcuGearpst_; }
      set {
        vcuGearpst_ = value;
      }
    }

    /// <summary>Field number for the "vcu_gearfaultst" field.</summary>
    public const int VcuGearfaultstFieldNumber = 14;
    private global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_gearfaultstType vcuGearfaultst_ = 0;
    /// <summary>
    /// Gear fault status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_gearfaultstType VcuGearfaultst {
      get { return vcuGearfaultst_; }
      set {
        vcuGearfaultst_ = value;
      }
    }

    /// <summary>Field number for the "vcu_gearact" field.</summary>
    public const int VcuGearactFieldNumber = 15;
    private global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_gearactType vcuGearact_ = 0;
    /// <summary>
    /// Actual gear  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_gearactType VcuGearact {
      get { return vcuGearact_; }
      set {
        vcuGearact_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Scu_vcu_1_312);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Scu_vcu_1_312 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VcuElcsysfault != other.VcuElcsysfault) return false;
      if (VcuBrkpedst != other.VcuBrkpedst) return false;
      if (VcuIntidx != other.VcuIntidx) return false;
      if (VcuGearintidx != other.VcuGearintidx) return false;
      if (VcuGeardrvmode != other.VcuGeardrvmode) return false;
      if (VcuAccpedact != other.VcuAccpedact) return false;
      if (VcuBrkpedpst != other.VcuBrkpedpst) return false;
      if (VcuVehrng != other.VcuVehrng) return false;
      if (VcuAccpedpst != other.VcuAccpedpst) return false;
      if (VcuVehrdyst != other.VcuVehrdyst) return false;
      if (VcuFaultst != other.VcuFaultst) return false;
      if (VcuDrvmode != other.VcuDrvmode) return false;
      if (VcuGearpst != other.VcuGearpst) return false;
      if (VcuGearfaultst != other.VcuGearfaultst) return false;
      if (VcuGearact != other.VcuGearact) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (VcuElcsysfault != 0) hash ^= VcuElcsysfault.GetHashCode();
      if (VcuBrkpedst != 0) hash ^= VcuBrkpedst.GetHashCode();
      if (VcuIntidx != 0) hash ^= VcuIntidx.GetHashCode();
      if (VcuGearintidx != 0) hash ^= VcuGearintidx.GetHashCode();
      if (VcuGeardrvmode != 0) hash ^= VcuGeardrvmode.GetHashCode();
      if (VcuAccpedact != 0D) hash ^= VcuAccpedact.GetHashCode();
      if (VcuBrkpedpst != 0D) hash ^= VcuBrkpedpst.GetHashCode();
      if (VcuVehrng != 0) hash ^= VcuVehrng.GetHashCode();
      if (VcuAccpedpst != 0D) hash ^= VcuAccpedpst.GetHashCode();
      if (VcuVehrdyst != 0) hash ^= VcuVehrdyst.GetHashCode();
      if (VcuFaultst != 0) hash ^= VcuFaultst.GetHashCode();
      if (VcuDrvmode != 0) hash ^= VcuDrvmode.GetHashCode();
      if (VcuGearpst != 0) hash ^= VcuGearpst.GetHashCode();
      if (VcuGearfaultst != 0) hash ^= VcuGearfaultst.GetHashCode();
      if (VcuGearact != 0) hash ^= VcuGearact.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (VcuElcsysfault != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) VcuElcsysfault);
      }
      if (VcuBrkpedst != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) VcuBrkpedst);
      }
      if (VcuIntidx != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) VcuIntidx);
      }
      if (VcuGearintidx != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) VcuGearintidx);
      }
      if (VcuGeardrvmode != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) VcuGeardrvmode);
      }
      if (VcuAccpedact != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(VcuAccpedact);
      }
      if (VcuBrkpedpst != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(VcuBrkpedpst);
      }
      if (VcuVehrng != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(VcuVehrng);
      }
      if (VcuAccpedpst != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(VcuAccpedpst);
      }
      if (VcuVehrdyst != 0) {
        output.WriteRawTag(80);
        output.WriteEnum((int) VcuVehrdyst);
      }
      if (VcuFaultst != 0) {
        output.WriteRawTag(88);
        output.WriteEnum((int) VcuFaultst);
      }
      if (VcuDrvmode != 0) {
        output.WriteRawTag(96);
        output.WriteEnum((int) VcuDrvmode);
      }
      if (VcuGearpst != 0) {
        output.WriteRawTag(104);
        output.WriteEnum((int) VcuGearpst);
      }
      if (VcuGearfaultst != 0) {
        output.WriteRawTag(112);
        output.WriteEnum((int) VcuGearfaultst);
      }
      if (VcuGearact != 0) {
        output.WriteRawTag(120);
        output.WriteEnum((int) VcuGearact);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (VcuElcsysfault != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VcuElcsysfault);
      }
      if (VcuBrkpedst != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VcuBrkpedst);
      }
      if (VcuIntidx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VcuIntidx);
      }
      if (VcuGearintidx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VcuGearintidx);
      }
      if (VcuGeardrvmode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VcuGeardrvmode);
      }
      if (VcuAccpedact != 0D) {
        size += 1 + 8;
      }
      if (VcuBrkpedpst != 0D) {
        size += 1 + 8;
      }
      if (VcuVehrng != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VcuVehrng);
      }
      if (VcuAccpedpst != 0D) {
        size += 1 + 8;
      }
      if (VcuVehrdyst != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VcuVehrdyst);
      }
      if (VcuFaultst != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VcuFaultst);
      }
      if (VcuDrvmode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VcuDrvmode);
      }
      if (VcuGearpst != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VcuGearpst);
      }
      if (VcuGearfaultst != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VcuGearfaultst);
      }
      if (VcuGearact != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VcuGearact);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Scu_vcu_1_312 other) {
      if (other == null) {
        return;
      }
      if (other.VcuElcsysfault != 0) {
        VcuElcsysfault = other.VcuElcsysfault;
      }
      if (other.VcuBrkpedst != 0) {
        VcuBrkpedst = other.VcuBrkpedst;
      }
      if (other.VcuIntidx != 0) {
        VcuIntidx = other.VcuIntidx;
      }
      if (other.VcuGearintidx != 0) {
        VcuGearintidx = other.VcuGearintidx;
      }
      if (other.VcuGeardrvmode != 0) {
        VcuGeardrvmode = other.VcuGeardrvmode;
      }
      if (other.VcuAccpedact != 0D) {
        VcuAccpedact = other.VcuAccpedact;
      }
      if (other.VcuBrkpedpst != 0D) {
        VcuBrkpedpst = other.VcuBrkpedpst;
      }
      if (other.VcuVehrng != 0) {
        VcuVehrng = other.VcuVehrng;
      }
      if (other.VcuAccpedpst != 0D) {
        VcuAccpedpst = other.VcuAccpedpst;
      }
      if (other.VcuVehrdyst != 0) {
        VcuVehrdyst = other.VcuVehrdyst;
      }
      if (other.VcuFaultst != 0) {
        VcuFaultst = other.VcuFaultst;
      }
      if (other.VcuDrvmode != 0) {
        VcuDrvmode = other.VcuDrvmode;
      }
      if (other.VcuGearpst != 0) {
        VcuGearpst = other.VcuGearpst;
      }
      if (other.VcuGearfaultst != 0) {
        VcuGearfaultst = other.VcuGearfaultst;
      }
      if (other.VcuGearact != 0) {
        VcuGearact = other.VcuGearact;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            vcuElcsysfault_ = (global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_elcsysfaultType) input.ReadEnum();
            break;
          }
          case 16: {
            vcuBrkpedst_ = (global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_brkpedstType) input.ReadEnum();
            break;
          }
          case 24: {
            vcuIntidx_ = (global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_intidxType) input.ReadEnum();
            break;
          }
          case 32: {
            vcuGearintidx_ = (global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_gearintidxType) input.ReadEnum();
            break;
          }
          case 40: {
            vcuGeardrvmode_ = (global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_geardrvmodeType) input.ReadEnum();
            break;
          }
          case 49: {
            VcuAccpedact = input.ReadDouble();
            break;
          }
          case 57: {
            VcuBrkpedpst = input.ReadDouble();
            break;
          }
          case 64: {
            VcuVehrng = input.ReadInt32();
            break;
          }
          case 73: {
            VcuAccpedpst = input.ReadDouble();
            break;
          }
          case 80: {
            vcuVehrdyst_ = (global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_vehrdystType) input.ReadEnum();
            break;
          }
          case 88: {
            vcuFaultst_ = (global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_faultstType) input.ReadEnum();
            break;
          }
          case 96: {
            vcuDrvmode_ = (global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_drvmodeType) input.ReadEnum();
            break;
          }
          case 104: {
            vcuGearpst_ = (global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_gearpstType) input.ReadEnum();
            break;
          }
          case 112: {
            vcuGearfaultst_ = (global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_gearfaultstType) input.ReadEnum();
            break;
          }
          case 120: {
            vcuGearact_ = (global::Apollo.Canbus.Scu_vcu_1_312.Types.Vcu_gearactType) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Scu_vcu_1_312 message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Report Message
      /// </summary>
      public enum Vcu_elcsysfaultType {
        [pbr::OriginalName("VCU_ELCSYSFAULT_NORMAL")] VcuElcsysfaultNormal = 0,
        [pbr::OriginalName("VCU_ELCSYSFAULT_FAULT")] VcuElcsysfaultFault = 1,
      }

      public enum Vcu_brkpedstType {
        [pbr::OriginalName("VCU_BRKPEDST_UNPRESSED")] VcuBrkpedstUnpressed = 0,
        [pbr::OriginalName("VCU_BRKPEDST_PRESSED")] VcuBrkpedstPressed = 1,
      }

      public enum Vcu_intidxType {
        [pbr::OriginalName("VCU_INTIDX_NOINT")] VcuIntidxNoint = 0,
        [pbr::OriginalName("VCU_INTIDX_OVERFLOW")] VcuIntidxOverflow = 1,
        [pbr::OriginalName("VCU_INTIDX_TIMEOUT")] VcuIntidxTimeout = 2,
        [pbr::OriginalName("VCU_INTIDX_ACCPEDINT")] VcuIntidxAccpedint = 3,
        [pbr::OriginalName("VCU_INTIDX_BRKPEDINT")] VcuIntidxBrkpedint = 4,
        [pbr::OriginalName("VCU_INTIDX_GEARINT")] VcuIntidxGearint = 5,
      }

      public enum Vcu_gearintidxType {
        [pbr::OriginalName("VCU_GEARINTIDX_NOINT")] VcuGearintidxNoint = 0,
        [pbr::OriginalName("VCU_GEARINTIDX_OVERFLOW")] VcuGearintidxOverflow = 1,
        [pbr::OriginalName("VCU_GEARINTIDX_TIMEOUT")] VcuGearintidxTimeout = 2,
      }

      public enum Vcu_geardrvmodeType {
        [pbr::OriginalName("VCU_GEARDRVMODE_INVALID")] VcuGeardrvmodeInvalid = 0,
        [pbr::OriginalName("VCU_GEARDRVMODE_MANUAL")] VcuGeardrvmodeManual = 1,
        [pbr::OriginalName("VCU_GEARDRVMODE_INTERRUPT")] VcuGeardrvmodeInterrupt = 2,
        [pbr::OriginalName("VCU_GEARDRVMODE_AUTO")] VcuGeardrvmodeAuto = 3,
      }

      public enum Vcu_vehrdystType {
        [pbr::OriginalName("VCU_VEHRDYST_NOTREADY")] VcuVehrdystNotready = 0,
        [pbr::OriginalName("VCU_VEHRDYST_READY")] VcuVehrdystReady = 1,
      }

      public enum Vcu_faultstType {
        [pbr::OriginalName("VCU_FAULTST_NORMAL")] VcuFaultstNormal = 0,
        [pbr::OriginalName("VCU_FAULTST_DERATE")] VcuFaultstDerate = 1,
        [pbr::OriginalName("VCU_FAULTST_RSV1")] VcuFaultstRsv1 = 2,
        [pbr::OriginalName("VCU_FAULTST_RSV2")] VcuFaultstRsv2 = 3,
        [pbr::OriginalName("VCU_FAULTST_RSV3")] VcuFaultstRsv3 = 4,
        [pbr::OriginalName("VCU_FAULTST_FAULT")] VcuFaultstFault = 5,
      }

      public enum Vcu_drvmodeType {
        [pbr::OriginalName("VCU_DRVMODE_INVALID")] VcuDrvmodeInvalid = 0,
        [pbr::OriginalName("VCU_DRVMODE_MANUAL")] VcuDrvmodeManual = 1,
        [pbr::OriginalName("VCU_DRVMODE_INTERRUPT")] VcuDrvmodeInterrupt = 2,
        [pbr::OriginalName("VCU_DRVMODE_AUTO")] VcuDrvmodeAuto = 3,
      }

      public enum Vcu_gearpstType {
        [pbr::OriginalName("VCU_GEARPST_INVALID")] VcuGearpstInvalid = 0,
        [pbr::OriginalName("VCU_GEARPST_DRIVE")] VcuGearpstDrive = 1,
        [pbr::OriginalName("VCU_GEARPST_NEUTRAL")] VcuGearpstNeutral = 2,
        [pbr::OriginalName("VCU_GEARPST_REVERSE")] VcuGearpstReverse = 3,
        [pbr::OriginalName("VCU_GEARPST_PARK")] VcuGearpstPark = 4,
      }

      public enum Vcu_gearfaultstType {
        [pbr::OriginalName("VCU_GEARFAULTST_NORMAL")] VcuGearfaultstNormal = 0,
        [pbr::OriginalName("VCU_GEARFAULTST_FAULT")] VcuGearfaultstFault = 1,
      }

      public enum Vcu_gearactType {
        [pbr::OriginalName("VCU_GEARACT_INVALID")] VcuGearactInvalid = 0,
        [pbr::OriginalName("VCU_GEARACT_DRIVE")] VcuGearactDrive = 1,
        [pbr::OriginalName("VCU_GEARACT_NEUTRAL")] VcuGearactNeutral = 2,
        [pbr::OriginalName("VCU_GEARACT_REVERSE")] VcuGearactReverse = 3,
        [pbr::OriginalName("VCU_GEARACT_PARK")] VcuGearactPark = 4,
      }

    }
    #endregion

  }

  public sealed partial class Scu_eps_311 : pb::IMessage<Scu_eps_311> {
    private static readonly pb::MessageParser<Scu_eps_311> _parser = new pb::MessageParser<Scu_eps_311>(() => new Scu_eps_311());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Scu_eps_311> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Canbus.Ge3Reflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scu_eps_311() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scu_eps_311(Scu_eps_311 other) : this() {
      epsIntidx_ = other.epsIntidx_;
      epsSteeranglespd_ = other.epsSteeranglespd_;
      epsSteerangle_ = other.epsSteerangle_;
      epsFaultst_ = other.epsFaultst_;
      epsDrvmode_ = other.epsDrvmode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scu_eps_311 Clone() {
      return new Scu_eps_311(this);
    }

    /// <summary>Field number for the "eps_intidx" field.</summary>
    public const int EpsIntidxFieldNumber = 1;
    private global::Apollo.Canbus.Scu_eps_311.Types.Eps_intidxType epsIntidx_ = 0;
    /// <summary>
    /// EPS interrupt index  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_eps_311.Types.Eps_intidxType EpsIntidx {
      get { return epsIntidx_; }
      set {
        epsIntidx_ = value;
      }
    }

    /// <summary>Field number for the "eps_steeranglespd" field.</summary>
    public const int EpsSteeranglespdFieldNumber = 2;
    private double epsSteeranglespd_;
    /// <summary>
    /// Steer angle speed  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double EpsSteeranglespd {
      get { return epsSteeranglespd_; }
      set {
        epsSteeranglespd_ = value;
      }
    }

    /// <summary>Field number for the "eps_steerangle" field.</summary>
    public const int EpsSteerangleFieldNumber = 3;
    private double epsSteerangle_;
    /// <summary>
    /// Steer angle Left + right -  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double EpsSteerangle {
      get { return epsSteerangle_; }
      set {
        epsSteerangle_ = value;
      }
    }

    /// <summary>Field number for the "eps_faultst" field.</summary>
    public const int EpsFaultstFieldNumber = 4;
    private global::Apollo.Canbus.Scu_eps_311.Types.Eps_faultstType epsFaultst_ = 0;
    /// <summary>
    /// EPS fault status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_eps_311.Types.Eps_faultstType EpsFaultst {
      get { return epsFaultst_; }
      set {
        epsFaultst_ = value;
      }
    }

    /// <summary>Field number for the "eps_drvmode" field.</summary>
    public const int EpsDrvmodeFieldNumber = 5;
    private global::Apollo.Canbus.Scu_eps_311.Types.Eps_drvmodeType epsDrvmode_ = 0;
    /// <summary>
    /// EPS drive mode  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_eps_311.Types.Eps_drvmodeType EpsDrvmode {
      get { return epsDrvmode_; }
      set {
        epsDrvmode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Scu_eps_311);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Scu_eps_311 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EpsIntidx != other.EpsIntidx) return false;
      if (EpsSteeranglespd != other.EpsSteeranglespd) return false;
      if (EpsSteerangle != other.EpsSteerangle) return false;
      if (EpsFaultst != other.EpsFaultst) return false;
      if (EpsDrvmode != other.EpsDrvmode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EpsIntidx != 0) hash ^= EpsIntidx.GetHashCode();
      if (EpsSteeranglespd != 0D) hash ^= EpsSteeranglespd.GetHashCode();
      if (EpsSteerangle != 0D) hash ^= EpsSteerangle.GetHashCode();
      if (EpsFaultst != 0) hash ^= EpsFaultst.GetHashCode();
      if (EpsDrvmode != 0) hash ^= EpsDrvmode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EpsIntidx != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) EpsIntidx);
      }
      if (EpsSteeranglespd != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(EpsSteeranglespd);
      }
      if (EpsSteerangle != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(EpsSteerangle);
      }
      if (EpsFaultst != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) EpsFaultst);
      }
      if (EpsDrvmode != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) EpsDrvmode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EpsIntidx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EpsIntidx);
      }
      if (EpsSteeranglespd != 0D) {
        size += 1 + 8;
      }
      if (EpsSteerangle != 0D) {
        size += 1 + 8;
      }
      if (EpsFaultst != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EpsFaultst);
      }
      if (EpsDrvmode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EpsDrvmode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Scu_eps_311 other) {
      if (other == null) {
        return;
      }
      if (other.EpsIntidx != 0) {
        EpsIntidx = other.EpsIntidx;
      }
      if (other.EpsSteeranglespd != 0D) {
        EpsSteeranglespd = other.EpsSteeranglespd;
      }
      if (other.EpsSteerangle != 0D) {
        EpsSteerangle = other.EpsSteerangle;
      }
      if (other.EpsFaultst != 0) {
        EpsFaultst = other.EpsFaultst;
      }
      if (other.EpsDrvmode != 0) {
        EpsDrvmode = other.EpsDrvmode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            epsIntidx_ = (global::Apollo.Canbus.Scu_eps_311.Types.Eps_intidxType) input.ReadEnum();
            break;
          }
          case 17: {
            EpsSteeranglespd = input.ReadDouble();
            break;
          }
          case 25: {
            EpsSteerangle = input.ReadDouble();
            break;
          }
          case 32: {
            epsFaultst_ = (global::Apollo.Canbus.Scu_eps_311.Types.Eps_faultstType) input.ReadEnum();
            break;
          }
          case 40: {
            epsDrvmode_ = (global::Apollo.Canbus.Scu_eps_311.Types.Eps_drvmodeType) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Scu_eps_311 message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Report Message
      /// </summary>
      public enum Eps_intidxType {
        [pbr::OriginalName("EPS_INTIDX_NOINT")] EpsIntidxNoint = 0,
        [pbr::OriginalName("EPS_INTIDX_OVERFLOW")] EpsIntidxOverflow = 1,
        [pbr::OriginalName("EPS_INTIDX_TIMEOUT")] EpsIntidxTimeout = 2,
        [pbr::OriginalName("EPS_INTIDX_STEERINT")] EpsIntidxSteerint = 3,
      }

      public enum Eps_faultstType {
        [pbr::OriginalName("EPS_FAULTST_NORMAL")] EpsFaultstNormal = 0,
        [pbr::OriginalName("EPS_FAULTST_FAULT")] EpsFaultstFault = 1,
      }

      public enum Eps_drvmodeType {
        [pbr::OriginalName("EPS_DRVMODE_INVALID")] EpsDrvmodeInvalid = 0,
        [pbr::OriginalName("EPS_DRVMODE_MANUAL")] EpsDrvmodeManual = 1,
        [pbr::OriginalName("EPS_DRVMODE_INTERRUPT")] EpsDrvmodeInterrupt = 2,
        [pbr::OriginalName("EPS_DRVMODE_AUTO")] EpsDrvmodeAuto = 3,
      }

    }
    #endregion

  }

  public sealed partial class Ge3 : pb::IMessage<Ge3> {
    private static readonly pb::MessageParser<Ge3> _parser = new pb::MessageParser<Ge3>(() => new Ge3());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Ge3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Canbus.Ge3Reflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ge3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ge3(Ge3 other) : this() {
      PcBcm201 = other.pcBcm201_ != null ? other.PcBcm201.Clone() : null;
      ScuBcs3308 = other.scuBcs3308_ != null ? other.ScuBcs3308.Clone() : null;
      PcEpb203 = other.pcEpb203_ != null ? other.PcEpb203.Clone() : null;
      PcBcs202 = other.pcBcs202_ != null ? other.PcBcs202.Clone() : null;
      PcVcu205 = other.pcVcu205_ != null ? other.PcVcu205.Clone() : null;
      PcEps204 = other.pcEps204_ != null ? other.PcEps204.Clone() : null;
      ScuVcu2313 = other.scuVcu2313_ != null ? other.ScuVcu2313.Clone() : null;
      Scu1301 = other.scu1301_ != null ? other.Scu1301.Clone() : null;
      Scu2302 = other.scu2302_ != null ? other.Scu2302.Clone() : null;
      Scu3303 = other.scu3303_ != null ? other.Scu3303.Clone() : null;
      ScuBcm304 = other.scuBcm304_ != null ? other.ScuBcm304.Clone() : null;
      ScuBcs1306 = other.scuBcs1306_ != null ? other.ScuBcs1306.Clone() : null;
      ScuBcs2307 = other.scuBcs2307_ != null ? other.ScuBcs2307.Clone() : null;
      ScuEpb310 = other.scuEpb310_ != null ? other.ScuEpb310.Clone() : null;
      ScuVcu1312 = other.scuVcu1312_ != null ? other.ScuVcu1312.Clone() : null;
      ScuEps311 = other.scuEps311_ != null ? other.ScuEps311.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ge3 Clone() {
      return new Ge3(this);
    }

    /// <summary>Field number for the "pc_bcm_201" field.</summary>
    public const int PcBcm201FieldNumber = 1;
    private global::Apollo.Canbus.Pc_bcm_201 pcBcm201_;
    /// <summary>
    /// control message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Pc_bcm_201 PcBcm201 {
      get { return pcBcm201_; }
      set {
        pcBcm201_ = value;
      }
    }

    /// <summary>Field number for the "scu_bcs_3_308" field.</summary>
    public const int ScuBcs3308FieldNumber = 2;
    private global::Apollo.Canbus.Scu_bcs_3_308 scuBcs3308_;
    /// <summary>
    /// report message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcs_3_308 ScuBcs3308 {
      get { return scuBcs3308_; }
      set {
        scuBcs3308_ = value;
      }
    }

    /// <summary>Field number for the "pc_epb_203" field.</summary>
    public const int PcEpb203FieldNumber = 3;
    private global::Apollo.Canbus.Pc_epb_203 pcEpb203_;
    /// <summary>
    /// control message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Pc_epb_203 PcEpb203 {
      get { return pcEpb203_; }
      set {
        pcEpb203_ = value;
      }
    }

    /// <summary>Field number for the "pc_bcs_202" field.</summary>
    public const int PcBcs202FieldNumber = 4;
    private global::Apollo.Canbus.Pc_bcs_202 pcBcs202_;
    /// <summary>
    /// control message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Pc_bcs_202 PcBcs202 {
      get { return pcBcs202_; }
      set {
        pcBcs202_ = value;
      }
    }

    /// <summary>Field number for the "pc_vcu_205" field.</summary>
    public const int PcVcu205FieldNumber = 5;
    private global::Apollo.Canbus.Pc_vcu_205 pcVcu205_;
    /// <summary>
    /// control message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Pc_vcu_205 PcVcu205 {
      get { return pcVcu205_; }
      set {
        pcVcu205_ = value;
      }
    }

    /// <summary>Field number for the "pc_eps_204" field.</summary>
    public const int PcEps204FieldNumber = 6;
    private global::Apollo.Canbus.Pc_eps_204 pcEps204_;
    /// <summary>
    /// control message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Pc_eps_204 PcEps204 {
      get { return pcEps204_; }
      set {
        pcEps204_ = value;
      }
    }

    /// <summary>Field number for the "scu_vcu_2_313" field.</summary>
    public const int ScuVcu2313FieldNumber = 7;
    private global::Apollo.Canbus.Scu_vcu_2_313 scuVcu2313_;
    /// <summary>
    /// report message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_vcu_2_313 ScuVcu2313 {
      get { return scuVcu2313_; }
      set {
        scuVcu2313_ = value;
      }
    }

    /// <summary>Field number for the "scu_1_301" field.</summary>
    public const int Scu1301FieldNumber = 8;
    private global::Apollo.Canbus.Scu_1_301 scu1301_;
    /// <summary>
    /// report message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_1_301 Scu1301 {
      get { return scu1301_; }
      set {
        scu1301_ = value;
      }
    }

    /// <summary>Field number for the "scu_2_302" field.</summary>
    public const int Scu2302FieldNumber = 9;
    private global::Apollo.Canbus.Scu_2_302 scu2302_;
    /// <summary>
    /// report message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_2_302 Scu2302 {
      get { return scu2302_; }
      set {
        scu2302_ = value;
      }
    }

    /// <summary>Field number for the "scu_3_303" field.</summary>
    public const int Scu3303FieldNumber = 10;
    private global::Apollo.Canbus.Scu_3_303 scu3303_;
    /// <summary>
    /// report message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_3_303 Scu3303 {
      get { return scu3303_; }
      set {
        scu3303_ = value;
      }
    }

    /// <summary>Field number for the "scu_bcm_304" field.</summary>
    public const int ScuBcm304FieldNumber = 11;
    private global::Apollo.Canbus.Scu_bcm_304 scuBcm304_;
    /// <summary>
    /// report message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcm_304 ScuBcm304 {
      get { return scuBcm304_; }
      set {
        scuBcm304_ = value;
      }
    }

    /// <summary>Field number for the "scu_bcs_1_306" field.</summary>
    public const int ScuBcs1306FieldNumber = 12;
    private global::Apollo.Canbus.Scu_bcs_1_306 scuBcs1306_;
    /// <summary>
    /// report message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcs_1_306 ScuBcs1306 {
      get { return scuBcs1306_; }
      set {
        scuBcs1306_ = value;
      }
    }

    /// <summary>Field number for the "scu_bcs_2_307" field.</summary>
    public const int ScuBcs2307FieldNumber = 13;
    private global::Apollo.Canbus.Scu_bcs_2_307 scuBcs2307_;
    /// <summary>
    /// report message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_bcs_2_307 ScuBcs2307 {
      get { return scuBcs2307_; }
      set {
        scuBcs2307_ = value;
      }
    }

    /// <summary>Field number for the "scu_epb_310" field.</summary>
    public const int ScuEpb310FieldNumber = 14;
    private global::Apollo.Canbus.Scu_epb_310 scuEpb310_;
    /// <summary>
    /// report message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_epb_310 ScuEpb310 {
      get { return scuEpb310_; }
      set {
        scuEpb310_ = value;
      }
    }

    /// <summary>Field number for the "scu_vcu_1_312" field.</summary>
    public const int ScuVcu1312FieldNumber = 15;
    private global::Apollo.Canbus.Scu_vcu_1_312 scuVcu1312_;
    /// <summary>
    /// report message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_vcu_1_312 ScuVcu1312 {
      get { return scuVcu1312_; }
      set {
        scuVcu1312_ = value;
      }
    }

    /// <summary>Field number for the "scu_eps_311" field.</summary>
    public const int ScuEps311FieldNumber = 16;
    private global::Apollo.Canbus.Scu_eps_311 scuEps311_;
    /// <summary>
    /// report message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Scu_eps_311 ScuEps311 {
      get { return scuEps311_; }
      set {
        scuEps311_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Ge3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Ge3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PcBcm201, other.PcBcm201)) return false;
      if (!object.Equals(ScuBcs3308, other.ScuBcs3308)) return false;
      if (!object.Equals(PcEpb203, other.PcEpb203)) return false;
      if (!object.Equals(PcBcs202, other.PcBcs202)) return false;
      if (!object.Equals(PcVcu205, other.PcVcu205)) return false;
      if (!object.Equals(PcEps204, other.PcEps204)) return false;
      if (!object.Equals(ScuVcu2313, other.ScuVcu2313)) return false;
      if (!object.Equals(Scu1301, other.Scu1301)) return false;
      if (!object.Equals(Scu2302, other.Scu2302)) return false;
      if (!object.Equals(Scu3303, other.Scu3303)) return false;
      if (!object.Equals(ScuBcm304, other.ScuBcm304)) return false;
      if (!object.Equals(ScuBcs1306, other.ScuBcs1306)) return false;
      if (!object.Equals(ScuBcs2307, other.ScuBcs2307)) return false;
      if (!object.Equals(ScuEpb310, other.ScuEpb310)) return false;
      if (!object.Equals(ScuVcu1312, other.ScuVcu1312)) return false;
      if (!object.Equals(ScuEps311, other.ScuEps311)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (pcBcm201_ != null) hash ^= PcBcm201.GetHashCode();
      if (scuBcs3308_ != null) hash ^= ScuBcs3308.GetHashCode();
      if (pcEpb203_ != null) hash ^= PcEpb203.GetHashCode();
      if (pcBcs202_ != null) hash ^= PcBcs202.GetHashCode();
      if (pcVcu205_ != null) hash ^= PcVcu205.GetHashCode();
      if (pcEps204_ != null) hash ^= PcEps204.GetHashCode();
      if (scuVcu2313_ != null) hash ^= ScuVcu2313.GetHashCode();
      if (scu1301_ != null) hash ^= Scu1301.GetHashCode();
      if (scu2302_ != null) hash ^= Scu2302.GetHashCode();
      if (scu3303_ != null) hash ^= Scu3303.GetHashCode();
      if (scuBcm304_ != null) hash ^= ScuBcm304.GetHashCode();
      if (scuBcs1306_ != null) hash ^= ScuBcs1306.GetHashCode();
      if (scuBcs2307_ != null) hash ^= ScuBcs2307.GetHashCode();
      if (scuEpb310_ != null) hash ^= ScuEpb310.GetHashCode();
      if (scuVcu1312_ != null) hash ^= ScuVcu1312.GetHashCode();
      if (scuEps311_ != null) hash ^= ScuEps311.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (pcBcm201_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PcBcm201);
      }
      if (scuBcs3308_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ScuBcs3308);
      }
      if (pcEpb203_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PcEpb203);
      }
      if (pcBcs202_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PcBcs202);
      }
      if (pcVcu205_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PcVcu205);
      }
      if (pcEps204_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PcEps204);
      }
      if (scuVcu2313_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ScuVcu2313);
      }
      if (scu1301_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Scu1301);
      }
      if (scu2302_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Scu2302);
      }
      if (scu3303_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Scu3303);
      }
      if (scuBcm304_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(ScuBcm304);
      }
      if (scuBcs1306_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(ScuBcs1306);
      }
      if (scuBcs2307_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(ScuBcs2307);
      }
      if (scuEpb310_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(ScuEpb310);
      }
      if (scuVcu1312_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(ScuVcu1312);
      }
      if (scuEps311_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(ScuEps311);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (pcBcm201_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PcBcm201);
      }
      if (scuBcs3308_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScuBcs3308);
      }
      if (pcEpb203_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PcEpb203);
      }
      if (pcBcs202_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PcBcs202);
      }
      if (pcVcu205_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PcVcu205);
      }
      if (pcEps204_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PcEps204);
      }
      if (scuVcu2313_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScuVcu2313);
      }
      if (scu1301_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scu1301);
      }
      if (scu2302_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scu2302);
      }
      if (scu3303_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scu3303);
      }
      if (scuBcm304_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScuBcm304);
      }
      if (scuBcs1306_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScuBcs1306);
      }
      if (scuBcs2307_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScuBcs2307);
      }
      if (scuEpb310_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScuEpb310);
      }
      if (scuVcu1312_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScuVcu1312);
      }
      if (scuEps311_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ScuEps311);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Ge3 other) {
      if (other == null) {
        return;
      }
      if (other.pcBcm201_ != null) {
        if (pcBcm201_ == null) {
          pcBcm201_ = new global::Apollo.Canbus.Pc_bcm_201();
        }
        PcBcm201.MergeFrom(other.PcBcm201);
      }
      if (other.scuBcs3308_ != null) {
        if (scuBcs3308_ == null) {
          scuBcs3308_ = new global::Apollo.Canbus.Scu_bcs_3_308();
        }
        ScuBcs3308.MergeFrom(other.ScuBcs3308);
      }
      if (other.pcEpb203_ != null) {
        if (pcEpb203_ == null) {
          pcEpb203_ = new global::Apollo.Canbus.Pc_epb_203();
        }
        PcEpb203.MergeFrom(other.PcEpb203);
      }
      if (other.pcBcs202_ != null) {
        if (pcBcs202_ == null) {
          pcBcs202_ = new global::Apollo.Canbus.Pc_bcs_202();
        }
        PcBcs202.MergeFrom(other.PcBcs202);
      }
      if (other.pcVcu205_ != null) {
        if (pcVcu205_ == null) {
          pcVcu205_ = new global::Apollo.Canbus.Pc_vcu_205();
        }
        PcVcu205.MergeFrom(other.PcVcu205);
      }
      if (other.pcEps204_ != null) {
        if (pcEps204_ == null) {
          pcEps204_ = new global::Apollo.Canbus.Pc_eps_204();
        }
        PcEps204.MergeFrom(other.PcEps204);
      }
      if (other.scuVcu2313_ != null) {
        if (scuVcu2313_ == null) {
          scuVcu2313_ = new global::Apollo.Canbus.Scu_vcu_2_313();
        }
        ScuVcu2313.MergeFrom(other.ScuVcu2313);
      }
      if (other.scu1301_ != null) {
        if (scu1301_ == null) {
          scu1301_ = new global::Apollo.Canbus.Scu_1_301();
        }
        Scu1301.MergeFrom(other.Scu1301);
      }
      if (other.scu2302_ != null) {
        if (scu2302_ == null) {
          scu2302_ = new global::Apollo.Canbus.Scu_2_302();
        }
        Scu2302.MergeFrom(other.Scu2302);
      }
      if (other.scu3303_ != null) {
        if (scu3303_ == null) {
          scu3303_ = new global::Apollo.Canbus.Scu_3_303();
        }
        Scu3303.MergeFrom(other.Scu3303);
      }
      if (other.scuBcm304_ != null) {
        if (scuBcm304_ == null) {
          scuBcm304_ = new global::Apollo.Canbus.Scu_bcm_304();
        }
        ScuBcm304.MergeFrom(other.ScuBcm304);
      }
      if (other.scuBcs1306_ != null) {
        if (scuBcs1306_ == null) {
          scuBcs1306_ = new global::Apollo.Canbus.Scu_bcs_1_306();
        }
        ScuBcs1306.MergeFrom(other.ScuBcs1306);
      }
      if (other.scuBcs2307_ != null) {
        if (scuBcs2307_ == null) {
          scuBcs2307_ = new global::Apollo.Canbus.Scu_bcs_2_307();
        }
        ScuBcs2307.MergeFrom(other.ScuBcs2307);
      }
      if (other.scuEpb310_ != null) {
        if (scuEpb310_ == null) {
          scuEpb310_ = new global::Apollo.Canbus.Scu_epb_310();
        }
        ScuEpb310.MergeFrom(other.ScuEpb310);
      }
      if (other.scuVcu1312_ != null) {
        if (scuVcu1312_ == null) {
          scuVcu1312_ = new global::Apollo.Canbus.Scu_vcu_1_312();
        }
        ScuVcu1312.MergeFrom(other.ScuVcu1312);
      }
      if (other.scuEps311_ != null) {
        if (scuEps311_ == null) {
          scuEps311_ = new global::Apollo.Canbus.Scu_eps_311();
        }
        ScuEps311.MergeFrom(other.ScuEps311);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (pcBcm201_ == null) {
              pcBcm201_ = new global::Apollo.Canbus.Pc_bcm_201();
            }
            input.ReadMessage(pcBcm201_);
            break;
          }
          case 18: {
            if (scuBcs3308_ == null) {
              scuBcs3308_ = new global::Apollo.Canbus.Scu_bcs_3_308();
            }
            input.ReadMessage(scuBcs3308_);
            break;
          }
          case 26: {
            if (pcEpb203_ == null) {
              pcEpb203_ = new global::Apollo.Canbus.Pc_epb_203();
            }
            input.ReadMessage(pcEpb203_);
            break;
          }
          case 34: {
            if (pcBcs202_ == null) {
              pcBcs202_ = new global::Apollo.Canbus.Pc_bcs_202();
            }
            input.ReadMessage(pcBcs202_);
            break;
          }
          case 42: {
            if (pcVcu205_ == null) {
              pcVcu205_ = new global::Apollo.Canbus.Pc_vcu_205();
            }
            input.ReadMessage(pcVcu205_);
            break;
          }
          case 50: {
            if (pcEps204_ == null) {
              pcEps204_ = new global::Apollo.Canbus.Pc_eps_204();
            }
            input.ReadMessage(pcEps204_);
            break;
          }
          case 58: {
            if (scuVcu2313_ == null) {
              scuVcu2313_ = new global::Apollo.Canbus.Scu_vcu_2_313();
            }
            input.ReadMessage(scuVcu2313_);
            break;
          }
          case 66: {
            if (scu1301_ == null) {
              scu1301_ = new global::Apollo.Canbus.Scu_1_301();
            }
            input.ReadMessage(scu1301_);
            break;
          }
          case 74: {
            if (scu2302_ == null) {
              scu2302_ = new global::Apollo.Canbus.Scu_2_302();
            }
            input.ReadMessage(scu2302_);
            break;
          }
          case 82: {
            if (scu3303_ == null) {
              scu3303_ = new global::Apollo.Canbus.Scu_3_303();
            }
            input.ReadMessage(scu3303_);
            break;
          }
          case 90: {
            if (scuBcm304_ == null) {
              scuBcm304_ = new global::Apollo.Canbus.Scu_bcm_304();
            }
            input.ReadMessage(scuBcm304_);
            break;
          }
          case 98: {
            if (scuBcs1306_ == null) {
              scuBcs1306_ = new global::Apollo.Canbus.Scu_bcs_1_306();
            }
            input.ReadMessage(scuBcs1306_);
            break;
          }
          case 106: {
            if (scuBcs2307_ == null) {
              scuBcs2307_ = new global::Apollo.Canbus.Scu_bcs_2_307();
            }
            input.ReadMessage(scuBcs2307_);
            break;
          }
          case 114: {
            if (scuEpb310_ == null) {
              scuEpb310_ = new global::Apollo.Canbus.Scu_epb_310();
            }
            input.ReadMessage(scuEpb310_);
            break;
          }
          case 122: {
            if (scuVcu1312_ == null) {
              scuVcu1312_ = new global::Apollo.Canbus.Scu_vcu_1_312();
            }
            input.ReadMessage(scuVcu1312_);
            break;
          }
          case 130: {
            if (scuEps311_ == null) {
              scuEps311_ = new global::Apollo.Canbus.Scu_eps_311();
            }
            input.ReadMessage(scuEps311_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
