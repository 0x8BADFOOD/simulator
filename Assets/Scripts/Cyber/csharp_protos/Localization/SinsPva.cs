// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/localization/proto/sins_pva.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Apollo.Localization {

  /// <summary>Holder for reflection information generated from modules/localization/proto/sins_pva.proto</summary>
  public static partial class SinsPvaReflection {

    #region Descriptor
    /// <summary>File descriptor for modules/localization/proto/sins_pva.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SinsPvaReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ciltb2R1bGVzL2xvY2FsaXphdGlvbi9wcm90by9zaW5zX3B2YS5wcm90bxIT",
            "YXBvbGxvLmxvY2FsaXphdGlvbhohbW9kdWxlcy9jb21tb24vcHJvdG8vaGVh",
            "ZGVyLnByb3RvGiNtb2R1bGVzL2NvbW1vbi9wcm90by9nZW9tZXRyeS5wcm90",
            "byLjAQoMSW50ZWdTaW5zUHZhEiUKBmhlYWRlchgBIAEoCzIVLmFwb2xsby5j",
            "b21tb24uSGVhZGVyEikKCHBvc2l0aW9uGAIgASgLMhcuYXBvbGxvLmNvbW1v",
            "bi5Qb2ludExMSBIoCgh2ZWxvY2l0eRgDIAEoCzIWLmFwb2xsby5jb21tb24u",
            "UG9pbnQzRBIoCghhdHRpdHVkZRgEIAEoCzIWLmFwb2xsby5jb21tb24uUG9p",
            "bnQzRBIRCglwdmFfY292YXIYBSADKAESGgoSaW5pdF9hbmRfYWxpZ25tZW50",
            "GAYgASgIYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Apollo.Common.HeaderReflection.Descriptor, global::Apollo.Common.GeometryReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Localization.IntegSinsPva), global::Apollo.Localization.IntegSinsPva.Parser, new[]{ "Header", "Position", "Velocity", "Attitude", "PvaCovar", "InitAndAlignment" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class IntegSinsPva : pb::IMessage<IntegSinsPva> {
    private static readonly pb::MessageParser<IntegSinsPva> _parser = new pb::MessageParser<IntegSinsPva>(() => new IntegSinsPva());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IntegSinsPva> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Localization.SinsPvaReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntegSinsPva() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntegSinsPva(IntegSinsPva other) : this() {
      Header = other.header_ != null ? other.Header.Clone() : null;
      Position = other.position_ != null ? other.Position.Clone() : null;
      Velocity = other.velocity_ != null ? other.Velocity.Clone() : null;
      Attitude = other.attitude_ != null ? other.Attitude.Clone() : null;
      pvaCovar_ = other.pvaCovar_.Clone();
      initAndAlignment_ = other.initAndAlignment_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntegSinsPva Clone() {
      return new IntegSinsPva(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Apollo.Common.Header header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Common.Header Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 2;
    private global::Apollo.Common.PointLLH position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Common.PointLLH Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "velocity" field.</summary>
    public const int VelocityFieldNumber = 3;
    private global::Apollo.Common.Point3D velocity_;
    /// <summary>
    /// The velocity calculated by SINS.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Common.Point3D Velocity {
      get { return velocity_; }
      set {
        velocity_ = value;
      }
    }

    /// <summary>Field number for the "attitude" field.</summary>
    public const int AttitudeFieldNumber = 4;
    private global::Apollo.Common.Point3D attitude_;
    /// <summary>
    /// The attitude euler calculated by SINS.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Common.Point3D Attitude {
      get { return attitude_; }
      set {
        attitude_ = value;
      }
    }

    /// <summary>Field number for the "pva_covar" field.</summary>
    public const int PvaCovarFieldNumber = 5;
    private static readonly pb::FieldCodec<double> _repeated_pvaCovar_codec
        = pb::FieldCodec.ForDouble(42);
    private readonly pbc::RepeatedField<double> pvaCovar_ = new pbc::RepeatedField<double>();
    /// <summary>
    /// 9-by-9 covariance matrix of the sins pva.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<double> PvaCovar {
      get { return pvaCovar_; }
    }

    /// <summary>Field number for the "init_and_alignment" field.</summary>
    public const int InitAndAlignmentFieldNumber = 6;
    private bool initAndAlignment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool InitAndAlignment {
      get { return initAndAlignment_; }
      set {
        initAndAlignment_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IntegSinsPva);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IntegSinsPva other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(Velocity, other.Velocity)) return false;
      if (!object.Equals(Attitude, other.Attitude)) return false;
      if(!pvaCovar_.Equals(other.pvaCovar_)) return false;
      if (InitAndAlignment != other.InitAndAlignment) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (velocity_ != null) hash ^= Velocity.GetHashCode();
      if (attitude_ != null) hash ^= Attitude.GetHashCode();
      hash ^= pvaCovar_.GetHashCode();
      if (InitAndAlignment != false) hash ^= InitAndAlignment.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (position_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Position);
      }
      if (velocity_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Velocity);
      }
      if (attitude_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Attitude);
      }
      pvaCovar_.WriteTo(output, _repeated_pvaCovar_codec);
      if (InitAndAlignment != false) {
        output.WriteRawTag(48);
        output.WriteBool(InitAndAlignment);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (velocity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Velocity);
      }
      if (attitude_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Attitude);
      }
      size += pvaCovar_.CalculateSize(_repeated_pvaCovar_codec);
      if (InitAndAlignment != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IntegSinsPva other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          header_ = new global::Apollo.Common.Header();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.position_ != null) {
        if (position_ == null) {
          position_ = new global::Apollo.Common.PointLLH();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.velocity_ != null) {
        if (velocity_ == null) {
          velocity_ = new global::Apollo.Common.Point3D();
        }
        Velocity.MergeFrom(other.Velocity);
      }
      if (other.attitude_ != null) {
        if (attitude_ == null) {
          attitude_ = new global::Apollo.Common.Point3D();
        }
        Attitude.MergeFrom(other.Attitude);
      }
      pvaCovar_.Add(other.pvaCovar_);
      if (other.InitAndAlignment != false) {
        InitAndAlignment = other.InitAndAlignment;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (header_ == null) {
              header_ = new global::Apollo.Common.Header();
            }
            input.ReadMessage(header_);
            break;
          }
          case 18: {
            if (position_ == null) {
              position_ = new global::Apollo.Common.PointLLH();
            }
            input.ReadMessage(position_);
            break;
          }
          case 26: {
            if (velocity_ == null) {
              velocity_ = new global::Apollo.Common.Point3D();
            }
            input.ReadMessage(velocity_);
            break;
          }
          case 34: {
            if (attitude_ == null) {
              attitude_ = new global::Apollo.Common.Point3D();
            }
            input.ReadMessage(attitude_);
            break;
          }
          case 42:
          case 41: {
            pvaCovar_.AddEntriesFrom(input, _repeated_pvaCovar_codec);
            break;
          }
          case 48: {
            InitAndAlignment = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
