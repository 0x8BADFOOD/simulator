// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/prediction/proto/prediction_obstacle.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Apollo.Prediction {

  /// <summary>Holder for reflection information generated from modules/prediction/proto/prediction_obstacle.proto</summary>
  public static partial class PredictionObstacleReflection {

    #region Descriptor
    /// <summary>File descriptor for modules/prediction/proto/prediction_obstacle.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PredictionObstacleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjJtb2R1bGVzL3ByZWRpY3Rpb24vcHJvdG8vcHJlZGljdGlvbl9vYnN0YWNs",
            "ZS5wcm90bxIRYXBvbGxvLnByZWRpY3Rpb24aJW1vZHVsZXMvY29tbW9uL3By",
            "b3RvL2Vycm9yX2NvZGUucHJvdG8aIW1vZHVsZXMvY29tbW9uL3Byb3RvL2hl",
            "YWRlci5wcm90bxokbW9kdWxlcy9jb21tb24vcHJvdG8vcG5jX3BvaW50LnBy",
            "b3RvGidtb2R1bGVzL3ByZWRpY3Rpb24vcHJvdG8vc2NlbmFyaW8ucHJvdG8a",
            "Mm1vZHVsZXMvcGVyY2VwdGlvbi9wcm90by9wZXJjZXB0aW9uX29ic3RhY2xl",
            "LnByb3RvGiZtb2R1bGVzL3ByZWRpY3Rpb24vcHJvdG8vZmVhdHVyZS5wcm90",
            "byJbCgpUcmFqZWN0b3J5EhMKC3Byb2JhYmlsaXR5GAEgASgBEjgKEHRyYWpl",
            "Y3RvcnlfcG9pbnQYAiADKAsyHi5hcG9sbG8uY29tbW9uLlRyYWplY3RvcnlQ",
            "b2ludCLtAQoOT2JzdGFjbGVJbnRlbnQSNAoEdHlwZRgBIAEoDjImLmFwb2xs",
            "by5wcmVkaWN0aW9uLk9ic3RhY2xlSW50ZW50LlR5cGUipAEKBFR5cGUSCwoH",
            "VU5LTk9XThAAEggKBFNUT1AQARIOCgpTVEFUSU9OQVJZEAISCgoGTU9WSU5H",
            "EAMSDwoLQ0hBTkdFX0xBTkUQBBIUChBMT1dfQUNDRUxFUkFUSU9OEAUSFQoR",
            "SElHSF9BQ0NFTEVSQVRJT04QBhIUChBMT1dfREVDRUxFUkFUSU9OEAcSFQoR",
            "SElHSF9ERUNFTEVSQVRJT04QCCJyCgZJbnRlbnQSLAoEdHlwZRgBIAEoDjIe",
            "LmFwb2xsby5wcmVkaWN0aW9uLkludGVudC5UeXBlIjoKBFR5cGUSCwoHVU5L",
            "Tk9XThAAEggKBFNUT1AQARIKCgZDUlVJU0UQAhIPCgtDSEFOR0VfTEFORRAD",
            "IrUCChJQcmVkaWN0aW9uT2JzdGFjbGUSQgoTcGVyY2VwdGlvbl9vYnN0YWNs",
            "ZRgBIAEoCzIlLmFwb2xsby5wZXJjZXB0aW9uLlBlcmNlcHRpb25PYnN0YWNs",
            "ZRIRCgl0aW1lc3RhbXAYAiABKAESGAoQcHJlZGljdGVkX3BlcmlvZBgDIAEo",
            "ARIxCgp0cmFqZWN0b3J5GAQgAygLMh0uYXBvbGxvLnByZWRpY3Rpb24uVHJh",
            "amVjdG9yeRIxCgZpbnRlbnQYBSABKAsyIS5hcG9sbG8ucHJlZGljdGlvbi5P",
            "YnN0YWNsZUludGVudBI1Cghwcmlvcml0eRgGIAEoCzIjLmFwb2xsby5wcmVk",
            "aWN0aW9uLk9ic3RhY2xlUHJpb3JpdHkSEQoJaXNfc3RhdGljGAcgASgIIsMC",
            "ChNQcmVkaWN0aW9uT2JzdGFjbGVzEiUKBmhlYWRlchgBIAEoCzIVLmFwb2xs",
            "by5jb21tb24uSGVhZGVyEkIKE3ByZWRpY3Rpb25fb2JzdGFjbGUYAiADKAsy",
            "JS5hcG9sbG8ucHJlZGljdGlvbi5QcmVkaWN0aW9uT2JzdGFjbGUSNwoVcGVy",
            "Y2VwdGlvbl9lcnJvcl9jb2RlGAMgASgOMhguYXBvbGxvLmNvbW1vbi5FcnJv",
            "ckNvZGUSFwoPc3RhcnRfdGltZXN0YW1wGAQgASgBEhUKDWVuZF90aW1lc3Rh",
            "bXAYBSABKAESKQoGaW50ZW50GAYgASgLMhkuYXBvbGxvLnByZWRpY3Rpb24u",
            "SW50ZW50Ei0KCHNjZW5hcmlvGAcgASgLMhsuYXBvbGxvLnByZWRpY3Rpb24u",
            "U2NlbmFyaW9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Apollo.Common.ErrorCodeReflection.Descriptor, global::Apollo.Common.HeaderReflection.Descriptor, global::Apollo.Common.PncPointReflection.Descriptor, global::Apollo.Prediction.ScenarioReflection.Descriptor, global::Apollo.Perception.PerceptionObstacleReflection.Descriptor, global::Apollo.Prediction.FeatureReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Prediction.Trajectory), global::Apollo.Prediction.Trajectory.Parser, new[]{ "Probability", "TrajectoryPoint" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Prediction.ObstacleIntent), global::Apollo.Prediction.ObstacleIntent.Parser, new[]{ "Type" }, null, new[]{ typeof(global::Apollo.Prediction.ObstacleIntent.Types.Type) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Prediction.Intent), global::Apollo.Prediction.Intent.Parser, new[]{ "Type" }, null, new[]{ typeof(global::Apollo.Prediction.Intent.Types.Type) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Prediction.PredictionObstacle), global::Apollo.Prediction.PredictionObstacle.Parser, new[]{ "PerceptionObstacle", "Timestamp", "PredictedPeriod", "Trajectory", "Intent", "Priority", "IsStatic" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Prediction.PredictionObstacles), global::Apollo.Prediction.PredictionObstacles.Parser, new[]{ "Header", "PredictionObstacle", "PerceptionErrorCode", "StartTimestamp", "EndTimestamp", "Intent", "Scenario" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Trajectory : pb::IMessage<Trajectory> {
    private static readonly pb::MessageParser<Trajectory> _parser = new pb::MessageParser<Trajectory>(() => new Trajectory());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Trajectory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Prediction.PredictionObstacleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Trajectory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Trajectory(Trajectory other) : this() {
      probability_ = other.probability_;
      trajectoryPoint_ = other.trajectoryPoint_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Trajectory Clone() {
      return new Trajectory(this);
    }

    /// <summary>Field number for the "probability" field.</summary>
    public const int ProbabilityFieldNumber = 1;
    private double probability_;
    /// <summary>
    /// probability of this trajectory
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Probability {
      get { return probability_; }
      set {
        probability_ = value;
      }
    }

    /// <summary>Field number for the "trajectory_point" field.</summary>
    public const int TrajectoryPointFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Apollo.Common.TrajectoryPoint> _repeated_trajectoryPoint_codec
        = pb::FieldCodec.ForMessage(18, global::Apollo.Common.TrajectoryPoint.Parser);
    private readonly pbc::RepeatedField<global::Apollo.Common.TrajectoryPoint> trajectoryPoint_ = new pbc::RepeatedField<global::Apollo.Common.TrajectoryPoint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Apollo.Common.TrajectoryPoint> TrajectoryPoint {
      get { return trajectoryPoint_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Trajectory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Trajectory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Probability != other.Probability) return false;
      if(!trajectoryPoint_.Equals(other.trajectoryPoint_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Probability != 0D) hash ^= Probability.GetHashCode();
      hash ^= trajectoryPoint_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Probability != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Probability);
      }
      trajectoryPoint_.WriteTo(output, _repeated_trajectoryPoint_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Probability != 0D) {
        size += 1 + 8;
      }
      size += trajectoryPoint_.CalculateSize(_repeated_trajectoryPoint_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Trajectory other) {
      if (other == null) {
        return;
      }
      if (other.Probability != 0D) {
        Probability = other.Probability;
      }
      trajectoryPoint_.Add(other.trajectoryPoint_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 9: {
            Probability = input.ReadDouble();
            break;
          }
          case 18: {
            trajectoryPoint_.AddEntriesFrom(input, _repeated_trajectoryPoint_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// estimated obstacle intent
  /// </summary>
  public sealed partial class ObstacleIntent : pb::IMessage<ObstacleIntent> {
    private static readonly pb::MessageParser<ObstacleIntent> _parser = new pb::MessageParser<ObstacleIntent>(() => new ObstacleIntent());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObstacleIntent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Prediction.PredictionObstacleReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObstacleIntent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObstacleIntent(ObstacleIntent other) : this() {
      type_ = other.type_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObstacleIntent Clone() {
      return new ObstacleIntent(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Apollo.Prediction.ObstacleIntent.Types.Type type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.ObstacleIntent.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObstacleIntent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObstacleIntent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObstacleIntent other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            type_ = (global::Apollo.Prediction.ObstacleIntent.Types.Type) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ObstacleIntent message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("STOP")] Stop = 1,
        [pbr::OriginalName("STATIONARY")] Stationary = 2,
        [pbr::OriginalName("MOVING")] Moving = 3,
        [pbr::OriginalName("CHANGE_LANE")] ChangeLane = 4,
        [pbr::OriginalName("LOW_ACCELERATION")] LowAcceleration = 5,
        [pbr::OriginalName("HIGH_ACCELERATION")] HighAcceleration = 6,
        [pbr::OriginalName("LOW_DECELERATION")] LowDeceleration = 7,
        [pbr::OriginalName("HIGH_DECELERATION")] HighDeceleration = 8,
      }

    }
    #endregion

  }

  /// <summary>
  /// self driving car intent
  /// </summary>
  public sealed partial class Intent : pb::IMessage<Intent> {
    private static readonly pb::MessageParser<Intent> _parser = new pb::MessageParser<Intent>(() => new Intent());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Intent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Prediction.PredictionObstacleReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Intent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Intent(Intent other) : this() {
      type_ = other.type_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Intent Clone() {
      return new Intent(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Apollo.Prediction.Intent.Types.Type type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.Intent.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Intent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Intent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Intent other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            type_ = (global::Apollo.Prediction.Intent.Types.Type) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Intent message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("STOP")] Stop = 1,
        [pbr::OriginalName("CRUISE")] Cruise = 2,
        [pbr::OriginalName("CHANGE_LANE")] ChangeLane = 3,
      }

    }
    #endregion

  }

  public sealed partial class PredictionObstacle : pb::IMessage<PredictionObstacle> {
    private static readonly pb::MessageParser<PredictionObstacle> _parser = new pb::MessageParser<PredictionObstacle>(() => new PredictionObstacle());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PredictionObstacle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Prediction.PredictionObstacleReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionObstacle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionObstacle(PredictionObstacle other) : this() {
      PerceptionObstacle = other.perceptionObstacle_ != null ? other.PerceptionObstacle.Clone() : null;
      timestamp_ = other.timestamp_;
      predictedPeriod_ = other.predictedPeriod_;
      trajectory_ = other.trajectory_.Clone();
      Intent = other.intent_ != null ? other.Intent.Clone() : null;
      Priority = other.priority_ != null ? other.Priority.Clone() : null;
      isStatic_ = other.isStatic_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionObstacle Clone() {
      return new PredictionObstacle(this);
    }

    /// <summary>Field number for the "perception_obstacle" field.</summary>
    public const int PerceptionObstacleFieldNumber = 1;
    private global::Apollo.Perception.PerceptionObstacle perceptionObstacle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Perception.PerceptionObstacle PerceptionObstacle {
      get { return perceptionObstacle_; }
      set {
        perceptionObstacle_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private double timestamp_;
    /// <summary>
    /// GPS time in seconds
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "predicted_period" field.</summary>
    public const int PredictedPeriodFieldNumber = 3;
    private double predictedPeriod_;
    /// <summary>
    /// the length of the time for this prediction (e.g. 10s)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double PredictedPeriod {
      get { return predictedPeriod_; }
      set {
        predictedPeriod_ = value;
      }
    }

    /// <summary>Field number for the "trajectory" field.</summary>
    public const int TrajectoryFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Apollo.Prediction.Trajectory> _repeated_trajectory_codec
        = pb::FieldCodec.ForMessage(34, global::Apollo.Prediction.Trajectory.Parser);
    private readonly pbc::RepeatedField<global::Apollo.Prediction.Trajectory> trajectory_ = new pbc::RepeatedField<global::Apollo.Prediction.Trajectory>();
    /// <summary>
    /// can have multiple trajectories per obstacle
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Apollo.Prediction.Trajectory> Trajectory {
      get { return trajectory_; }
    }

    /// <summary>Field number for the "intent" field.</summary>
    public const int IntentFieldNumber = 5;
    private global::Apollo.Prediction.ObstacleIntent intent_;
    /// <summary>
    /// estimated obstacle intent
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.ObstacleIntent Intent {
      get { return intent_; }
      set {
        intent_ = value;
      }
    }

    /// <summary>Field number for the "priority" field.</summary>
    public const int PriorityFieldNumber = 6;
    private global::Apollo.Prediction.ObstaclePriority priority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.ObstaclePriority Priority {
      get { return priority_; }
      set {
        priority_ = value;
      }
    }

    /// <summary>Field number for the "is_static" field.</summary>
    public const int IsStaticFieldNumber = 7;
    private bool isStatic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsStatic {
      get { return isStatic_; }
      set {
        isStatic_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PredictionObstacle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PredictionObstacle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PerceptionObstacle, other.PerceptionObstacle)) return false;
      if (Timestamp != other.Timestamp) return false;
      if (PredictedPeriod != other.PredictedPeriod) return false;
      if(!trajectory_.Equals(other.trajectory_)) return false;
      if (!object.Equals(Intent, other.Intent)) return false;
      if (!object.Equals(Priority, other.Priority)) return false;
      if (IsStatic != other.IsStatic) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (perceptionObstacle_ != null) hash ^= PerceptionObstacle.GetHashCode();
      if (Timestamp != 0D) hash ^= Timestamp.GetHashCode();
      if (PredictedPeriod != 0D) hash ^= PredictedPeriod.GetHashCode();
      hash ^= trajectory_.GetHashCode();
      if (intent_ != null) hash ^= Intent.GetHashCode();
      if (priority_ != null) hash ^= Priority.GetHashCode();
      if (IsStatic != false) hash ^= IsStatic.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (perceptionObstacle_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PerceptionObstacle);
      }
      if (Timestamp != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Timestamp);
      }
      if (PredictedPeriod != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(PredictedPeriod);
      }
      trajectory_.WriteTo(output, _repeated_trajectory_codec);
      if (intent_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Intent);
      }
      if (priority_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Priority);
      }
      if (IsStatic != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsStatic);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (perceptionObstacle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PerceptionObstacle);
      }
      if (Timestamp != 0D) {
        size += 1 + 8;
      }
      if (PredictedPeriod != 0D) {
        size += 1 + 8;
      }
      size += trajectory_.CalculateSize(_repeated_trajectory_codec);
      if (intent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Intent);
      }
      if (priority_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Priority);
      }
      if (IsStatic != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PredictionObstacle other) {
      if (other == null) {
        return;
      }
      if (other.perceptionObstacle_ != null) {
        if (perceptionObstacle_ == null) {
          perceptionObstacle_ = new global::Apollo.Perception.PerceptionObstacle();
        }
        PerceptionObstacle.MergeFrom(other.PerceptionObstacle);
      }
      if (other.Timestamp != 0D) {
        Timestamp = other.Timestamp;
      }
      if (other.PredictedPeriod != 0D) {
        PredictedPeriod = other.PredictedPeriod;
      }
      trajectory_.Add(other.trajectory_);
      if (other.intent_ != null) {
        if (intent_ == null) {
          intent_ = new global::Apollo.Prediction.ObstacleIntent();
        }
        Intent.MergeFrom(other.Intent);
      }
      if (other.priority_ != null) {
        if (priority_ == null) {
          priority_ = new global::Apollo.Prediction.ObstaclePriority();
        }
        Priority.MergeFrom(other.Priority);
      }
      if (other.IsStatic != false) {
        IsStatic = other.IsStatic;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (perceptionObstacle_ == null) {
              perceptionObstacle_ = new global::Apollo.Perception.PerceptionObstacle();
            }
            input.ReadMessage(perceptionObstacle_);
            break;
          }
          case 17: {
            Timestamp = input.ReadDouble();
            break;
          }
          case 25: {
            PredictedPeriod = input.ReadDouble();
            break;
          }
          case 34: {
            trajectory_.AddEntriesFrom(input, _repeated_trajectory_codec);
            break;
          }
          case 42: {
            if (intent_ == null) {
              intent_ = new global::Apollo.Prediction.ObstacleIntent();
            }
            input.ReadMessage(intent_);
            break;
          }
          case 50: {
            if (priority_ == null) {
              priority_ = new global::Apollo.Prediction.ObstaclePriority();
            }
            input.ReadMessage(priority_);
            break;
          }
          case 56: {
            IsStatic = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PredictionObstacles : pb::IMessage<PredictionObstacles> {
    private static readonly pb::MessageParser<PredictionObstacles> _parser = new pb::MessageParser<PredictionObstacles>(() => new PredictionObstacles());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PredictionObstacles> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Prediction.PredictionObstacleReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionObstacles() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionObstacles(PredictionObstacles other) : this() {
      Header = other.header_ != null ? other.Header.Clone() : null;
      predictionObstacle_ = other.predictionObstacle_.Clone();
      perceptionErrorCode_ = other.perceptionErrorCode_;
      startTimestamp_ = other.startTimestamp_;
      endTimestamp_ = other.endTimestamp_;
      Intent = other.intent_ != null ? other.Intent.Clone() : null;
      Scenario = other.scenario_ != null ? other.Scenario.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionObstacles Clone() {
      return new PredictionObstacles(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Apollo.Common.Header header_;
    /// <summary>
    /// timestamp is included in header
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Common.Header Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "prediction_obstacle" field.</summary>
    public const int PredictionObstacleFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Apollo.Prediction.PredictionObstacle> _repeated_predictionObstacle_codec
        = pb::FieldCodec.ForMessage(18, global::Apollo.Prediction.PredictionObstacle.Parser);
    private readonly pbc::RepeatedField<global::Apollo.Prediction.PredictionObstacle> predictionObstacle_ = new pbc::RepeatedField<global::Apollo.Prediction.PredictionObstacle>();
    /// <summary>
    /// make prediction for multiple obstacles
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Apollo.Prediction.PredictionObstacle> PredictionObstacle {
      get { return predictionObstacle_; }
    }

    /// <summary>Field number for the "perception_error_code" field.</summary>
    public const int PerceptionErrorCodeFieldNumber = 3;
    private global::Apollo.Common.ErrorCode perceptionErrorCode_ = 0;
    /// <summary>
    /// perception error code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Common.ErrorCode PerceptionErrorCode {
      get { return perceptionErrorCode_; }
      set {
        perceptionErrorCode_ = value;
      }
    }

    /// <summary>Field number for the "start_timestamp" field.</summary>
    public const int StartTimestampFieldNumber = 4;
    private double startTimestamp_;
    /// <summary>
    /// start timestamp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double StartTimestamp {
      get { return startTimestamp_; }
      set {
        startTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "end_timestamp" field.</summary>
    public const int EndTimestampFieldNumber = 5;
    private double endTimestamp_;
    /// <summary>
    /// end timestamp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double EndTimestamp {
      get { return endTimestamp_; }
      set {
        endTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "intent" field.</summary>
    public const int IntentFieldNumber = 6;
    private global::Apollo.Prediction.Intent intent_;
    /// <summary>
    /// self driving car intent
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.Intent Intent {
      get { return intent_; }
      set {
        intent_ = value;
      }
    }

    /// <summary>Field number for the "scenario" field.</summary>
    public const int ScenarioFieldNumber = 7;
    private global::Apollo.Prediction.Scenario scenario_;
    /// <summary>
    /// Scenario
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.Scenario Scenario {
      get { return scenario_; }
      set {
        scenario_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PredictionObstacles);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PredictionObstacles other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if(!predictionObstacle_.Equals(other.predictionObstacle_)) return false;
      if (PerceptionErrorCode != other.PerceptionErrorCode) return false;
      if (StartTimestamp != other.StartTimestamp) return false;
      if (EndTimestamp != other.EndTimestamp) return false;
      if (!object.Equals(Intent, other.Intent)) return false;
      if (!object.Equals(Scenario, other.Scenario)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      hash ^= predictionObstacle_.GetHashCode();
      if (PerceptionErrorCode != 0) hash ^= PerceptionErrorCode.GetHashCode();
      if (StartTimestamp != 0D) hash ^= StartTimestamp.GetHashCode();
      if (EndTimestamp != 0D) hash ^= EndTimestamp.GetHashCode();
      if (intent_ != null) hash ^= Intent.GetHashCode();
      if (scenario_ != null) hash ^= Scenario.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      predictionObstacle_.WriteTo(output, _repeated_predictionObstacle_codec);
      if (PerceptionErrorCode != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) PerceptionErrorCode);
      }
      if (StartTimestamp != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(StartTimestamp);
      }
      if (EndTimestamp != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(EndTimestamp);
      }
      if (intent_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Intent);
      }
      if (scenario_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Scenario);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      size += predictionObstacle_.CalculateSize(_repeated_predictionObstacle_codec);
      if (PerceptionErrorCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PerceptionErrorCode);
      }
      if (StartTimestamp != 0D) {
        size += 1 + 8;
      }
      if (EndTimestamp != 0D) {
        size += 1 + 8;
      }
      if (intent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Intent);
      }
      if (scenario_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scenario);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PredictionObstacles other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          header_ = new global::Apollo.Common.Header();
        }
        Header.MergeFrom(other.Header);
      }
      predictionObstacle_.Add(other.predictionObstacle_);
      if (other.PerceptionErrorCode != 0) {
        PerceptionErrorCode = other.PerceptionErrorCode;
      }
      if (other.StartTimestamp != 0D) {
        StartTimestamp = other.StartTimestamp;
      }
      if (other.EndTimestamp != 0D) {
        EndTimestamp = other.EndTimestamp;
      }
      if (other.intent_ != null) {
        if (intent_ == null) {
          intent_ = new global::Apollo.Prediction.Intent();
        }
        Intent.MergeFrom(other.Intent);
      }
      if (other.scenario_ != null) {
        if (scenario_ == null) {
          scenario_ = new global::Apollo.Prediction.Scenario();
        }
        Scenario.MergeFrom(other.Scenario);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (header_ == null) {
              header_ = new global::Apollo.Common.Header();
            }
            input.ReadMessage(header_);
            break;
          }
          case 18: {
            predictionObstacle_.AddEntriesFrom(input, _repeated_predictionObstacle_codec);
            break;
          }
          case 24: {
            perceptionErrorCode_ = (global::Apollo.Common.ErrorCode) input.ReadEnum();
            break;
          }
          case 33: {
            StartTimestamp = input.ReadDouble();
            break;
          }
          case 41: {
            EndTimestamp = input.ReadDouble();
            break;
          }
          case 50: {
            if (intent_ == null) {
              intent_ = new global::Apollo.Prediction.Intent();
            }
            input.ReadMessage(intent_);
            break;
          }
          case 58: {
            if (scenario_ == null) {
              scenario_ = new global::Apollo.Prediction.Scenario();
            }
            input.ReadMessage(scenario_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
