// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/prediction/proto/offline_features.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Apollo.Prediction {

  /// <summary>Holder for reflection information generated from modules/prediction/proto/offline_features.proto</summary>
  public static partial class OfflineFeaturesReflection {

    #region Descriptor
    /// <summary>File descriptor for modules/prediction/proto/offline_features.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OfflineFeaturesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci9tb2R1bGVzL3ByZWRpY3Rpb24vcHJvdG8vb2ZmbGluZV9mZWF0dXJlcy5w",
            "cm90bxIRYXBvbGxvLnByZWRpY3Rpb24aJm1vZHVsZXMvcHJlZGljdGlvbi9w",
            "cm90by9mZWF0dXJlLnByb3RvGjJtb2R1bGVzL3ByZWRpY3Rpb24vcHJvdG8v",
            "cHJlZGljdGlvbl9vYnN0YWNsZS5wcm90byI3CghGZWF0dXJlcxIrCgdmZWF0",
            "dXJlGAEgAygLMhouYXBvbGxvLnByZWRpY3Rpb24uRmVhdHVyZSJdCgtDTk5G",
            "ZWF0dXJlcxIMCgRkaW0wGAEgASgNEgwKBGRpbTEYAiABKA0SDAoEZGltMhgD",
            "IAEoDRIVCg1mZWF0dXJlX3ZhbHVlGAQgAygBEg0KBWxhYmVsGAUgASgFInEK",
            "D0RhdGFGb3JMZWFybmluZxIQCghjYXRlZ29yeRgFIAEoCRIKCgJpZBgBIAEo",
            "BRIRCgl0aW1lc3RhbXAYAiABKAESHQoVZmVhdHVyZXNfZm9yX2xlYXJuaW5n",
            "GAMgAygBEg4KBmxhYmVscxgEIAMoASJUChNMaXN0RGF0YUZvckxlYXJuaW5n",
            "Ej0KEWRhdGFfZm9yX2xlYXJuaW5nGAEgAygLMiIuYXBvbGxvLnByZWRpY3Rp",
            "b24uRGF0YUZvckxlYXJuaW5nImQKEFByZWRpY3Rpb25SZXN1bHQSCgoCaWQY",
            "ASABKAUSEQoJdGltZXN0YW1wGAIgASgBEjEKCnRyYWplY3RvcnkYAyADKAsy",
            "HS5hcG9sbG8ucHJlZGljdGlvbi5UcmFqZWN0b3J5IlYKFExpc3RQcmVkaWN0",
            "aW9uUmVzdWx0Ej4KEXByZWRpY3Rpb25fcmVzdWx0GAEgAygLMiMuYXBvbGxv",
            "LnByZWRpY3Rpb24uUHJlZGljdGlvblJlc3VsdGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Apollo.Prediction.FeatureReflection.Descriptor, global::Apollo.Prediction.PredictionObstacleReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Prediction.Features), global::Apollo.Prediction.Features.Parser, new[]{ "Feature" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Prediction.CNNFeatures), global::Apollo.Prediction.CNNFeatures.Parser, new[]{ "Dim0", "Dim1", "Dim2", "FeatureValue", "Label" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Prediction.DataForLearning), global::Apollo.Prediction.DataForLearning.Parser, new[]{ "Category", "Id", "Timestamp", "FeaturesForLearning", "Labels" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Prediction.ListDataForLearning), global::Apollo.Prediction.ListDataForLearning.Parser, new[]{ "DataForLearning" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Prediction.PredictionResult), global::Apollo.Prediction.PredictionResult.Parser, new[]{ "Id", "Timestamp", "Trajectory" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Prediction.ListPredictionResult), global::Apollo.Prediction.ListPredictionResult.Parser, new[]{ "PredictionResult" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Features : pb::IMessage<Features> {
    private static readonly pb::MessageParser<Features> _parser = new pb::MessageParser<Features>(() => new Features());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Features> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Prediction.OfflineFeaturesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Features() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Features(Features other) : this() {
      feature_ = other.feature_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Features Clone() {
      return new Features(this);
    }

    /// <summary>Field number for the "feature" field.</summary>
    public const int FeatureFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Apollo.Prediction.Feature> _repeated_feature_codec
        = pb::FieldCodec.ForMessage(10, global::Apollo.Prediction.Feature.Parser);
    private readonly pbc::RepeatedField<global::Apollo.Prediction.Feature> feature_ = new pbc::RepeatedField<global::Apollo.Prediction.Feature>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Apollo.Prediction.Feature> Feature {
      get { return feature_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Features);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Features other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!feature_.Equals(other.feature_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= feature_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      feature_.WriteTo(output, _repeated_feature_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += feature_.CalculateSize(_repeated_feature_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Features other) {
      if (other == null) {
        return;
      }
      feature_.Add(other.feature_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            feature_.AddEntriesFrom(input, _repeated_feature_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CNNFeatures : pb::IMessage<CNNFeatures> {
    private static readonly pb::MessageParser<CNNFeatures> _parser = new pb::MessageParser<CNNFeatures>(() => new CNNFeatures());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CNNFeatures> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Prediction.OfflineFeaturesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CNNFeatures() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CNNFeatures(CNNFeatures other) : this() {
      dim0_ = other.dim0_;
      dim1_ = other.dim1_;
      dim2_ = other.dim2_;
      featureValue_ = other.featureValue_.Clone();
      label_ = other.label_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CNNFeatures Clone() {
      return new CNNFeatures(this);
    }

    /// <summary>Field number for the "dim0" field.</summary>
    public const int Dim0FieldNumber = 1;
    private uint dim0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Dim0 {
      get { return dim0_; }
      set {
        dim0_ = value;
      }
    }

    /// <summary>Field number for the "dim1" field.</summary>
    public const int Dim1FieldNumber = 2;
    private uint dim1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Dim1 {
      get { return dim1_; }
      set {
        dim1_ = value;
      }
    }

    /// <summary>Field number for the "dim2" field.</summary>
    public const int Dim2FieldNumber = 3;
    private uint dim2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Dim2 {
      get { return dim2_; }
      set {
        dim2_ = value;
      }
    }

    /// <summary>Field number for the "feature_value" field.</summary>
    public const int FeatureValueFieldNumber = 4;
    private static readonly pb::FieldCodec<double> _repeated_featureValue_codec
        = pb::FieldCodec.ForDouble(34);
    private readonly pbc::RepeatedField<double> featureValue_ = new pbc::RepeatedField<double>();
    /// <summary>
    /// The arrange of feature values are in the order of dim0, dim1, dim2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<double> FeatureValue {
      get { return featureValue_; }
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 5;
    private int label_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Label {
      get { return label_; }
      set {
        label_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CNNFeatures);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CNNFeatures other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Dim0 != other.Dim0) return false;
      if (Dim1 != other.Dim1) return false;
      if (Dim2 != other.Dim2) return false;
      if(!featureValue_.Equals(other.featureValue_)) return false;
      if (Label != other.Label) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Dim0 != 0) hash ^= Dim0.GetHashCode();
      if (Dim1 != 0) hash ^= Dim1.GetHashCode();
      if (Dim2 != 0) hash ^= Dim2.GetHashCode();
      hash ^= featureValue_.GetHashCode();
      if (Label != 0) hash ^= Label.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Dim0 != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Dim0);
      }
      if (Dim1 != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Dim1);
      }
      if (Dim2 != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Dim2);
      }
      featureValue_.WriteTo(output, _repeated_featureValue_codec);
      if (Label != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Label);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Dim0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Dim0);
      }
      if (Dim1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Dim1);
      }
      if (Dim2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Dim2);
      }
      size += featureValue_.CalculateSize(_repeated_featureValue_codec);
      if (Label != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Label);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CNNFeatures other) {
      if (other == null) {
        return;
      }
      if (other.Dim0 != 0) {
        Dim0 = other.Dim0;
      }
      if (other.Dim1 != 0) {
        Dim1 = other.Dim1;
      }
      if (other.Dim2 != 0) {
        Dim2 = other.Dim2;
      }
      featureValue_.Add(other.featureValue_);
      if (other.Label != 0) {
        Label = other.Label;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Dim0 = input.ReadUInt32();
            break;
          }
          case 16: {
            Dim1 = input.ReadUInt32();
            break;
          }
          case 24: {
            Dim2 = input.ReadUInt32();
            break;
          }
          case 34:
          case 33: {
            featureValue_.AddEntriesFrom(input, _repeated_featureValue_codec);
            break;
          }
          case 40: {
            Label = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DataForLearning : pb::IMessage<DataForLearning> {
    private static readonly pb::MessageParser<DataForLearning> _parser = new pb::MessageParser<DataForLearning>(() => new DataForLearning());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataForLearning> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Prediction.OfflineFeaturesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataForLearning() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataForLearning(DataForLearning other) : this() {
      category_ = other.category_;
      id_ = other.id_;
      timestamp_ = other.timestamp_;
      featuresForLearning_ = other.featuresForLearning_.Clone();
      labels_ = other.labels_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataForLearning Clone() {
      return new DataForLearning(this);
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 5;
    private string category_ = "";
    /// <summary>
    /// The task category of the data for learning
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Category {
      get { return category_; }
      set {
        category_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// The info. needed for identifying a unique data point:
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private double timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "features_for_learning" field.</summary>
    public const int FeaturesForLearningFieldNumber = 3;
    private static readonly pb::FieldCodec<double> _repeated_featuresForLearning_codec
        = pb::FieldCodec.ForDouble(26);
    private readonly pbc::RepeatedField<double> featuresForLearning_ = new pbc::RepeatedField<double>();
    /// <summary>
    /// The features for learning algorithms:
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<double> FeaturesForLearning {
      get { return featuresForLearning_; }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 4;
    private static readonly pb::FieldCodec<double> _repeated_labels_codec
        = pb::FieldCodec.ForDouble(34);
    private readonly pbc::RepeatedField<double> labels_ = new pbc::RepeatedField<double>();
    /// <summary>
    /// The ground-truth labels:
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<double> Labels {
      get { return labels_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataForLearning);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataForLearning other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Category != other.Category) return false;
      if (Id != other.Id) return false;
      if (Timestamp != other.Timestamp) return false;
      if(!featuresForLearning_.Equals(other.featuresForLearning_)) return false;
      if(!labels_.Equals(other.labels_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Category.Length != 0) hash ^= Category.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Timestamp != 0D) hash ^= Timestamp.GetHashCode();
      hash ^= featuresForLearning_.GetHashCode();
      hash ^= labels_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Timestamp != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Timestamp);
      }
      featuresForLearning_.WriteTo(output, _repeated_featuresForLearning_codec);
      labels_.WriteTo(output, _repeated_labels_codec);
      if (Category.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Category);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Category.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Category);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Timestamp != 0D) {
        size += 1 + 8;
      }
      size += featuresForLearning_.CalculateSize(_repeated_featuresForLearning_codec);
      size += labels_.CalculateSize(_repeated_labels_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataForLearning other) {
      if (other == null) {
        return;
      }
      if (other.Category.Length != 0) {
        Category = other.Category;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Timestamp != 0D) {
        Timestamp = other.Timestamp;
      }
      featuresForLearning_.Add(other.featuresForLearning_);
      labels_.Add(other.labels_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 17: {
            Timestamp = input.ReadDouble();
            break;
          }
          case 26:
          case 25: {
            featuresForLearning_.AddEntriesFrom(input, _repeated_featuresForLearning_codec);
            break;
          }
          case 34:
          case 33: {
            labels_.AddEntriesFrom(input, _repeated_labels_codec);
            break;
          }
          case 42: {
            Category = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListDataForLearning : pb::IMessage<ListDataForLearning> {
    private static readonly pb::MessageParser<ListDataForLearning> _parser = new pb::MessageParser<ListDataForLearning>(() => new ListDataForLearning());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListDataForLearning> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Prediction.OfflineFeaturesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDataForLearning() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDataForLearning(ListDataForLearning other) : this() {
      dataForLearning_ = other.dataForLearning_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDataForLearning Clone() {
      return new ListDataForLearning(this);
    }

    /// <summary>Field number for the "data_for_learning" field.</summary>
    public const int DataForLearningFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Apollo.Prediction.DataForLearning> _repeated_dataForLearning_codec
        = pb::FieldCodec.ForMessage(10, global::Apollo.Prediction.DataForLearning.Parser);
    private readonly pbc::RepeatedField<global::Apollo.Prediction.DataForLearning> dataForLearning_ = new pbc::RepeatedField<global::Apollo.Prediction.DataForLearning>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Apollo.Prediction.DataForLearning> DataForLearning {
      get { return dataForLearning_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListDataForLearning);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListDataForLearning other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!dataForLearning_.Equals(other.dataForLearning_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= dataForLearning_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      dataForLearning_.WriteTo(output, _repeated_dataForLearning_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += dataForLearning_.CalculateSize(_repeated_dataForLearning_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListDataForLearning other) {
      if (other == null) {
        return;
      }
      dataForLearning_.Add(other.dataForLearning_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            dataForLearning_.AddEntriesFrom(input, _repeated_dataForLearning_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PredictionResult : pb::IMessage<PredictionResult> {
    private static readonly pb::MessageParser<PredictionResult> _parser = new pb::MessageParser<PredictionResult>(() => new PredictionResult());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PredictionResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Prediction.OfflineFeaturesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionResult(PredictionResult other) : this() {
      id_ = other.id_;
      timestamp_ = other.timestamp_;
      trajectory_ = other.trajectory_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionResult Clone() {
      return new PredictionResult(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private double timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "trajectory" field.</summary>
    public const int TrajectoryFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Apollo.Prediction.Trajectory> _repeated_trajectory_codec
        = pb::FieldCodec.ForMessage(26, global::Apollo.Prediction.Trajectory.Parser);
    private readonly pbc::RepeatedField<global::Apollo.Prediction.Trajectory> trajectory_ = new pbc::RepeatedField<global::Apollo.Prediction.Trajectory>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Apollo.Prediction.Trajectory> Trajectory {
      get { return trajectory_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PredictionResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PredictionResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Timestamp != other.Timestamp) return false;
      if(!trajectory_.Equals(other.trajectory_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Timestamp != 0D) hash ^= Timestamp.GetHashCode();
      hash ^= trajectory_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Timestamp != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Timestamp);
      }
      trajectory_.WriteTo(output, _repeated_trajectory_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Timestamp != 0D) {
        size += 1 + 8;
      }
      size += trajectory_.CalculateSize(_repeated_trajectory_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PredictionResult other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Timestamp != 0D) {
        Timestamp = other.Timestamp;
      }
      trajectory_.Add(other.trajectory_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 17: {
            Timestamp = input.ReadDouble();
            break;
          }
          case 26: {
            trajectory_.AddEntriesFrom(input, _repeated_trajectory_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListPredictionResult : pb::IMessage<ListPredictionResult> {
    private static readonly pb::MessageParser<ListPredictionResult> _parser = new pb::MessageParser<ListPredictionResult>(() => new ListPredictionResult());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListPredictionResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Prediction.OfflineFeaturesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPredictionResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPredictionResult(ListPredictionResult other) : this() {
      predictionResult_ = other.predictionResult_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPredictionResult Clone() {
      return new ListPredictionResult(this);
    }

    /// <summary>Field number for the "prediction_result" field.</summary>
    public const int PredictionResultFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Apollo.Prediction.PredictionResult> _repeated_predictionResult_codec
        = pb::FieldCodec.ForMessage(10, global::Apollo.Prediction.PredictionResult.Parser);
    private readonly pbc::RepeatedField<global::Apollo.Prediction.PredictionResult> predictionResult_ = new pbc::RepeatedField<global::Apollo.Prediction.PredictionResult>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Apollo.Prediction.PredictionResult> PredictionResult {
      get { return predictionResult_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListPredictionResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListPredictionResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!predictionResult_.Equals(other.predictionResult_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= predictionResult_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      predictionResult_.WriteTo(output, _repeated_predictionResult_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += predictionResult_.CalculateSize(_repeated_predictionResult_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListPredictionResult other) {
      if (other == null) {
        return;
      }
      predictionResult_.Add(other.predictionResult_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            predictionResult_.AddEntriesFrom(input, _repeated_predictionResult_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
