// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/prediction/proto/network_model.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Apollo.Prediction {

  /// <summary>Holder for reflection information generated from modules/prediction/proto/network_model.proto</summary>
  public static partial class NetworkModelReflection {

    #region Descriptor
    /// <summary>File descriptor for modules/prediction/proto/network_model.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NetworkModelReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cixtb2R1bGVzL3ByZWRpY3Rpb24vcHJvdG8vbmV0d29ya19tb2RlbC5wcm90",
            "bxIRYXBvbGxvLnByZWRpY3Rpb24aLW1vZHVsZXMvcHJlZGljdGlvbi9wcm90",
            "by9uZXR3b3JrX2xheWVycy5wcm90byJxChJWZXJpZmljYXRpb25TYW1wbGUS",
            "NAoIZmVhdHVyZXMYASADKAsyIi5hcG9sbG8ucHJlZGljdGlvbi5UZW5zb3JQ",
            "YXJhbWV0ZXISEwoLcHJvYmFiaWxpdHkYAiABKAISEAoIZGlzdGFuY2UYAyAB",
            "KAIiQgoLUGVyZm9ybWFuY2USEAoIYWNjdXJhY3kYASADKAISDgoGcmVjYWxs",
            "GAIgAygCEhEKCXByZWNpc2lvbhgDIAMoAiLqAQoMTmV0UGFyYW1ldGVyEgoK",
            "AmlkGAEgASgFEgwKBG5hbWUYAiABKAkSMQoGbGF5ZXJzGAMgAygLMiEuYXBv",
            "bGxvLnByZWRpY3Rpb24uTGF5ZXJQYXJhbWV0ZXISQwoUdmVyaWZpY2F0aW9u",
            "X3NhbXBsZXMYBCADKAsyJS5hcG9sbG8ucHJlZGljdGlvbi5WZXJpZmljYXRp",
            "b25TYW1wbGUSMwoLcGVyZm9ybWFuY2UYBSABKAsyHi5hcG9sbG8ucHJlZGlj",
            "dGlvbi5QZXJmb3JtYW5jZRITCgt0aW1lX2R1bXBlZBgGIAEoAmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Apollo.Prediction.NetworkLayersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Prediction.VerificationSample), global::Apollo.Prediction.VerificationSample.Parser, new[]{ "Features", "Probability", "Distance" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Prediction.Performance), global::Apollo.Prediction.Performance.Parser, new[]{ "Accuracy", "Recall", "Precision" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Prediction.NetParameter), global::Apollo.Prediction.NetParameter.Parser, new[]{ "Id", "Name", "Layers", "VerificationSamples", "Performance", "TimeDumped" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class VerificationSample : pb::IMessage<VerificationSample> {
    private static readonly pb::MessageParser<VerificationSample> _parser = new pb::MessageParser<VerificationSample>(() => new VerificationSample());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VerificationSample> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Prediction.NetworkModelReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerificationSample() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerificationSample(VerificationSample other) : this() {
      features_ = other.features_.Clone();
      probability_ = other.probability_;
      distance_ = other.distance_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerificationSample Clone() {
      return new VerificationSample(this);
    }

    /// <summary>Field number for the "features" field.</summary>
    public const int FeaturesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Apollo.Prediction.TensorParameter> _repeated_features_codec
        = pb::FieldCodec.ForMessage(10, global::Apollo.Prediction.TensorParameter.Parser);
    private readonly pbc::RepeatedField<global::Apollo.Prediction.TensorParameter> features_ = new pbc::RepeatedField<global::Apollo.Prediction.TensorParameter>();
    /// <summary>
    /// data used to vertify the network model
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Apollo.Prediction.TensorParameter> Features {
      get { return features_; }
    }

    /// <summary>Field number for the "probability" field.</summary>
    public const int ProbabilityFieldNumber = 2;
    private float probability_;
    /// <summary>
    /// ouput probability of the network
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Probability {
      get { return probability_; }
      set {
        probability_ = value;
      }
    }

    /// <summary>Field number for the "distance" field.</summary>
    public const int DistanceFieldNumber = 3;
    private float distance_;
    /// <summary>
    /// output acceleration of the network
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Distance {
      get { return distance_; }
      set {
        distance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VerificationSample);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VerificationSample other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!features_.Equals(other.features_)) return false;
      if (Probability != other.Probability) return false;
      if (Distance != other.Distance) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= features_.GetHashCode();
      if (Probability != 0F) hash ^= Probability.GetHashCode();
      if (Distance != 0F) hash ^= Distance.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      features_.WriteTo(output, _repeated_features_codec);
      if (Probability != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Probability);
      }
      if (Distance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Distance);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += features_.CalculateSize(_repeated_features_codec);
      if (Probability != 0F) {
        size += 1 + 4;
      }
      if (Distance != 0F) {
        size += 1 + 4;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VerificationSample other) {
      if (other == null) {
        return;
      }
      features_.Add(other.features_);
      if (other.Probability != 0F) {
        Probability = other.Probability;
      }
      if (other.Distance != 0F) {
        Distance = other.Distance;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            features_.AddEntriesFrom(input, _repeated_features_codec);
            break;
          }
          case 21: {
            Probability = input.ReadFloat();
            break;
          }
          case 29: {
            Distance = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Performance : pb::IMessage<Performance> {
    private static readonly pb::MessageParser<Performance> _parser = new pb::MessageParser<Performance>(() => new Performance());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Performance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Prediction.NetworkModelReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Performance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Performance(Performance other) : this() {
      accuracy_ = other.accuracy_.Clone();
      recall_ = other.recall_.Clone();
      precision_ = other.precision_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Performance Clone() {
      return new Performance(this);
    }

    /// <summary>Field number for the "accuracy" field.</summary>
    public const int AccuracyFieldNumber = 1;
    private static readonly pb::FieldCodec<float> _repeated_accuracy_codec
        = pb::FieldCodec.ForFloat(10);
    private readonly pbc::RepeatedField<float> accuracy_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> Accuracy {
      get { return accuracy_; }
    }

    /// <summary>Field number for the "recall" field.</summary>
    public const int RecallFieldNumber = 2;
    private static readonly pb::FieldCodec<float> _repeated_recall_codec
        = pb::FieldCodec.ForFloat(18);
    private readonly pbc::RepeatedField<float> recall_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> Recall {
      get { return recall_; }
    }

    /// <summary>Field number for the "precision" field.</summary>
    public const int PrecisionFieldNumber = 3;
    private static readonly pb::FieldCodec<float> _repeated_precision_codec
        = pb::FieldCodec.ForFloat(26);
    private readonly pbc::RepeatedField<float> precision_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> Precision {
      get { return precision_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Performance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Performance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!accuracy_.Equals(other.accuracy_)) return false;
      if(!recall_.Equals(other.recall_)) return false;
      if(!precision_.Equals(other.precision_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= accuracy_.GetHashCode();
      hash ^= recall_.GetHashCode();
      hash ^= precision_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      accuracy_.WriteTo(output, _repeated_accuracy_codec);
      recall_.WriteTo(output, _repeated_recall_codec);
      precision_.WriteTo(output, _repeated_precision_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += accuracy_.CalculateSize(_repeated_accuracy_codec);
      size += recall_.CalculateSize(_repeated_recall_codec);
      size += precision_.CalculateSize(_repeated_precision_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Performance other) {
      if (other == null) {
        return;
      }
      accuracy_.Add(other.accuracy_);
      recall_.Add(other.recall_);
      precision_.Add(other.precision_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 13: {
            accuracy_.AddEntriesFrom(input, _repeated_accuracy_codec);
            break;
          }
          case 18:
          case 21: {
            recall_.AddEntriesFrom(input, _repeated_recall_codec);
            break;
          }
          case 26:
          case 29: {
            precision_.AddEntriesFrom(input, _repeated_precision_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class NetParameter : pb::IMessage<NetParameter> {
    private static readonly pb::MessageParser<NetParameter> _parser = new pb::MessageParser<NetParameter>(() => new NetParameter());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetParameter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Prediction.NetworkModelReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetParameter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetParameter(NetParameter other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      layers_ = other.layers_.Clone();
      verificationSamples_ = other.verificationSamples_.Clone();
      Performance = other.performance_ != null ? other.Performance.Clone() : null;
      timeDumped_ = other.timeDumped_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetParameter Clone() {
      return new NetParameter(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "layers" field.</summary>
    public const int LayersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Apollo.Prediction.LayerParameter> _repeated_layers_codec
        = pb::FieldCodec.ForMessage(26, global::Apollo.Prediction.LayerParameter.Parser);
    private readonly pbc::RepeatedField<global::Apollo.Prediction.LayerParameter> layers_ = new pbc::RepeatedField<global::Apollo.Prediction.LayerParameter>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Apollo.Prediction.LayerParameter> Layers {
      get { return layers_; }
    }

    /// <summary>Field number for the "verification_samples" field.</summary>
    public const int VerificationSamplesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Apollo.Prediction.VerificationSample> _repeated_verificationSamples_codec
        = pb::FieldCodec.ForMessage(34, global::Apollo.Prediction.VerificationSample.Parser);
    private readonly pbc::RepeatedField<global::Apollo.Prediction.VerificationSample> verificationSamples_ = new pbc::RepeatedField<global::Apollo.Prediction.VerificationSample>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Apollo.Prediction.VerificationSample> VerificationSamples {
      get { return verificationSamples_; }
    }

    /// <summary>Field number for the "performance" field.</summary>
    public const int PerformanceFieldNumber = 5;
    private global::Apollo.Prediction.Performance performance_;
    /// <summary>
    /// performance of the model in test dataset
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Prediction.Performance Performance {
      get { return performance_; }
      set {
        performance_ = value;
      }
    }

    /// <summary>Field number for the "time_dumped" field.</summary>
    public const int TimeDumpedFieldNumber = 6;
    private float timeDumped_;
    /// <summary>
    /// time  of dumped the model
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float TimeDumped {
      get { return timeDumped_; }
      set {
        timeDumped_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetParameter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetParameter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if(!layers_.Equals(other.layers_)) return false;
      if(!verificationSamples_.Equals(other.verificationSamples_)) return false;
      if (!object.Equals(Performance, other.Performance)) return false;
      if (TimeDumped != other.TimeDumped) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= layers_.GetHashCode();
      hash ^= verificationSamples_.GetHashCode();
      if (performance_ != null) hash ^= Performance.GetHashCode();
      if (TimeDumped != 0F) hash ^= TimeDumped.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      layers_.WriteTo(output, _repeated_layers_codec);
      verificationSamples_.WriteTo(output, _repeated_verificationSamples_codec);
      if (performance_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Performance);
      }
      if (TimeDumped != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(TimeDumped);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += layers_.CalculateSize(_repeated_layers_codec);
      size += verificationSamples_.CalculateSize(_repeated_verificationSamples_codec);
      if (performance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Performance);
      }
      if (TimeDumped != 0F) {
        size += 1 + 4;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetParameter other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      layers_.Add(other.layers_);
      verificationSamples_.Add(other.verificationSamples_);
      if (other.performance_ != null) {
        if (performance_ == null) {
          performance_ = new global::Apollo.Prediction.Performance();
        }
        Performance.MergeFrom(other.Performance);
      }
      if (other.TimeDumped != 0F) {
        TimeDumped = other.TimeDumped;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            layers_.AddEntriesFrom(input, _repeated_layers_codec);
            break;
          }
          case 34: {
            verificationSamples_.AddEntriesFrom(input, _repeated_verificationSamples_codec);
            break;
          }
          case 42: {
            if (performance_ == null) {
              performance_ = new global::Apollo.Prediction.Performance();
            }
            input.ReadMessage(performance_);
            break;
          }
          case 53: {
            TimeDumped = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
