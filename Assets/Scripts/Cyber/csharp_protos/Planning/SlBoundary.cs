// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/planning/proto/sl_boundary.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Apollo.Planning {

  /// <summary>Holder for reflection information generated from modules/planning/proto/sl_boundary.proto</summary>
  public static partial class SlBoundaryReflection {

    #region Descriptor
    /// <summary>File descriptor for modules/planning/proto/sl_boundary.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SlBoundaryReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cihtb2R1bGVzL3BsYW5uaW5nL3Byb3RvL3NsX2JvdW5kYXJ5LnByb3RvEg9h",
            "cG9sbG8ucGxhbm5pbmciTAoKU0xCb3VuZGFyeRIPCgdzdGFydF9zGAEgASgB",
            "Eg0KBWVuZF9zGAIgASgBEg8KB3N0YXJ0X2wYAyABKAESDQoFZW5kX2wYBCAB",
            "KAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Planning.SLBoundary), global::Apollo.Planning.SLBoundary.Parser, new[]{ "StartS", "EndS", "StartL", "EndL" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SLBoundary : pb::IMessage<SLBoundary> {
    private static readonly pb::MessageParser<SLBoundary> _parser = new pb::MessageParser<SLBoundary>(() => new SLBoundary());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SLBoundary> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Planning.SlBoundaryReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SLBoundary() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SLBoundary(SLBoundary other) : this() {
      startS_ = other.startS_;
      endS_ = other.endS_;
      startL_ = other.startL_;
      endL_ = other.endL_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SLBoundary Clone() {
      return new SLBoundary(this);
    }

    /// <summary>Field number for the "start_s" field.</summary>
    public const int StartSFieldNumber = 1;
    private double startS_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double StartS {
      get { return startS_; }
      set {
        startS_ = value;
      }
    }

    /// <summary>Field number for the "end_s" field.</summary>
    public const int EndSFieldNumber = 2;
    private double endS_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double EndS {
      get { return endS_; }
      set {
        endS_ = value;
      }
    }

    /// <summary>Field number for the "start_l" field.</summary>
    public const int StartLFieldNumber = 3;
    private double startL_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double StartL {
      get { return startL_; }
      set {
        startL_ = value;
      }
    }

    /// <summary>Field number for the "end_l" field.</summary>
    public const int EndLFieldNumber = 4;
    private double endL_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double EndL {
      get { return endL_; }
      set {
        endL_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SLBoundary);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SLBoundary other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartS != other.StartS) return false;
      if (EndS != other.EndS) return false;
      if (StartL != other.StartL) return false;
      if (EndL != other.EndL) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StartS != 0D) hash ^= StartS.GetHashCode();
      if (EndS != 0D) hash ^= EndS.GetHashCode();
      if (StartL != 0D) hash ^= StartL.GetHashCode();
      if (EndL != 0D) hash ^= EndL.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StartS != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(StartS);
      }
      if (EndS != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(EndS);
      }
      if (StartL != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(StartL);
      }
      if (EndL != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(EndL);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StartS != 0D) {
        size += 1 + 8;
      }
      if (EndS != 0D) {
        size += 1 + 8;
      }
      if (StartL != 0D) {
        size += 1 + 8;
      }
      if (EndL != 0D) {
        size += 1 + 8;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SLBoundary other) {
      if (other == null) {
        return;
      }
      if (other.StartS != 0D) {
        StartS = other.StartS;
      }
      if (other.EndS != 0D) {
        EndS = other.EndS;
      }
      if (other.StartL != 0D) {
        StartL = other.StartL;
      }
      if (other.EndL != 0D) {
        EndL = other.EndL;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 9: {
            StartS = input.ReadDouble();
            break;
          }
          case 17: {
            EndS = input.ReadDouble();
            break;
          }
          case 25: {
            StartL = input.ReadDouble();
            break;
          }
          case 33: {
            EndL = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
