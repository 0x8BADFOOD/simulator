// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/planning/proto/poly_vt_speed_config.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Apollo.Planning {

  /// <summary>Holder for reflection information generated from modules/planning/proto/poly_vt_speed_config.proto</summary>
  public static partial class PolyVtSpeedConfigReflection {

    #region Descriptor
    /// <summary>File descriptor for modules/planning/proto/poly_vt_speed_config.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PolyVtSpeedConfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjFtb2R1bGVzL3BsYW5uaW5nL3Byb3RvL3BvbHlfdnRfc3BlZWRfY29uZmln",
            "LnByb3RvEg9hcG9sbG8ucGxhbm5pbmcaL21vZHVsZXMvcGxhbm5pbmcvcHJv",
            "dG8vc3RfYm91bmRhcnlfY29uZmlnLnByb3RvIskDChFQb2x5VlRTcGVlZENv",
            "bmZpZxISCgp0b3RhbF90aW1lGAEgASgBEg8KB3RvdGFsX3MYAiABKAESFAoM",
            "bnVtX3RfbGF5ZXJzGAMgASgFEhsKE29ubGluZV9udW1fdl9sYXllcnMYBCAB",
            "KAUSFAoMbWF0cml4X2RpbV9zGAUgASgFEhYKDm9ubGluZV9tYXhfYWNjGAYg",
            "ASgBEhYKDm9ubGluZV9tYXhfZGVjGAcgASgBEhgKEG9ubGluZV9tYXhfc3Bl",
            "ZWQYCCABKAESHAoUb2ZmbGluZV9udW1fdl9sYXllcnMYCSABKAUSFwoPb2Zm",
            "bGluZV9tYXhfYWNjGAogASgBEhcKD29mZmxpbmVfbWF4X2RlYxgLIAEoARIZ",
            "ChFvZmZsaW5lX21heF9zcGVlZBgMIAEoARIcChRudW1fZXZhbHVhdGVkX3Bv",
            "aW50cxgNIAEoBRIXCg9zYW1wbGluZ191bml0X3YYDiABKAESGwoTbWF4X3Nh",
            "bXBsaW5nX3VuaXRfdhgPIAEoARI9ChJzdF9ib3VuZGFyeV9jb25maWcYECAB",
            "KAsyIS5hcG9sbG8ucGxhbm5pbmcuU3RCb3VuZGFyeUNvbmZpZ2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Apollo.Planning.StBoundaryConfigReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Planning.PolyVTSpeedConfig), global::Apollo.Planning.PolyVTSpeedConfig.Parser, new[]{ "TotalTime", "TotalS", "NumTLayers", "OnlineNumVLayers", "MatrixDimS", "OnlineMaxAcc", "OnlineMaxDec", "OnlineMaxSpeed", "OfflineNumVLayers", "OfflineMaxAcc", "OfflineMaxDec", "OfflineMaxSpeed", "NumEvaluatedPoints", "SamplingUnitV", "MaxSamplingUnitV", "StBoundaryConfig" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PolyVTSpeedConfig : pb::IMessage<PolyVTSpeedConfig> {
    private static readonly pb::MessageParser<PolyVTSpeedConfig> _parser = new pb::MessageParser<PolyVTSpeedConfig>(() => new PolyVTSpeedConfig());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PolyVTSpeedConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Planning.PolyVtSpeedConfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PolyVTSpeedConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PolyVTSpeedConfig(PolyVTSpeedConfig other) : this() {
      totalTime_ = other.totalTime_;
      totalS_ = other.totalS_;
      numTLayers_ = other.numTLayers_;
      onlineNumVLayers_ = other.onlineNumVLayers_;
      matrixDimS_ = other.matrixDimS_;
      onlineMaxAcc_ = other.onlineMaxAcc_;
      onlineMaxDec_ = other.onlineMaxDec_;
      onlineMaxSpeed_ = other.onlineMaxSpeed_;
      offlineNumVLayers_ = other.offlineNumVLayers_;
      offlineMaxAcc_ = other.offlineMaxAcc_;
      offlineMaxDec_ = other.offlineMaxDec_;
      offlineMaxSpeed_ = other.offlineMaxSpeed_;
      numEvaluatedPoints_ = other.numEvaluatedPoints_;
      samplingUnitV_ = other.samplingUnitV_;
      maxSamplingUnitV_ = other.maxSamplingUnitV_;
      StBoundaryConfig = other.stBoundaryConfig_ != null ? other.StBoundaryConfig.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PolyVTSpeedConfig Clone() {
      return new PolyVTSpeedConfig(this);
    }

    /// <summary>Field number for the "total_time" field.</summary>
    public const int TotalTimeFieldNumber = 1;
    private double totalTime_;
    /// <summary>
    ///Total evaluate time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double TotalTime {
      get { return totalTime_; }
      set {
        totalTime_ = value;
      }
    }

    /// <summary>Field number for the "total_s" field.</summary>
    public const int TotalSFieldNumber = 2;
    private double totalS_;
    /// <summary>
    /// Max station distance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double TotalS {
      get { return totalS_; }
      set {
        totalS_ = value;
      }
    }

    /// <summary>Field number for the "num_t_layers" field.</summary>
    public const int NumTLayersFieldNumber = 3;
    private int numTLayers_;
    /// <summary>
    /// number of time layers
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NumTLayers {
      get { return numTLayers_; }
      set {
        numTLayers_ = value;
      }
    }

    /// <summary>Field number for the "online_num_v_layers" field.</summary>
    public const int OnlineNumVLayersFieldNumber = 4;
    private int onlineNumVLayers_;
    /// <summary>
    /// number of different v
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OnlineNumVLayers {
      get { return onlineNumVLayers_; }
      set {
        onlineNumVLayers_ = value;
      }
    }

    /// <summary>Field number for the "matrix_dim_s" field.</summary>
    public const int MatrixDimSFieldNumber = 5;
    private int matrixDimS_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MatrixDimS {
      get { return matrixDimS_; }
      set {
        matrixDimS_ = value;
      }
    }

    /// <summary>Field number for the "online_max_acc" field.</summary>
    public const int OnlineMaxAccFieldNumber = 6;
    private double onlineMaxAcc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double OnlineMaxAcc {
      get { return onlineMaxAcc_; }
      set {
        onlineMaxAcc_ = value;
      }
    }

    /// <summary>Field number for the "online_max_dec" field.</summary>
    public const int OnlineMaxDecFieldNumber = 7;
    private double onlineMaxDec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double OnlineMaxDec {
      get { return onlineMaxDec_; }
      set {
        onlineMaxDec_ = value;
      }
    }

    /// <summary>Field number for the "online_max_speed" field.</summary>
    public const int OnlineMaxSpeedFieldNumber = 8;
    private double onlineMaxSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double OnlineMaxSpeed {
      get { return onlineMaxSpeed_; }
      set {
        onlineMaxSpeed_ = value;
      }
    }

    /// <summary>Field number for the "offline_num_v_layers" field.</summary>
    public const int OfflineNumVLayersFieldNumber = 9;
    private int offlineNumVLayers_;
    /// <summary>
    /// offline training use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OfflineNumVLayers {
      get { return offlineNumVLayers_; }
      set {
        offlineNumVLayers_ = value;
      }
    }

    /// <summary>Field number for the "offline_max_acc" field.</summary>
    public const int OfflineMaxAccFieldNumber = 10;
    private double offlineMaxAcc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double OfflineMaxAcc {
      get { return offlineMaxAcc_; }
      set {
        offlineMaxAcc_ = value;
      }
    }

    /// <summary>Field number for the "offline_max_dec" field.</summary>
    public const int OfflineMaxDecFieldNumber = 11;
    private double offlineMaxDec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double OfflineMaxDec {
      get { return offlineMaxDec_; }
      set {
        offlineMaxDec_ = value;
      }
    }

    /// <summary>Field number for the "offline_max_speed" field.</summary>
    public const int OfflineMaxSpeedFieldNumber = 12;
    private double offlineMaxSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double OfflineMaxSpeed {
      get { return offlineMaxSpeed_; }
      set {
        offlineMaxSpeed_ = value;
      }
    }

    /// <summary>Field number for the "num_evaluated_points" field.</summary>
    public const int NumEvaluatedPointsFieldNumber = 13;
    private int numEvaluatedPoints_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NumEvaluatedPoints {
      get { return numEvaluatedPoints_; }
      set {
        numEvaluatedPoints_ = value;
      }
    }

    /// <summary>Field number for the "sampling_unit_v" field.</summary>
    public const int SamplingUnitVFieldNumber = 14;
    private double samplingUnitV_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double SamplingUnitV {
      get { return samplingUnitV_; }
      set {
        samplingUnitV_ = value;
      }
    }

    /// <summary>Field number for the "max_sampling_unit_v" field.</summary>
    public const int MaxSamplingUnitVFieldNumber = 15;
    private double maxSamplingUnitV_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double MaxSamplingUnitV {
      get { return maxSamplingUnitV_; }
      set {
        maxSamplingUnitV_ = value;
      }
    }

    /// <summary>Field number for the "st_boundary_config" field.</summary>
    public const int StBoundaryConfigFieldNumber = 16;
    private global::Apollo.Planning.StBoundaryConfig stBoundaryConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Planning.StBoundaryConfig StBoundaryConfig {
      get { return stBoundaryConfig_; }
      set {
        stBoundaryConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PolyVTSpeedConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PolyVTSpeedConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TotalTime != other.TotalTime) return false;
      if (TotalS != other.TotalS) return false;
      if (NumTLayers != other.NumTLayers) return false;
      if (OnlineNumVLayers != other.OnlineNumVLayers) return false;
      if (MatrixDimS != other.MatrixDimS) return false;
      if (OnlineMaxAcc != other.OnlineMaxAcc) return false;
      if (OnlineMaxDec != other.OnlineMaxDec) return false;
      if (OnlineMaxSpeed != other.OnlineMaxSpeed) return false;
      if (OfflineNumVLayers != other.OfflineNumVLayers) return false;
      if (OfflineMaxAcc != other.OfflineMaxAcc) return false;
      if (OfflineMaxDec != other.OfflineMaxDec) return false;
      if (OfflineMaxSpeed != other.OfflineMaxSpeed) return false;
      if (NumEvaluatedPoints != other.NumEvaluatedPoints) return false;
      if (SamplingUnitV != other.SamplingUnitV) return false;
      if (MaxSamplingUnitV != other.MaxSamplingUnitV) return false;
      if (!object.Equals(StBoundaryConfig, other.StBoundaryConfig)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TotalTime != 0D) hash ^= TotalTime.GetHashCode();
      if (TotalS != 0D) hash ^= TotalS.GetHashCode();
      if (NumTLayers != 0) hash ^= NumTLayers.GetHashCode();
      if (OnlineNumVLayers != 0) hash ^= OnlineNumVLayers.GetHashCode();
      if (MatrixDimS != 0) hash ^= MatrixDimS.GetHashCode();
      if (OnlineMaxAcc != 0D) hash ^= OnlineMaxAcc.GetHashCode();
      if (OnlineMaxDec != 0D) hash ^= OnlineMaxDec.GetHashCode();
      if (OnlineMaxSpeed != 0D) hash ^= OnlineMaxSpeed.GetHashCode();
      if (OfflineNumVLayers != 0) hash ^= OfflineNumVLayers.GetHashCode();
      if (OfflineMaxAcc != 0D) hash ^= OfflineMaxAcc.GetHashCode();
      if (OfflineMaxDec != 0D) hash ^= OfflineMaxDec.GetHashCode();
      if (OfflineMaxSpeed != 0D) hash ^= OfflineMaxSpeed.GetHashCode();
      if (NumEvaluatedPoints != 0) hash ^= NumEvaluatedPoints.GetHashCode();
      if (SamplingUnitV != 0D) hash ^= SamplingUnitV.GetHashCode();
      if (MaxSamplingUnitV != 0D) hash ^= MaxSamplingUnitV.GetHashCode();
      if (stBoundaryConfig_ != null) hash ^= StBoundaryConfig.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TotalTime != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(TotalTime);
      }
      if (TotalS != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(TotalS);
      }
      if (NumTLayers != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NumTLayers);
      }
      if (OnlineNumVLayers != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(OnlineNumVLayers);
      }
      if (MatrixDimS != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MatrixDimS);
      }
      if (OnlineMaxAcc != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(OnlineMaxAcc);
      }
      if (OnlineMaxDec != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(OnlineMaxDec);
      }
      if (OnlineMaxSpeed != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(OnlineMaxSpeed);
      }
      if (OfflineNumVLayers != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(OfflineNumVLayers);
      }
      if (OfflineMaxAcc != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(OfflineMaxAcc);
      }
      if (OfflineMaxDec != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(OfflineMaxDec);
      }
      if (OfflineMaxSpeed != 0D) {
        output.WriteRawTag(97);
        output.WriteDouble(OfflineMaxSpeed);
      }
      if (NumEvaluatedPoints != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(NumEvaluatedPoints);
      }
      if (SamplingUnitV != 0D) {
        output.WriteRawTag(113);
        output.WriteDouble(SamplingUnitV);
      }
      if (MaxSamplingUnitV != 0D) {
        output.WriteRawTag(121);
        output.WriteDouble(MaxSamplingUnitV);
      }
      if (stBoundaryConfig_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(StBoundaryConfig);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TotalTime != 0D) {
        size += 1 + 8;
      }
      if (TotalS != 0D) {
        size += 1 + 8;
      }
      if (NumTLayers != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumTLayers);
      }
      if (OnlineNumVLayers != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OnlineNumVLayers);
      }
      if (MatrixDimS != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MatrixDimS);
      }
      if (OnlineMaxAcc != 0D) {
        size += 1 + 8;
      }
      if (OnlineMaxDec != 0D) {
        size += 1 + 8;
      }
      if (OnlineMaxSpeed != 0D) {
        size += 1 + 8;
      }
      if (OfflineNumVLayers != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OfflineNumVLayers);
      }
      if (OfflineMaxAcc != 0D) {
        size += 1 + 8;
      }
      if (OfflineMaxDec != 0D) {
        size += 1 + 8;
      }
      if (OfflineMaxSpeed != 0D) {
        size += 1 + 8;
      }
      if (NumEvaluatedPoints != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumEvaluatedPoints);
      }
      if (SamplingUnitV != 0D) {
        size += 1 + 8;
      }
      if (MaxSamplingUnitV != 0D) {
        size += 1 + 8;
      }
      if (stBoundaryConfig_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StBoundaryConfig);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PolyVTSpeedConfig other) {
      if (other == null) {
        return;
      }
      if (other.TotalTime != 0D) {
        TotalTime = other.TotalTime;
      }
      if (other.TotalS != 0D) {
        TotalS = other.TotalS;
      }
      if (other.NumTLayers != 0) {
        NumTLayers = other.NumTLayers;
      }
      if (other.OnlineNumVLayers != 0) {
        OnlineNumVLayers = other.OnlineNumVLayers;
      }
      if (other.MatrixDimS != 0) {
        MatrixDimS = other.MatrixDimS;
      }
      if (other.OnlineMaxAcc != 0D) {
        OnlineMaxAcc = other.OnlineMaxAcc;
      }
      if (other.OnlineMaxDec != 0D) {
        OnlineMaxDec = other.OnlineMaxDec;
      }
      if (other.OnlineMaxSpeed != 0D) {
        OnlineMaxSpeed = other.OnlineMaxSpeed;
      }
      if (other.OfflineNumVLayers != 0) {
        OfflineNumVLayers = other.OfflineNumVLayers;
      }
      if (other.OfflineMaxAcc != 0D) {
        OfflineMaxAcc = other.OfflineMaxAcc;
      }
      if (other.OfflineMaxDec != 0D) {
        OfflineMaxDec = other.OfflineMaxDec;
      }
      if (other.OfflineMaxSpeed != 0D) {
        OfflineMaxSpeed = other.OfflineMaxSpeed;
      }
      if (other.NumEvaluatedPoints != 0) {
        NumEvaluatedPoints = other.NumEvaluatedPoints;
      }
      if (other.SamplingUnitV != 0D) {
        SamplingUnitV = other.SamplingUnitV;
      }
      if (other.MaxSamplingUnitV != 0D) {
        MaxSamplingUnitV = other.MaxSamplingUnitV;
      }
      if (other.stBoundaryConfig_ != null) {
        if (stBoundaryConfig_ == null) {
          stBoundaryConfig_ = new global::Apollo.Planning.StBoundaryConfig();
        }
        StBoundaryConfig.MergeFrom(other.StBoundaryConfig);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 9: {
            TotalTime = input.ReadDouble();
            break;
          }
          case 17: {
            TotalS = input.ReadDouble();
            break;
          }
          case 24: {
            NumTLayers = input.ReadInt32();
            break;
          }
          case 32: {
            OnlineNumVLayers = input.ReadInt32();
            break;
          }
          case 40: {
            MatrixDimS = input.ReadInt32();
            break;
          }
          case 49: {
            OnlineMaxAcc = input.ReadDouble();
            break;
          }
          case 57: {
            OnlineMaxDec = input.ReadDouble();
            break;
          }
          case 65: {
            OnlineMaxSpeed = input.ReadDouble();
            break;
          }
          case 72: {
            OfflineNumVLayers = input.ReadInt32();
            break;
          }
          case 81: {
            OfflineMaxAcc = input.ReadDouble();
            break;
          }
          case 89: {
            OfflineMaxDec = input.ReadDouble();
            break;
          }
          case 97: {
            OfflineMaxSpeed = input.ReadDouble();
            break;
          }
          case 104: {
            NumEvaluatedPoints = input.ReadInt32();
            break;
          }
          case 113: {
            SamplingUnitV = input.ReadDouble();
            break;
          }
          case 121: {
            MaxSamplingUnitV = input.ReadDouble();
            break;
          }
          case 130: {
            if (stBoundaryConfig_ == null) {
              stBoundaryConfig_ = new global::Apollo.Planning.StBoundaryConfig();
            }
            input.ReadMessage(stBoundaryConfig_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
