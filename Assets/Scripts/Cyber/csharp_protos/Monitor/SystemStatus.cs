// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/monitor/proto/system_status.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Apollo.Monitor {

  /// <summary>Holder for reflection information generated from modules/monitor/proto/system_status.proto</summary>
  public static partial class SystemStatusReflection {

    #region Descriptor
    /// <summary>File descriptor for modules/monitor/proto/system_status.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SystemStatusReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ciltb2R1bGVzL21vbml0b3IvcHJvdG8vc3lzdGVtX3N0YXR1cy5wcm90bxIO",
            "YXBvbGxvLm1vbml0b3IaIW1vZHVsZXMvY29tbW9uL3Byb3RvL2hlYWRlci5w",
            "cm90byKZAQoPQ29tcG9uZW50U3RhdHVzEjYKBnN0YXR1cxgBIAEoDjImLmFw",
            "b2xsby5tb25pdG9yLkNvbXBvbmVudFN0YXR1cy5TdGF0dXMSDwoHbWVzc2Fn",
            "ZRgCIAEoCSI9CgZTdGF0dXMSCwoHVU5LTk9XThAAEgYKAk9LEAESCAoEV0FS",
            "ThACEgkKBUVSUk9SEAMSCQoFRkFUQUwQBCKgAgoJQ29tcG9uZW50EjAKB3N1",
            "bW1hcnkYASABKAsyHy5hcG9sbG8ubW9uaXRvci5Db21wb25lbnRTdGF0dXMS",
            "NwoOcHJvY2Vzc19zdGF0dXMYAiABKAsyHy5hcG9sbG8ubW9uaXRvci5Db21w",
            "b25lbnRTdGF0dXMSNwoOY2hhbm5lbF9zdGF0dXMYAyABKAsyHy5hcG9sbG8u",
            "bW9uaXRvci5Db21wb25lbnRTdGF0dXMSOAoPcmVzb3VyY2Vfc3RhdHVzGAQg",
            "ASgLMh8uYXBvbGxvLm1vbml0b3IuQ29tcG9uZW50U3RhdHVzEjUKDG90aGVy",
            "X3N0YXR1cxgFIAEoCzIfLmFwb2xsby5tb25pdG9yLkNvbXBvbmVudFN0YXR1",
            "cyLkAwoMU3lzdGVtU3RhdHVzEiUKBmhlYWRlchgBIAEoCzIVLmFwb2xsby5j",
            "b21tb24uSGVhZGVyEkEKC2htaV9tb2R1bGVzGAcgAygLMiwuYXBvbGxvLm1v",
            "bml0b3IuU3lzdGVtU3RhdHVzLkhtaU1vZHVsZXNFbnRyeRJACgpjb21wb25l",
            "bnRzGAggAygLMiwuYXBvbGxvLm1vbml0b3IuU3lzdGVtU3RhdHVzLkNvbXBv",
            "bmVudHNFbnRyeRIVCg1wYXNzZW5nZXJfbXNnGAQgASgJEiAKGHNhZmV0eV9t",
            "b2RlX3RyaWdnZXJfdGltZRgFIAEoARIeChZyZXF1aXJlX2VtZXJnZW5jeV9z",
            "dG9wGAYgASgIEiEKGWlzX3JlYWx0aW1lX2luX3NpbXVsYXRpb24YCSABKAga",
            "UgoPSG1pTW9kdWxlc0VudHJ5EgsKA2tleRgBIAEoCRIuCgV2YWx1ZRgCIAEo",
            "CzIfLmFwb2xsby5tb25pdG9yLkNvbXBvbmVudFN0YXR1czoCOAEaTAoPQ29t",
            "cG9uZW50c0VudHJ5EgsKA2tleRgBIAEoCRIoCgV2YWx1ZRgCIAEoCzIZLmFw",
            "b2xsby5tb25pdG9yLkNvbXBvbmVudDoCOAFKBAgCEANKBAgDEARiBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Apollo.Common.HeaderReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Monitor.ComponentStatus), global::Apollo.Monitor.ComponentStatus.Parser, new[]{ "Status", "Message" }, null, new[]{ typeof(global::Apollo.Monitor.ComponentStatus.Types.Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Monitor.Component), global::Apollo.Monitor.Component.Parser, new[]{ "Summary", "ProcessStatus", "ChannelStatus", "ResourceStatus", "OtherStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Monitor.SystemStatus), global::Apollo.Monitor.SystemStatus.Parser, new[]{ "Header", "HmiModules", "Components", "PassengerMsg", "SafetyModeTriggerTime", "RequireEmergencyStop", "IsRealtimeInSimulation" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Status summary. The value order is important, because when we summarize,
  /// larger value will overwrite smaller value:
  ///    FATAL > ERROR > WARN > OK > UNKNOWN
  /// </summary>
  public sealed partial class ComponentStatus : pb::IMessage<ComponentStatus> {
    private static readonly pb::MessageParser<ComponentStatus> _parser = new pb::MessageParser<ComponentStatus>(() => new ComponentStatus());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComponentStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Monitor.SystemStatusReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComponentStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComponentStatus(ComponentStatus other) : this() {
      status_ = other.status_;
      message_ = other.message_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComponentStatus Clone() {
      return new ComponentStatus(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Apollo.Monitor.ComponentStatus.Types.Status status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Monitor.ComponentStatus.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComponentStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComponentStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (Message != other.Message) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComponentStatus other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            status_ = (global::Apollo.Monitor.ComponentStatus.Types.Status) input.ReadEnum();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ComponentStatus message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Status {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("OK")] Ok = 1,
        [pbr::OriginalName("WARN")] Warn = 2,
        [pbr::OriginalName("ERROR")] Error = 3,
        [pbr::OriginalName("FATAL")] Fatal = 4,
      }

    }
    #endregion

  }

  public sealed partial class Component : pb::IMessage<Component> {
    private static readonly pb::MessageParser<Component> _parser = new pb::MessageParser<Component>(() => new Component());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Component> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Monitor.SystemStatusReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Component() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Component(Component other) : this() {
      Summary = other.summary_ != null ? other.Summary.Clone() : null;
      ProcessStatus = other.processStatus_ != null ? other.ProcessStatus.Clone() : null;
      ChannelStatus = other.channelStatus_ != null ? other.ChannelStatus.Clone() : null;
      ResourceStatus = other.resourceStatus_ != null ? other.ResourceStatus.Clone() : null;
      OtherStatus = other.otherStatus_ != null ? other.OtherStatus.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Component Clone() {
      return new Component(this);
    }

    /// <summary>Field number for the "summary" field.</summary>
    public const int SummaryFieldNumber = 1;
    private global::Apollo.Monitor.ComponentStatus summary_;
    /// <summary>
    /// A summary of all detailed status.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Monitor.ComponentStatus Summary {
      get { return summary_; }
      set {
        summary_ = value;
      }
    }

    /// <summary>Field number for the "process_status" field.</summary>
    public const int ProcessStatusFieldNumber = 2;
    private global::Apollo.Monitor.ComponentStatus processStatus_;
    /// <summary>
    /// Detailed status.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Monitor.ComponentStatus ProcessStatus {
      get { return processStatus_; }
      set {
        processStatus_ = value;
      }
    }

    /// <summary>Field number for the "channel_status" field.</summary>
    public const int ChannelStatusFieldNumber = 3;
    private global::Apollo.Monitor.ComponentStatus channelStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Monitor.ComponentStatus ChannelStatus {
      get { return channelStatus_; }
      set {
        channelStatus_ = value;
      }
    }

    /// <summary>Field number for the "resource_status" field.</summary>
    public const int ResourceStatusFieldNumber = 4;
    private global::Apollo.Monitor.ComponentStatus resourceStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Monitor.ComponentStatus ResourceStatus {
      get { return resourceStatus_; }
      set {
        resourceStatus_ = value;
      }
    }

    /// <summary>Field number for the "other_status" field.</summary>
    public const int OtherStatusFieldNumber = 5;
    private global::Apollo.Monitor.ComponentStatus otherStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Monitor.ComponentStatus OtherStatus {
      get { return otherStatus_; }
      set {
        otherStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Component);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Component other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Summary, other.Summary)) return false;
      if (!object.Equals(ProcessStatus, other.ProcessStatus)) return false;
      if (!object.Equals(ChannelStatus, other.ChannelStatus)) return false;
      if (!object.Equals(ResourceStatus, other.ResourceStatus)) return false;
      if (!object.Equals(OtherStatus, other.OtherStatus)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (summary_ != null) hash ^= Summary.GetHashCode();
      if (processStatus_ != null) hash ^= ProcessStatus.GetHashCode();
      if (channelStatus_ != null) hash ^= ChannelStatus.GetHashCode();
      if (resourceStatus_ != null) hash ^= ResourceStatus.GetHashCode();
      if (otherStatus_ != null) hash ^= OtherStatus.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (summary_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Summary);
      }
      if (processStatus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ProcessStatus);
      }
      if (channelStatus_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ChannelStatus);
      }
      if (resourceStatus_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ResourceStatus);
      }
      if (otherStatus_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(OtherStatus);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (summary_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Summary);
      }
      if (processStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProcessStatus);
      }
      if (channelStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChannelStatus);
      }
      if (resourceStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResourceStatus);
      }
      if (otherStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OtherStatus);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Component other) {
      if (other == null) {
        return;
      }
      if (other.summary_ != null) {
        if (summary_ == null) {
          summary_ = new global::Apollo.Monitor.ComponentStatus();
        }
        Summary.MergeFrom(other.Summary);
      }
      if (other.processStatus_ != null) {
        if (processStatus_ == null) {
          processStatus_ = new global::Apollo.Monitor.ComponentStatus();
        }
        ProcessStatus.MergeFrom(other.ProcessStatus);
      }
      if (other.channelStatus_ != null) {
        if (channelStatus_ == null) {
          channelStatus_ = new global::Apollo.Monitor.ComponentStatus();
        }
        ChannelStatus.MergeFrom(other.ChannelStatus);
      }
      if (other.resourceStatus_ != null) {
        if (resourceStatus_ == null) {
          resourceStatus_ = new global::Apollo.Monitor.ComponentStatus();
        }
        ResourceStatus.MergeFrom(other.ResourceStatus);
      }
      if (other.otherStatus_ != null) {
        if (otherStatus_ == null) {
          otherStatus_ = new global::Apollo.Monitor.ComponentStatus();
        }
        OtherStatus.MergeFrom(other.OtherStatus);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (summary_ == null) {
              summary_ = new global::Apollo.Monitor.ComponentStatus();
            }
            input.ReadMessage(summary_);
            break;
          }
          case 18: {
            if (processStatus_ == null) {
              processStatus_ = new global::Apollo.Monitor.ComponentStatus();
            }
            input.ReadMessage(processStatus_);
            break;
          }
          case 26: {
            if (channelStatus_ == null) {
              channelStatus_ = new global::Apollo.Monitor.ComponentStatus();
            }
            input.ReadMessage(channelStatus_);
            break;
          }
          case 34: {
            if (resourceStatus_ == null) {
              resourceStatus_ = new global::Apollo.Monitor.ComponentStatus();
            }
            input.ReadMessage(resourceStatus_);
            break;
          }
          case 42: {
            if (otherStatus_ == null) {
              otherStatus_ = new global::Apollo.Monitor.ComponentStatus();
            }
            input.ReadMessage(otherStatus_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SystemStatus : pb::IMessage<SystemStatus> {
    private static readonly pb::MessageParser<SystemStatus> _parser = new pb::MessageParser<SystemStatus>(() => new SystemStatus());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SystemStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Monitor.SystemStatusReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SystemStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SystemStatus(SystemStatus other) : this() {
      Header = other.header_ != null ? other.Header.Clone() : null;
      hmiModules_ = other.hmiModules_.Clone();
      components_ = other.components_.Clone();
      passengerMsg_ = other.passengerMsg_;
      safetyModeTriggerTime_ = other.safetyModeTriggerTime_;
      requireEmergencyStop_ = other.requireEmergencyStop_;
      isRealtimeInSimulation_ = other.isRealtimeInSimulation_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SystemStatus Clone() {
      return new SystemStatus(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Apollo.Common.Header header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Common.Header Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "hmi_modules" field.</summary>
    public const int HmiModulesFieldNumber = 7;
    private static readonly pbc::MapField<string, global::Apollo.Monitor.ComponentStatus>.Codec _map_hmiModules_codec
        = new pbc::MapField<string, global::Apollo.Monitor.ComponentStatus>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Apollo.Monitor.ComponentStatus.Parser), 58);
    private readonly pbc::MapField<string, global::Apollo.Monitor.ComponentStatus> hmiModules_ = new pbc::MapField<string, global::Apollo.Monitor.ComponentStatus>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Apollo.Monitor.ComponentStatus> HmiModules {
      get { return hmiModules_; }
    }

    /// <summary>Field number for the "components" field.</summary>
    public const int ComponentsFieldNumber = 8;
    private static readonly pbc::MapField<string, global::Apollo.Monitor.Component>.Codec _map_components_codec
        = new pbc::MapField<string, global::Apollo.Monitor.Component>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Apollo.Monitor.Component.Parser), 66);
    private readonly pbc::MapField<string, global::Apollo.Monitor.Component> components_ = new pbc::MapField<string, global::Apollo.Monitor.Component>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Apollo.Monitor.Component> Components {
      get { return components_; }
    }

    /// <summary>Field number for the "passenger_msg" field.</summary>
    public const int PassengerMsgFieldNumber = 4;
    private string passengerMsg_ = "";
    /// <summary>
    /// Some critical message for passengers. HMI should highlight it or even read
    /// loudly.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PassengerMsg {
      get { return passengerMsg_; }
      set {
        passengerMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "safety_mode_trigger_time" field.</summary>
    public const int SafetyModeTriggerTimeFieldNumber = 5;
    private double safetyModeTriggerTime_;
    /// <summary>
    /// If we have this field, safety_mode should be triggered.
    /// We'll check the system action and driver action continuously. If no proper
    /// action was taken in a specified period of time (such as 10 seconds), EStop
    /// will be sent to bring the vehicle into emergency full stop.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double SafetyModeTriggerTime {
      get { return safetyModeTriggerTime_; }
      set {
        safetyModeTriggerTime_ = value;
      }
    }

    /// <summary>Field number for the "require_emergency_stop" field.</summary>
    public const int RequireEmergencyStopFieldNumber = 6;
    private bool requireEmergencyStop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RequireEmergencyStop {
      get { return requireEmergencyStop_; }
      set {
        requireEmergencyStop_ = value;
      }
    }

    /// <summary>Field number for the "is_realtime_in_simulation" field.</summary>
    public const int IsRealtimeInSimulationFieldNumber = 9;
    private bool isRealtimeInSimulation_;
    /// <summary>
    /// In simulation mode, the monitor will publish message with this field set,
    /// so subscribers could identify it from the recorded messages.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsRealtimeInSimulation {
      get { return isRealtimeInSimulation_; }
      set {
        isRealtimeInSimulation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SystemStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SystemStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!HmiModules.Equals(other.HmiModules)) return false;
      if (!Components.Equals(other.Components)) return false;
      if (PassengerMsg != other.PassengerMsg) return false;
      if (SafetyModeTriggerTime != other.SafetyModeTriggerTime) return false;
      if (RequireEmergencyStop != other.RequireEmergencyStop) return false;
      if (IsRealtimeInSimulation != other.IsRealtimeInSimulation) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      hash ^= HmiModules.GetHashCode();
      hash ^= Components.GetHashCode();
      if (PassengerMsg.Length != 0) hash ^= PassengerMsg.GetHashCode();
      if (SafetyModeTriggerTime != 0D) hash ^= SafetyModeTriggerTime.GetHashCode();
      if (RequireEmergencyStop != false) hash ^= RequireEmergencyStop.GetHashCode();
      if (IsRealtimeInSimulation != false) hash ^= IsRealtimeInSimulation.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (PassengerMsg.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PassengerMsg);
      }
      if (SafetyModeTriggerTime != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(SafetyModeTriggerTime);
      }
      if (RequireEmergencyStop != false) {
        output.WriteRawTag(48);
        output.WriteBool(RequireEmergencyStop);
      }
      hmiModules_.WriteTo(output, _map_hmiModules_codec);
      components_.WriteTo(output, _map_components_codec);
      if (IsRealtimeInSimulation != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsRealtimeInSimulation);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      size += hmiModules_.CalculateSize(_map_hmiModules_codec);
      size += components_.CalculateSize(_map_components_codec);
      if (PassengerMsg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PassengerMsg);
      }
      if (SafetyModeTriggerTime != 0D) {
        size += 1 + 8;
      }
      if (RequireEmergencyStop != false) {
        size += 1 + 1;
      }
      if (IsRealtimeInSimulation != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SystemStatus other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          header_ = new global::Apollo.Common.Header();
        }
        Header.MergeFrom(other.Header);
      }
      hmiModules_.Add(other.hmiModules_);
      components_.Add(other.components_);
      if (other.PassengerMsg.Length != 0) {
        PassengerMsg = other.PassengerMsg;
      }
      if (other.SafetyModeTriggerTime != 0D) {
        SafetyModeTriggerTime = other.SafetyModeTriggerTime;
      }
      if (other.RequireEmergencyStop != false) {
        RequireEmergencyStop = other.RequireEmergencyStop;
      }
      if (other.IsRealtimeInSimulation != false) {
        IsRealtimeInSimulation = other.IsRealtimeInSimulation;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (header_ == null) {
              header_ = new global::Apollo.Common.Header();
            }
            input.ReadMessage(header_);
            break;
          }
          case 34: {
            PassengerMsg = input.ReadString();
            break;
          }
          case 41: {
            SafetyModeTriggerTime = input.ReadDouble();
            break;
          }
          case 48: {
            RequireEmergencyStop = input.ReadBool();
            break;
          }
          case 58: {
            hmiModules_.AddEntriesFrom(input, _map_hmiModules_codec);
            break;
          }
          case 66: {
            components_.AddEntriesFrom(input, _map_components_codec);
            break;
          }
          case 72: {
            IsRealtimeInSimulation = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
