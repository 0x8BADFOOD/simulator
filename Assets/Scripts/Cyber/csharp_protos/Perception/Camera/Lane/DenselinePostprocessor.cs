// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/camera/lib/lane/postprocessor/denseline/denseline_postprocessor.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Apollo.Perception.Camera.Lane {

  /// <summary>Holder for reflection information generated from modules/perception/camera/lib/lane/postprocessor/denseline/denseline_postprocessor.proto</summary>
  public static partial class DenselinePostprocessorReflection {

    #region Descriptor
    /// <summary>File descriptor for modules/perception/camera/lib/lane/postprocessor/denseline/denseline_postprocessor.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DenselinePostprocessorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Clhtb2R1bGVzL3BlcmNlcHRpb24vY2FtZXJhL2xpYi9sYW5lL3Bvc3Rwcm9j",
            "ZXNzb3IvZGVuc2VsaW5lL2RlbnNlbGluZV9wb3N0cHJvY2Vzc29yLnByb3Rv",
            "Eh1hcG9sbG8ucGVyY2VwdGlvbi5jYW1lcmEubGFuZSLpAQoWTGFuZVBvc3Rw",
            "cm9jZXNzb3JQYXJhbRIcChRvbWl0X2JvdHRvbV9saW5lX251bRgBIAEoBRIh",
            "ChlsYW5lbGluZV9tYXBfc2NvcmVfdGhyZXNoGAIgASgCEiMKG2xhbmVsaW5l",
            "X3BvaW50X3Njb3JlX3RocmVzaBgDIAEoAhIlCh1sYW5lbGluZV9wb2ludF9t",
            "aW5fbnVtX3RocmVzaBgEIAEoBRIdChVjY192YWxpZF9waXhlbHNfcmF0aW8Y",
            "BSABKAISIwobbGFuZWxpbmVfcmVqZWN0X2Rpc3RfdGhyZXNoGAYgASgCYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.Camera.Lane.LanePostprocessorParam), global::Apollo.Perception.Camera.Lane.LanePostprocessorParam.Parser, new[]{ "OmitBottomLineNum", "LanelineMapScoreThresh", "LanelinePointScoreThresh", "LanelinePointMinNumThresh", "CcValidPixelsRatio", "LanelineRejectDistThresh" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class LanePostprocessorParam : pb::IMessage<LanePostprocessorParam> {
    private static readonly pb::MessageParser<LanePostprocessorParam> _parser = new pb::MessageParser<LanePostprocessorParam>(() => new LanePostprocessorParam());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LanePostprocessorParam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.Camera.Lane.DenselinePostprocessorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LanePostprocessorParam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LanePostprocessorParam(LanePostprocessorParam other) : this() {
      omitBottomLineNum_ = other.omitBottomLineNum_;
      lanelineMapScoreThresh_ = other.lanelineMapScoreThresh_;
      lanelinePointScoreThresh_ = other.lanelinePointScoreThresh_;
      lanelinePointMinNumThresh_ = other.lanelinePointMinNumThresh_;
      ccValidPixelsRatio_ = other.ccValidPixelsRatio_;
      lanelineRejectDistThresh_ = other.lanelineRejectDistThresh_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LanePostprocessorParam Clone() {
      return new LanePostprocessorParam(this);
    }

    /// <summary>Field number for the "omit_bottom_line_num" field.</summary>
    public const int OmitBottomLineNumFieldNumber = 1;
    private int omitBottomLineNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OmitBottomLineNum {
      get { return omitBottomLineNum_; }
      set {
        omitBottomLineNum_ = value;
      }
    }

    /// <summary>Field number for the "laneline_map_score_thresh" field.</summary>
    public const int LanelineMapScoreThreshFieldNumber = 2;
    private float lanelineMapScoreThresh_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float LanelineMapScoreThresh {
      get { return lanelineMapScoreThresh_; }
      set {
        lanelineMapScoreThresh_ = value;
      }
    }

    /// <summary>Field number for the "laneline_point_score_thresh" field.</summary>
    public const int LanelinePointScoreThreshFieldNumber = 3;
    private float lanelinePointScoreThresh_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float LanelinePointScoreThresh {
      get { return lanelinePointScoreThresh_; }
      set {
        lanelinePointScoreThresh_ = value;
      }
    }

    /// <summary>Field number for the "laneline_point_min_num_thresh" field.</summary>
    public const int LanelinePointMinNumThreshFieldNumber = 4;
    private int lanelinePointMinNumThresh_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LanelinePointMinNumThresh {
      get { return lanelinePointMinNumThresh_; }
      set {
        lanelinePointMinNumThresh_ = value;
      }
    }

    /// <summary>Field number for the "cc_valid_pixels_ratio" field.</summary>
    public const int CcValidPixelsRatioFieldNumber = 5;
    private float ccValidPixelsRatio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float CcValidPixelsRatio {
      get { return ccValidPixelsRatio_; }
      set {
        ccValidPixelsRatio_ = value;
      }
    }

    /// <summary>Field number for the "laneline_reject_dist_thresh" field.</summary>
    public const int LanelineRejectDistThreshFieldNumber = 6;
    private float lanelineRejectDistThresh_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float LanelineRejectDistThresh {
      get { return lanelineRejectDistThresh_; }
      set {
        lanelineRejectDistThresh_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LanePostprocessorParam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LanePostprocessorParam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OmitBottomLineNum != other.OmitBottomLineNum) return false;
      if (LanelineMapScoreThresh != other.LanelineMapScoreThresh) return false;
      if (LanelinePointScoreThresh != other.LanelinePointScoreThresh) return false;
      if (LanelinePointMinNumThresh != other.LanelinePointMinNumThresh) return false;
      if (CcValidPixelsRatio != other.CcValidPixelsRatio) return false;
      if (LanelineRejectDistThresh != other.LanelineRejectDistThresh) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OmitBottomLineNum != 0) hash ^= OmitBottomLineNum.GetHashCode();
      if (LanelineMapScoreThresh != 0F) hash ^= LanelineMapScoreThresh.GetHashCode();
      if (LanelinePointScoreThresh != 0F) hash ^= LanelinePointScoreThresh.GetHashCode();
      if (LanelinePointMinNumThresh != 0) hash ^= LanelinePointMinNumThresh.GetHashCode();
      if (CcValidPixelsRatio != 0F) hash ^= CcValidPixelsRatio.GetHashCode();
      if (LanelineRejectDistThresh != 0F) hash ^= LanelineRejectDistThresh.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OmitBottomLineNum != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(OmitBottomLineNum);
      }
      if (LanelineMapScoreThresh != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(LanelineMapScoreThresh);
      }
      if (LanelinePointScoreThresh != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(LanelinePointScoreThresh);
      }
      if (LanelinePointMinNumThresh != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(LanelinePointMinNumThresh);
      }
      if (CcValidPixelsRatio != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(CcValidPixelsRatio);
      }
      if (LanelineRejectDistThresh != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(LanelineRejectDistThresh);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OmitBottomLineNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OmitBottomLineNum);
      }
      if (LanelineMapScoreThresh != 0F) {
        size += 1 + 4;
      }
      if (LanelinePointScoreThresh != 0F) {
        size += 1 + 4;
      }
      if (LanelinePointMinNumThresh != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LanelinePointMinNumThresh);
      }
      if (CcValidPixelsRatio != 0F) {
        size += 1 + 4;
      }
      if (LanelineRejectDistThresh != 0F) {
        size += 1 + 4;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LanePostprocessorParam other) {
      if (other == null) {
        return;
      }
      if (other.OmitBottomLineNum != 0) {
        OmitBottomLineNum = other.OmitBottomLineNum;
      }
      if (other.LanelineMapScoreThresh != 0F) {
        LanelineMapScoreThresh = other.LanelineMapScoreThresh;
      }
      if (other.LanelinePointScoreThresh != 0F) {
        LanelinePointScoreThresh = other.LanelinePointScoreThresh;
      }
      if (other.LanelinePointMinNumThresh != 0) {
        LanelinePointMinNumThresh = other.LanelinePointMinNumThresh;
      }
      if (other.CcValidPixelsRatio != 0F) {
        CcValidPixelsRatio = other.CcValidPixelsRatio;
      }
      if (other.LanelineRejectDistThresh != 0F) {
        LanelineRejectDistThresh = other.LanelineRejectDistThresh;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            OmitBottomLineNum = input.ReadInt32();
            break;
          }
          case 21: {
            LanelineMapScoreThresh = input.ReadFloat();
            break;
          }
          case 29: {
            LanelinePointScoreThresh = input.ReadFloat();
            break;
          }
          case 32: {
            LanelinePointMinNumThresh = input.ReadInt32();
            break;
          }
          case 45: {
            CcValidPixelsRatio = input.ReadFloat();
            break;
          }
          case 53: {
            LanelineRejectDistThresh = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
