// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/camera/lib/traffic_light/tracker/semantic.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Apollo.Perception.Camera.TrafficLight.Tracker {

  /// <summary>Holder for reflection information generated from modules/perception/camera/lib/traffic_light/tracker/semantic.proto</summary>
  public static partial class SemanticReflection {

    #region Descriptor
    /// <summary>File descriptor for modules/perception/camera/lib/traffic_light/tracker/semantic.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SemanticReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkJtb2R1bGVzL3BlcmNlcHRpb24vY2FtZXJhL2xpYi90cmFmZmljX2xpZ2h0",
            "L3RyYWNrZXIvc2VtYW50aWMucHJvdG8SLmFwb2xsby5wZXJjZXB0aW9uLmNh",
            "bWVyYS50cmFmZmljX2xpZ2h0LnRyYWNrZXIidQoTU2VtYW50aWNSZXZpc2VQ",
            "YXJhbRIaChJyZXZpc2VfdGltZV9zZWNvbmQYASABKAISHgoWYmxpbmtfdGhy",
            "ZXNob2xkX3NlY29uZBgCIAEoAhIiChpoeXN0ZXJldGljX3RocmVzaG9sZF9j",
            "b3VudBgDIAEoBWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.Camera.TrafficLight.Tracker.SemanticReviseParam), global::Apollo.Perception.Camera.TrafficLight.Tracker.SemanticReviseParam.Parser, new[]{ "ReviseTimeSecond", "BlinkThresholdSecond", "HystereticThresholdCount" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SemanticReviseParam : pb::IMessage<SemanticReviseParam> {
    private static readonly pb::MessageParser<SemanticReviseParam> _parser = new pb::MessageParser<SemanticReviseParam>(() => new SemanticReviseParam());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SemanticReviseParam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.Camera.TrafficLight.Tracker.SemanticReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SemanticReviseParam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SemanticReviseParam(SemanticReviseParam other) : this() {
      reviseTimeSecond_ = other.reviseTimeSecond_;
      blinkThresholdSecond_ = other.blinkThresholdSecond_;
      hystereticThresholdCount_ = other.hystereticThresholdCount_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SemanticReviseParam Clone() {
      return new SemanticReviseParam(this);
    }

    /// <summary>Field number for the "revise_time_second" field.</summary>
    public const int ReviseTimeSecondFieldNumber = 1;
    private float reviseTimeSecond_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float ReviseTimeSecond {
      get { return reviseTimeSecond_; }
      set {
        reviseTimeSecond_ = value;
      }
    }

    /// <summary>Field number for the "blink_threshold_second" field.</summary>
    public const int BlinkThresholdSecondFieldNumber = 2;
    private float blinkThresholdSecond_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float BlinkThresholdSecond {
      get { return blinkThresholdSecond_; }
      set {
        blinkThresholdSecond_ = value;
      }
    }

    /// <summary>Field number for the "hysteretic_threshold_count" field.</summary>
    public const int HystereticThresholdCountFieldNumber = 3;
    private int hystereticThresholdCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HystereticThresholdCount {
      get { return hystereticThresholdCount_; }
      set {
        hystereticThresholdCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SemanticReviseParam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SemanticReviseParam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReviseTimeSecond != other.ReviseTimeSecond) return false;
      if (BlinkThresholdSecond != other.BlinkThresholdSecond) return false;
      if (HystereticThresholdCount != other.HystereticThresholdCount) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReviseTimeSecond != 0F) hash ^= ReviseTimeSecond.GetHashCode();
      if (BlinkThresholdSecond != 0F) hash ^= BlinkThresholdSecond.GetHashCode();
      if (HystereticThresholdCount != 0) hash ^= HystereticThresholdCount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReviseTimeSecond != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(ReviseTimeSecond);
      }
      if (BlinkThresholdSecond != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(BlinkThresholdSecond);
      }
      if (HystereticThresholdCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(HystereticThresholdCount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReviseTimeSecond != 0F) {
        size += 1 + 4;
      }
      if (BlinkThresholdSecond != 0F) {
        size += 1 + 4;
      }
      if (HystereticThresholdCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HystereticThresholdCount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SemanticReviseParam other) {
      if (other == null) {
        return;
      }
      if (other.ReviseTimeSecond != 0F) {
        ReviseTimeSecond = other.ReviseTimeSecond;
      }
      if (other.BlinkThresholdSecond != 0F) {
        BlinkThresholdSecond = other.BlinkThresholdSecond;
      }
      if (other.HystereticThresholdCount != 0) {
        HystereticThresholdCount = other.HystereticThresholdCount;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 13: {
            ReviseTimeSecond = input.ReadFloat();
            break;
          }
          case 21: {
            BlinkThresholdSecond = input.ReadFloat();
            break;
          }
          case 24: {
            HystereticThresholdCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
