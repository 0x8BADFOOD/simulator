// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/camera/lib/traffic_light/detector/recognition/recognition.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Apollo.Perception.Camera.TrafficLight.Recognition {

  /// <summary>Holder for reflection information generated from modules/perception/camera/lib/traffic_light/detector/recognition/recognition.proto</summary>
  public static partial class RecognitionReflection {

    #region Descriptor
    /// <summary>File descriptor for modules/perception/camera/lib/traffic_light/detector/recognition/recognition.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RecognitionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ClJtb2R1bGVzL3BlcmNlcHRpb24vY2FtZXJhL2xpYi90cmFmZmljX2xpZ2h0",
            "L2RldGVjdG9yL3JlY29nbml0aW9uL3JlY29nbml0aW9uLnByb3RvEjJhcG9s",
            "bG8ucGVyY2VwdGlvbi5jYW1lcmEudHJhZmZpY19saWdodC5yZWNvZ25pdGlv",
            "biKzAgoNQ2xhc3NpZnlQYXJhbRISCgptb2RlbF9uYW1lGAEgASgJEhIKCm1v",
            "ZGVsX3R5cGUYAiABKAkSEgoKaW5wdXRfYmxvYhgDIAEoCRITCgtvdXRwdXRf",
            "YmxvYhgEIAEoCRITCgt3ZWlnaHRfZmlsZRgFIAEoCRISCgpwcm90b19maWxl",
            "GAYgASgJEhoKEmNsYXNzaWZ5X3RocmVzaG9sZBgHIAEoAhIdChVjbGFzc2lm",
            "eV9yZXNpemVfd2lkdGgYCCABKAUSHgoWY2xhc3NpZnlfcmVzaXplX2hlaWdo",
            "dBgJIAEoBRINCgVzY2FsZRgKIAEoAhIOCgZtZWFuX2IYDCABKAISDgoGbWVh",
            "bl9nGA0gASgCEg4KBm1lYW5fchgOIAEoAhIOCgZpc19iZ3IYDyABKAgipgIK",
            "EVJlY29nbml6ZUJveFBhcmFtElkKDnZlcnRpY2FsX21vZGVsGAEgASgLMkEu",
            "YXBvbGxvLnBlcmNlcHRpb24uY2FtZXJhLnRyYWZmaWNfbGlnaHQucmVjb2du",
            "aXRpb24uQ2xhc3NpZnlQYXJhbRJZCg5xdWFkcmF0ZV9tb2RlbBgCIAEoCzJB",
            "LmFwb2xsby5wZXJjZXB0aW9uLmNhbWVyYS50cmFmZmljX2xpZ2h0LnJlY29n",
            "bml0aW9uLkNsYXNzaWZ5UGFyYW0SWwoQaG9yaXpvbnRhbF9tb2RlbBgDIAEo",
            "CzJBLmFwb2xsby5wZXJjZXB0aW9uLmNhbWVyYS50cmFmZmljX2xpZ2h0LnJl",
            "Y29nbml0aW9uLkNsYXNzaWZ5UGFyYW1iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.Camera.TrafficLight.Recognition.ClassifyParam), global::Apollo.Perception.Camera.TrafficLight.Recognition.ClassifyParam.Parser, new[]{ "ModelName", "ModelType", "InputBlob", "OutputBlob", "WeightFile", "ProtoFile", "ClassifyThreshold", "ClassifyResizeWidth", "ClassifyResizeHeight", "Scale", "MeanB", "MeanG", "MeanR", "IsBgr" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.Camera.TrafficLight.Recognition.RecognizeBoxParam), global::Apollo.Perception.Camera.TrafficLight.Recognition.RecognizeBoxParam.Parser, new[]{ "VerticalModel", "QuadrateModel", "HorizontalModel" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ClassifyParam : pb::IMessage<ClassifyParam> {
    private static readonly pb::MessageParser<ClassifyParam> _parser = new pb::MessageParser<ClassifyParam>(() => new ClassifyParam());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClassifyParam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.Camera.TrafficLight.Recognition.RecognitionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClassifyParam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClassifyParam(ClassifyParam other) : this() {
      modelName_ = other.modelName_;
      modelType_ = other.modelType_;
      inputBlob_ = other.inputBlob_;
      outputBlob_ = other.outputBlob_;
      weightFile_ = other.weightFile_;
      protoFile_ = other.protoFile_;
      classifyThreshold_ = other.classifyThreshold_;
      classifyResizeWidth_ = other.classifyResizeWidth_;
      classifyResizeHeight_ = other.classifyResizeHeight_;
      scale_ = other.scale_;
      meanB_ = other.meanB_;
      meanG_ = other.meanG_;
      meanR_ = other.meanR_;
      isBgr_ = other.isBgr_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClassifyParam Clone() {
      return new ClassifyParam(this);
    }

    /// <summary>Field number for the "model_name" field.</summary>
    public const int ModelNameFieldNumber = 1;
    private string modelName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelName {
      get { return modelName_; }
      set {
        modelName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "model_type" field.</summary>
    public const int ModelTypeFieldNumber = 2;
    private string modelType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelType {
      get { return modelType_; }
      set {
        modelType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "input_blob" field.</summary>
    public const int InputBlobFieldNumber = 3;
    private string inputBlob_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InputBlob {
      get { return inputBlob_; }
      set {
        inputBlob_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "output_blob" field.</summary>
    public const int OutputBlobFieldNumber = 4;
    private string outputBlob_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OutputBlob {
      get { return outputBlob_; }
      set {
        outputBlob_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "weight_file" field.</summary>
    public const int WeightFileFieldNumber = 5;
    private string weightFile_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WeightFile {
      get { return weightFile_; }
      set {
        weightFile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "proto_file" field.</summary>
    public const int ProtoFileFieldNumber = 6;
    private string protoFile_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProtoFile {
      get { return protoFile_; }
      set {
        protoFile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "classify_threshold" field.</summary>
    public const int ClassifyThresholdFieldNumber = 7;
    private float classifyThreshold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float ClassifyThreshold {
      get { return classifyThreshold_; }
      set {
        classifyThreshold_ = value;
      }
    }

    /// <summary>Field number for the "classify_resize_width" field.</summary>
    public const int ClassifyResizeWidthFieldNumber = 8;
    private int classifyResizeWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ClassifyResizeWidth {
      get { return classifyResizeWidth_; }
      set {
        classifyResizeWidth_ = value;
      }
    }

    /// <summary>Field number for the "classify_resize_height" field.</summary>
    public const int ClassifyResizeHeightFieldNumber = 9;
    private int classifyResizeHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ClassifyResizeHeight {
      get { return classifyResizeHeight_; }
      set {
        classifyResizeHeight_ = value;
      }
    }

    /// <summary>Field number for the "scale" field.</summary>
    public const int ScaleFieldNumber = 10;
    private float scale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Scale {
      get { return scale_; }
      set {
        scale_ = value;
      }
    }

    /// <summary>Field number for the "mean_b" field.</summary>
    public const int MeanBFieldNumber = 12;
    private float meanB_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MeanB {
      get { return meanB_; }
      set {
        meanB_ = value;
      }
    }

    /// <summary>Field number for the "mean_g" field.</summary>
    public const int MeanGFieldNumber = 13;
    private float meanG_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MeanG {
      get { return meanG_; }
      set {
        meanG_ = value;
      }
    }

    /// <summary>Field number for the "mean_r" field.</summary>
    public const int MeanRFieldNumber = 14;
    private float meanR_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MeanR {
      get { return meanR_; }
      set {
        meanR_ = value;
      }
    }

    /// <summary>Field number for the "is_bgr" field.</summary>
    public const int IsBgrFieldNumber = 15;
    private bool isBgr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBgr {
      get { return isBgr_; }
      set {
        isBgr_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClassifyParam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClassifyParam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ModelName != other.ModelName) return false;
      if (ModelType != other.ModelType) return false;
      if (InputBlob != other.InputBlob) return false;
      if (OutputBlob != other.OutputBlob) return false;
      if (WeightFile != other.WeightFile) return false;
      if (ProtoFile != other.ProtoFile) return false;
      if (ClassifyThreshold != other.ClassifyThreshold) return false;
      if (ClassifyResizeWidth != other.ClassifyResizeWidth) return false;
      if (ClassifyResizeHeight != other.ClassifyResizeHeight) return false;
      if (Scale != other.Scale) return false;
      if (MeanB != other.MeanB) return false;
      if (MeanG != other.MeanG) return false;
      if (MeanR != other.MeanR) return false;
      if (IsBgr != other.IsBgr) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ModelName.Length != 0) hash ^= ModelName.GetHashCode();
      if (ModelType.Length != 0) hash ^= ModelType.GetHashCode();
      if (InputBlob.Length != 0) hash ^= InputBlob.GetHashCode();
      if (OutputBlob.Length != 0) hash ^= OutputBlob.GetHashCode();
      if (WeightFile.Length != 0) hash ^= WeightFile.GetHashCode();
      if (ProtoFile.Length != 0) hash ^= ProtoFile.GetHashCode();
      if (ClassifyThreshold != 0F) hash ^= ClassifyThreshold.GetHashCode();
      if (ClassifyResizeWidth != 0) hash ^= ClassifyResizeWidth.GetHashCode();
      if (ClassifyResizeHeight != 0) hash ^= ClassifyResizeHeight.GetHashCode();
      if (Scale != 0F) hash ^= Scale.GetHashCode();
      if (MeanB != 0F) hash ^= MeanB.GetHashCode();
      if (MeanG != 0F) hash ^= MeanG.GetHashCode();
      if (MeanR != 0F) hash ^= MeanR.GetHashCode();
      if (IsBgr != false) hash ^= IsBgr.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ModelName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ModelName);
      }
      if (ModelType.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ModelType);
      }
      if (InputBlob.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(InputBlob);
      }
      if (OutputBlob.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OutputBlob);
      }
      if (WeightFile.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(WeightFile);
      }
      if (ProtoFile.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ProtoFile);
      }
      if (ClassifyThreshold != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(ClassifyThreshold);
      }
      if (ClassifyResizeWidth != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ClassifyResizeWidth);
      }
      if (ClassifyResizeHeight != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(ClassifyResizeHeight);
      }
      if (Scale != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(Scale);
      }
      if (MeanB != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(MeanB);
      }
      if (MeanG != 0F) {
        output.WriteRawTag(109);
        output.WriteFloat(MeanG);
      }
      if (MeanR != 0F) {
        output.WriteRawTag(117);
        output.WriteFloat(MeanR);
      }
      if (IsBgr != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsBgr);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ModelName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelName);
      }
      if (ModelType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelType);
      }
      if (InputBlob.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InputBlob);
      }
      if (OutputBlob.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OutputBlob);
      }
      if (WeightFile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WeightFile);
      }
      if (ProtoFile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProtoFile);
      }
      if (ClassifyThreshold != 0F) {
        size += 1 + 4;
      }
      if (ClassifyResizeWidth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClassifyResizeWidth);
      }
      if (ClassifyResizeHeight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClassifyResizeHeight);
      }
      if (Scale != 0F) {
        size += 1 + 4;
      }
      if (MeanB != 0F) {
        size += 1 + 4;
      }
      if (MeanG != 0F) {
        size += 1 + 4;
      }
      if (MeanR != 0F) {
        size += 1 + 4;
      }
      if (IsBgr != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClassifyParam other) {
      if (other == null) {
        return;
      }
      if (other.ModelName.Length != 0) {
        ModelName = other.ModelName;
      }
      if (other.ModelType.Length != 0) {
        ModelType = other.ModelType;
      }
      if (other.InputBlob.Length != 0) {
        InputBlob = other.InputBlob;
      }
      if (other.OutputBlob.Length != 0) {
        OutputBlob = other.OutputBlob;
      }
      if (other.WeightFile.Length != 0) {
        WeightFile = other.WeightFile;
      }
      if (other.ProtoFile.Length != 0) {
        ProtoFile = other.ProtoFile;
      }
      if (other.ClassifyThreshold != 0F) {
        ClassifyThreshold = other.ClassifyThreshold;
      }
      if (other.ClassifyResizeWidth != 0) {
        ClassifyResizeWidth = other.ClassifyResizeWidth;
      }
      if (other.ClassifyResizeHeight != 0) {
        ClassifyResizeHeight = other.ClassifyResizeHeight;
      }
      if (other.Scale != 0F) {
        Scale = other.Scale;
      }
      if (other.MeanB != 0F) {
        MeanB = other.MeanB;
      }
      if (other.MeanG != 0F) {
        MeanG = other.MeanG;
      }
      if (other.MeanR != 0F) {
        MeanR = other.MeanR;
      }
      if (other.IsBgr != false) {
        IsBgr = other.IsBgr;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ModelName = input.ReadString();
            break;
          }
          case 18: {
            ModelType = input.ReadString();
            break;
          }
          case 26: {
            InputBlob = input.ReadString();
            break;
          }
          case 34: {
            OutputBlob = input.ReadString();
            break;
          }
          case 42: {
            WeightFile = input.ReadString();
            break;
          }
          case 50: {
            ProtoFile = input.ReadString();
            break;
          }
          case 61: {
            ClassifyThreshold = input.ReadFloat();
            break;
          }
          case 64: {
            ClassifyResizeWidth = input.ReadInt32();
            break;
          }
          case 72: {
            ClassifyResizeHeight = input.ReadInt32();
            break;
          }
          case 85: {
            Scale = input.ReadFloat();
            break;
          }
          case 101: {
            MeanB = input.ReadFloat();
            break;
          }
          case 109: {
            MeanG = input.ReadFloat();
            break;
          }
          case 117: {
            MeanR = input.ReadFloat();
            break;
          }
          case 120: {
            IsBgr = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RecognizeBoxParam : pb::IMessage<RecognizeBoxParam> {
    private static readonly pb::MessageParser<RecognizeBoxParam> _parser = new pb::MessageParser<RecognizeBoxParam>(() => new RecognizeBoxParam());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecognizeBoxParam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.Camera.TrafficLight.Recognition.RecognitionReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecognizeBoxParam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecognizeBoxParam(RecognizeBoxParam other) : this() {
      VerticalModel = other.verticalModel_ != null ? other.VerticalModel.Clone() : null;
      QuadrateModel = other.quadrateModel_ != null ? other.QuadrateModel.Clone() : null;
      HorizontalModel = other.horizontalModel_ != null ? other.HorizontalModel.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecognizeBoxParam Clone() {
      return new RecognizeBoxParam(this);
    }

    /// <summary>Field number for the "vertical_model" field.</summary>
    public const int VerticalModelFieldNumber = 1;
    private global::Apollo.Perception.Camera.TrafficLight.Recognition.ClassifyParam verticalModel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Perception.Camera.TrafficLight.Recognition.ClassifyParam VerticalModel {
      get { return verticalModel_; }
      set {
        verticalModel_ = value;
      }
    }

    /// <summary>Field number for the "quadrate_model" field.</summary>
    public const int QuadrateModelFieldNumber = 2;
    private global::Apollo.Perception.Camera.TrafficLight.Recognition.ClassifyParam quadrateModel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Perception.Camera.TrafficLight.Recognition.ClassifyParam QuadrateModel {
      get { return quadrateModel_; }
      set {
        quadrateModel_ = value;
      }
    }

    /// <summary>Field number for the "horizontal_model" field.</summary>
    public const int HorizontalModelFieldNumber = 3;
    private global::Apollo.Perception.Camera.TrafficLight.Recognition.ClassifyParam horizontalModel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Perception.Camera.TrafficLight.Recognition.ClassifyParam HorizontalModel {
      get { return horizontalModel_; }
      set {
        horizontalModel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecognizeBoxParam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecognizeBoxParam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VerticalModel, other.VerticalModel)) return false;
      if (!object.Equals(QuadrateModel, other.QuadrateModel)) return false;
      if (!object.Equals(HorizontalModel, other.HorizontalModel)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (verticalModel_ != null) hash ^= VerticalModel.GetHashCode();
      if (quadrateModel_ != null) hash ^= QuadrateModel.GetHashCode();
      if (horizontalModel_ != null) hash ^= HorizontalModel.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (verticalModel_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VerticalModel);
      }
      if (quadrateModel_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(QuadrateModel);
      }
      if (horizontalModel_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(HorizontalModel);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (verticalModel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VerticalModel);
      }
      if (quadrateModel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(QuadrateModel);
      }
      if (horizontalModel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HorizontalModel);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecognizeBoxParam other) {
      if (other == null) {
        return;
      }
      if (other.verticalModel_ != null) {
        if (verticalModel_ == null) {
          verticalModel_ = new global::Apollo.Perception.Camera.TrafficLight.Recognition.ClassifyParam();
        }
        VerticalModel.MergeFrom(other.VerticalModel);
      }
      if (other.quadrateModel_ != null) {
        if (quadrateModel_ == null) {
          quadrateModel_ = new global::Apollo.Perception.Camera.TrafficLight.Recognition.ClassifyParam();
        }
        QuadrateModel.MergeFrom(other.QuadrateModel);
      }
      if (other.horizontalModel_ != null) {
        if (horizontalModel_ == null) {
          horizontalModel_ = new global::Apollo.Perception.Camera.TrafficLight.Recognition.ClassifyParam();
        }
        HorizontalModel.MergeFrom(other.HorizontalModel);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (verticalModel_ == null) {
              verticalModel_ = new global::Apollo.Perception.Camera.TrafficLight.Recognition.ClassifyParam();
            }
            input.ReadMessage(verticalModel_);
            break;
          }
          case 18: {
            if (quadrateModel_ == null) {
              quadrateModel_ = new global::Apollo.Perception.Camera.TrafficLight.Recognition.ClassifyParam();
            }
            input.ReadMessage(quadrateModel_);
            break;
          }
          case 26: {
            if (horizontalModel_ == null) {
              horizontalModel_ = new global::Apollo.Perception.Camera.TrafficLight.Recognition.ClassifyParam();
            }
            input.ReadMessage(horizontalModel_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
