// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/camera/app/perception.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Apollo.Perception.Camera.App {

  /// <summary>Holder for reflection information generated from modules/perception/camera/app/perception.proto</summary>
  public static partial class PerceptionReflection {

    #region Descriptor
    /// <summary>File descriptor for modules/perception/camera/app/perception.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PerceptionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci5tb2R1bGVzL3BlcmNlcHRpb24vY2FtZXJhL2FwcC9wZXJjZXB0aW9uLnBy",
            "b3RvEhxhcG9sbG8ucGVyY2VwdGlvbi5jYW1lcmEuYXBwIkIKC1BsdWdpblBh",
            "cmFtEgwKBG5hbWUYASABKAkSEAoIcm9vdF9kaXIYAiABKAkSEwoLY29uZmln",
            "X2ZpbGUYAyABKAkiZQoNRGV0ZWN0b3JQYXJhbRI/CgxwbHVnaW5fcGFyYW0Y",
            "ASABKAsyKS5hcG9sbG8ucGVyY2VwdGlvbi5jYW1lcmEuYXBwLlBsdWdpblBh",
            "cmFtEhMKC2NhbWVyYV9uYW1lGAIgASgJIk8KDFRyYWNrZXJQYXJhbRI/Cgxw",
            "bHVnaW5fcGFyYW0YASABKAsyKS5hcG9sbG8ucGVyY2VwdGlvbi5jYW1lcmEu",
            "YXBwLlBsdWdpblBhcmFtIlMKEFRyYW5zZm9ybWVyUGFyYW0SPwoMcGx1Z2lu",
            "X3BhcmFtGAEgASgLMikuYXBvbGxvLnBlcmNlcHRpb24uY2FtZXJhLmFwcC5Q",
            "bHVnaW5QYXJhbSJVChJQb3N0cHJvY2Vzc29yUGFyYW0SPwoMcGx1Z2luX3Bh",
            "cmFtGAEgASgLMikuYXBvbGxvLnBlcmNlcHRpb24uY2FtZXJhLmFwcC5QbHVn",
            "aW5QYXJhbSJPCgxGZWF0dXJlUGFyYW0SPwoMcGx1Z2luX3BhcmFtGAEgASgL",
            "MikuYXBvbGxvLnBlcmNlcHRpb24uY2FtZXJhLmFwcC5QbHVnaW5QYXJhbSLQ",
            "AQoKRGVidWdQYXJhbRIZChFkZXRlY3Rpb25fb3V0X2RpchgBIAEoCRIhChl0",
            "cmFja2VkX2RldGVjdGlvbl9vdXRfZGlyGAIgASgJEhYKDnRyYWNrX291dF9m",
            "aWxlGAMgASgJEhoKEmRldGVjdF9mZWF0dXJlX2RpchgEIAEoCRIUCgxsYW5l",
            "X291dF9kaXIYBSABKAkSHQoVY2FtZXJhMndvcmxkX291dF9maWxlGAYgASgJ",
            "EhsKE2NhbGlicmF0aW9uX291dF9kaXIYByABKAki8wEKE0xhbmVQZXJjZXB0",
            "aW9uUGFyYW0SSAoTbGFuZV9kZXRlY3Rvcl9wYXJhbRgBIAEoCzIrLmFwb2xs",
            "by5wZXJjZXB0aW9uLmNhbWVyYS5hcHAuRGV0ZWN0b3JQYXJhbRJLChhsYW5l",
            "X3Bvc3Rwcm9jZXNzb3JfcGFyYW0YAiABKAsyKS5hcG9sbG8ucGVyY2VwdGlv",
            "bi5jYW1lcmEuYXBwLlBsdWdpblBhcmFtEkUKEmxhbmVfdHJhY2tlcl9wYXJh",
            "bRgDIAEoCzIpLmFwb2xsby5wZXJjZXB0aW9uLmNhbWVyYS5hcHAuUGx1Z2lu",
            "UGFyYW0idQoXQ2FsaWJyYXRpb25TZXJ2aWNlUGFyYW0SGQoRY2FsaWJyYXRv",
            "cl9tZXRob2QYAiABKAkSPwoMcGx1Z2luX3BhcmFtGAMgASgLMikuYXBvbGxv",
            "LnBlcmNlcHRpb24uY2FtZXJhLmFwcC5QbHVnaW5QYXJhbSJWChNPYmplY3RU",
            "ZW1wbGF0ZVBhcmFtEj8KDHBsdWdpbl9wYXJhbRgBIAEoCzIpLmFwb2xsby5w",
            "ZXJjZXB0aW9uLmNhbWVyYS5hcHAuUGx1Z2luUGFyYW0i0wUKD1BlcmNlcHRp",
            "b25QYXJhbRJDCg5kZXRlY3Rvcl9wYXJhbRgBIAMoCzIrLmFwb2xsby5wZXJj",
            "ZXB0aW9uLmNhbWVyYS5hcHAuRGV0ZWN0b3JQYXJhbRJBCg10cmFja2VyX3Bh",
            "cmFtGAIgASgLMiouYXBvbGxvLnBlcmNlcHRpb24uY2FtZXJhLmFwcC5UcmFj",
            "a2VyUGFyYW0SSQoRdHJhbnNmb3JtZXJfcGFyYW0YAyABKAsyLi5hcG9sbG8u",
            "cGVyY2VwdGlvbi5jYW1lcmEuYXBwLlRyYW5zZm9ybWVyUGFyYW0STQoTcG9z",
            "dHByb2Nlc3Nvcl9wYXJhbRgEIAEoCzIwLmFwb2xsby5wZXJjZXB0aW9uLmNh",
            "bWVyYS5hcHAuUG9zdHByb2Nlc3NvclBhcmFtEg4KBmdwdV9pZBgFIAEoBRIZ",
            "ChFjYW1lcmFfaW50cmluc2ljcxgGIAEoCRJBCg1mZWF0dXJlX3BhcmFtGAcg",
            "ASgLMiouYXBvbGxvLnBlcmNlcHRpb24uY2FtZXJhLmFwcC5GZWF0dXJlUGFy",
            "YW0SRQoKbGFuZV9wYXJhbRgIIAEoCzIxLmFwb2xsby5wZXJjZXB0aW9uLmNh",
            "bWVyYS5hcHAuTGFuZVBlcmNlcHRpb25QYXJhbRJYChljYWxpYnJhdGlvbl9z",
            "ZXJ2aWNlX3BhcmFtGAkgASgLMjUuYXBvbGxvLnBlcmNlcHRpb24uY2FtZXJh",
            "LmFwcC5DYWxpYnJhdGlvblNlcnZpY2VQYXJhbRI9CgtkZWJ1Z19wYXJhbRgK",
            "IAEoCzIoLmFwb2xsby5wZXJjZXB0aW9uLmNhbWVyYS5hcHAuRGVidWdQYXJh",
            "bRJQChVvYmplY3RfdGVtcGxhdGVfcGFyYW0YCyABKAsyMS5hcG9sbG8ucGVy",
            "Y2VwdGlvbi5jYW1lcmEuYXBwLk9iamVjdFRlbXBsYXRlUGFyYW0iqwEKEVRy",
            "YWZmaWNMaWdodFBhcmFtEkMKDmRldGVjdG9yX3BhcmFtGAEgAygLMisuYXBv",
            "bGxvLnBlcmNlcHRpb24uY2FtZXJhLmFwcC5EZXRlY3RvclBhcmFtEkEKDXRy",
            "YWNrZXJfcGFyYW0YAiABKAsyKi5hcG9sbG8ucGVyY2VwdGlvbi5jYW1lcmEu",
            "YXBwLlRyYWNrZXJQYXJhbRIOCgZncHVfaWQYAyABKAViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.Camera.App.PluginParam), global::Apollo.Perception.Camera.App.PluginParam.Parser, new[]{ "Name", "RootDir", "ConfigFile" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.Camera.App.DetectorParam), global::Apollo.Perception.Camera.App.DetectorParam.Parser, new[]{ "PluginParam", "CameraName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.Camera.App.TrackerParam), global::Apollo.Perception.Camera.App.TrackerParam.Parser, new[]{ "PluginParam" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.Camera.App.TransformerParam), global::Apollo.Perception.Camera.App.TransformerParam.Parser, new[]{ "PluginParam" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.Camera.App.PostprocessorParam), global::Apollo.Perception.Camera.App.PostprocessorParam.Parser, new[]{ "PluginParam" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.Camera.App.FeatureParam), global::Apollo.Perception.Camera.App.FeatureParam.Parser, new[]{ "PluginParam" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.Camera.App.DebugParam), global::Apollo.Perception.Camera.App.DebugParam.Parser, new[]{ "DetectionOutDir", "TrackedDetectionOutDir", "TrackOutFile", "DetectFeatureDir", "LaneOutDir", "Camera2WorldOutFile", "CalibrationOutDir" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.Camera.App.LanePerceptionParam), global::Apollo.Perception.Camera.App.LanePerceptionParam.Parser, new[]{ "LaneDetectorParam", "LanePostprocessorParam", "LaneTrackerParam" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.Camera.App.CalibrationServiceParam), global::Apollo.Perception.Camera.App.CalibrationServiceParam.Parser, new[]{ "CalibratorMethod", "PluginParam" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.Camera.App.ObjectTemplateParam), global::Apollo.Perception.Camera.App.ObjectTemplateParam.Parser, new[]{ "PluginParam" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.Camera.App.PerceptionParam), global::Apollo.Perception.Camera.App.PerceptionParam.Parser, new[]{ "DetectorParam", "TrackerParam", "TransformerParam", "PostprocessorParam", "GpuId", "CameraIntrinsics", "FeatureParam", "LaneParam", "CalibrationServiceParam", "DebugParam", "ObjectTemplateParam" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.Camera.App.TrafficLightParam), global::Apollo.Perception.Camera.App.TrafficLightParam.Parser, new[]{ "DetectorParam", "TrackerParam", "GpuId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PluginParam : pb::IMessage<PluginParam> {
    private static readonly pb::MessageParser<PluginParam> _parser = new pb::MessageParser<PluginParam>(() => new PluginParam());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PluginParam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.Camera.App.PerceptionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PluginParam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PluginParam(PluginParam other) : this() {
      name_ = other.name_;
      rootDir_ = other.rootDir_;
      configFile_ = other.configFile_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PluginParam Clone() {
      return new PluginParam(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "root_dir" field.</summary>
    public const int RootDirFieldNumber = 2;
    private string rootDir_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RootDir {
      get { return rootDir_; }
      set {
        rootDir_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config_file" field.</summary>
    public const int ConfigFileFieldNumber = 3;
    private string configFile_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConfigFile {
      get { return configFile_; }
      set {
        configFile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PluginParam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PluginParam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (RootDir != other.RootDir) return false;
      if (ConfigFile != other.ConfigFile) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (RootDir.Length != 0) hash ^= RootDir.GetHashCode();
      if (ConfigFile.Length != 0) hash ^= ConfigFile.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (RootDir.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RootDir);
      }
      if (ConfigFile.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ConfigFile);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (RootDir.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RootDir);
      }
      if (ConfigFile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConfigFile);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PluginParam other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.RootDir.Length != 0) {
        RootDir = other.RootDir;
      }
      if (other.ConfigFile.Length != 0) {
        ConfigFile = other.ConfigFile;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            RootDir = input.ReadString();
            break;
          }
          case 26: {
            ConfigFile = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DetectorParam : pb::IMessage<DetectorParam> {
    private static readonly pb::MessageParser<DetectorParam> _parser = new pb::MessageParser<DetectorParam>(() => new DetectorParam());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DetectorParam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.Camera.App.PerceptionReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectorParam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectorParam(DetectorParam other) : this() {
      PluginParam = other.pluginParam_ != null ? other.PluginParam.Clone() : null;
      cameraName_ = other.cameraName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectorParam Clone() {
      return new DetectorParam(this);
    }

    /// <summary>Field number for the "plugin_param" field.</summary>
    public const int PluginParamFieldNumber = 1;
    private global::Apollo.Perception.Camera.App.PluginParam pluginParam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Perception.Camera.App.PluginParam PluginParam {
      get { return pluginParam_; }
      set {
        pluginParam_ = value;
      }
    }

    /// <summary>Field number for the "camera_name" field.</summary>
    public const int CameraNameFieldNumber = 2;
    private string cameraName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CameraName {
      get { return cameraName_; }
      set {
        cameraName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DetectorParam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DetectorParam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PluginParam, other.PluginParam)) return false;
      if (CameraName != other.CameraName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (pluginParam_ != null) hash ^= PluginParam.GetHashCode();
      if (CameraName.Length != 0) hash ^= CameraName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (pluginParam_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PluginParam);
      }
      if (CameraName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CameraName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (pluginParam_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PluginParam);
      }
      if (CameraName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CameraName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DetectorParam other) {
      if (other == null) {
        return;
      }
      if (other.pluginParam_ != null) {
        if (pluginParam_ == null) {
          pluginParam_ = new global::Apollo.Perception.Camera.App.PluginParam();
        }
        PluginParam.MergeFrom(other.PluginParam);
      }
      if (other.CameraName.Length != 0) {
        CameraName = other.CameraName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (pluginParam_ == null) {
              pluginParam_ = new global::Apollo.Perception.Camera.App.PluginParam();
            }
            input.ReadMessage(pluginParam_);
            break;
          }
          case 18: {
            CameraName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TrackerParam : pb::IMessage<TrackerParam> {
    private static readonly pb::MessageParser<TrackerParam> _parser = new pb::MessageParser<TrackerParam>(() => new TrackerParam());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TrackerParam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.Camera.App.PerceptionReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrackerParam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrackerParam(TrackerParam other) : this() {
      PluginParam = other.pluginParam_ != null ? other.PluginParam.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrackerParam Clone() {
      return new TrackerParam(this);
    }

    /// <summary>Field number for the "plugin_param" field.</summary>
    public const int PluginParamFieldNumber = 1;
    private global::Apollo.Perception.Camera.App.PluginParam pluginParam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Perception.Camera.App.PluginParam PluginParam {
      get { return pluginParam_; }
      set {
        pluginParam_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TrackerParam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TrackerParam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PluginParam, other.PluginParam)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (pluginParam_ != null) hash ^= PluginParam.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (pluginParam_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PluginParam);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (pluginParam_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PluginParam);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TrackerParam other) {
      if (other == null) {
        return;
      }
      if (other.pluginParam_ != null) {
        if (pluginParam_ == null) {
          pluginParam_ = new global::Apollo.Perception.Camera.App.PluginParam();
        }
        PluginParam.MergeFrom(other.PluginParam);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (pluginParam_ == null) {
              pluginParam_ = new global::Apollo.Perception.Camera.App.PluginParam();
            }
            input.ReadMessage(pluginParam_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransformerParam : pb::IMessage<TransformerParam> {
    private static readonly pb::MessageParser<TransformerParam> _parser = new pb::MessageParser<TransformerParam>(() => new TransformerParam());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransformerParam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.Camera.App.PerceptionReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransformerParam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransformerParam(TransformerParam other) : this() {
      PluginParam = other.pluginParam_ != null ? other.PluginParam.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransformerParam Clone() {
      return new TransformerParam(this);
    }

    /// <summary>Field number for the "plugin_param" field.</summary>
    public const int PluginParamFieldNumber = 1;
    private global::Apollo.Perception.Camera.App.PluginParam pluginParam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Perception.Camera.App.PluginParam PluginParam {
      get { return pluginParam_; }
      set {
        pluginParam_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransformerParam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransformerParam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PluginParam, other.PluginParam)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (pluginParam_ != null) hash ^= PluginParam.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (pluginParam_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PluginParam);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (pluginParam_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PluginParam);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransformerParam other) {
      if (other == null) {
        return;
      }
      if (other.pluginParam_ != null) {
        if (pluginParam_ == null) {
          pluginParam_ = new global::Apollo.Perception.Camera.App.PluginParam();
        }
        PluginParam.MergeFrom(other.PluginParam);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (pluginParam_ == null) {
              pluginParam_ = new global::Apollo.Perception.Camera.App.PluginParam();
            }
            input.ReadMessage(pluginParam_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostprocessorParam : pb::IMessage<PostprocessorParam> {
    private static readonly pb::MessageParser<PostprocessorParam> _parser = new pb::MessageParser<PostprocessorParam>(() => new PostprocessorParam());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostprocessorParam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.Camera.App.PerceptionReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostprocessorParam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostprocessorParam(PostprocessorParam other) : this() {
      PluginParam = other.pluginParam_ != null ? other.PluginParam.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostprocessorParam Clone() {
      return new PostprocessorParam(this);
    }

    /// <summary>Field number for the "plugin_param" field.</summary>
    public const int PluginParamFieldNumber = 1;
    private global::Apollo.Perception.Camera.App.PluginParam pluginParam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Perception.Camera.App.PluginParam PluginParam {
      get { return pluginParam_; }
      set {
        pluginParam_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostprocessorParam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostprocessorParam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PluginParam, other.PluginParam)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (pluginParam_ != null) hash ^= PluginParam.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (pluginParam_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PluginParam);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (pluginParam_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PluginParam);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostprocessorParam other) {
      if (other == null) {
        return;
      }
      if (other.pluginParam_ != null) {
        if (pluginParam_ == null) {
          pluginParam_ = new global::Apollo.Perception.Camera.App.PluginParam();
        }
        PluginParam.MergeFrom(other.PluginParam);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (pluginParam_ == null) {
              pluginParam_ = new global::Apollo.Perception.Camera.App.PluginParam();
            }
            input.ReadMessage(pluginParam_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FeatureParam : pb::IMessage<FeatureParam> {
    private static readonly pb::MessageParser<FeatureParam> _parser = new pb::MessageParser<FeatureParam>(() => new FeatureParam());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeatureParam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.Camera.App.PerceptionReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureParam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureParam(FeatureParam other) : this() {
      PluginParam = other.pluginParam_ != null ? other.PluginParam.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureParam Clone() {
      return new FeatureParam(this);
    }

    /// <summary>Field number for the "plugin_param" field.</summary>
    public const int PluginParamFieldNumber = 1;
    private global::Apollo.Perception.Camera.App.PluginParam pluginParam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Perception.Camera.App.PluginParam PluginParam {
      get { return pluginParam_; }
      set {
        pluginParam_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeatureParam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeatureParam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PluginParam, other.PluginParam)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (pluginParam_ != null) hash ^= PluginParam.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (pluginParam_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PluginParam);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (pluginParam_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PluginParam);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeatureParam other) {
      if (other == null) {
        return;
      }
      if (other.pluginParam_ != null) {
        if (pluginParam_ == null) {
          pluginParam_ = new global::Apollo.Perception.Camera.App.PluginParam();
        }
        PluginParam.MergeFrom(other.PluginParam);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (pluginParam_ == null) {
              pluginParam_ = new global::Apollo.Perception.Camera.App.PluginParam();
            }
            input.ReadMessage(pluginParam_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DebugParam : pb::IMessage<DebugParam> {
    private static readonly pb::MessageParser<DebugParam> _parser = new pb::MessageParser<DebugParam>(() => new DebugParam());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DebugParam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.Camera.App.PerceptionReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DebugParam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DebugParam(DebugParam other) : this() {
      detectionOutDir_ = other.detectionOutDir_;
      trackedDetectionOutDir_ = other.trackedDetectionOutDir_;
      trackOutFile_ = other.trackOutFile_;
      detectFeatureDir_ = other.detectFeatureDir_;
      laneOutDir_ = other.laneOutDir_;
      camera2WorldOutFile_ = other.camera2WorldOutFile_;
      calibrationOutDir_ = other.calibrationOutDir_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DebugParam Clone() {
      return new DebugParam(this);
    }

    /// <summary>Field number for the "detection_out_dir" field.</summary>
    public const int DetectionOutDirFieldNumber = 1;
    private string detectionOutDir_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DetectionOutDir {
      get { return detectionOutDir_; }
      set {
        detectionOutDir_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tracked_detection_out_dir" field.</summary>
    public const int TrackedDetectionOutDirFieldNumber = 2;
    private string trackedDetectionOutDir_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TrackedDetectionOutDir {
      get { return trackedDetectionOutDir_; }
      set {
        trackedDetectionOutDir_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "track_out_file" field.</summary>
    public const int TrackOutFileFieldNumber = 3;
    private string trackOutFile_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TrackOutFile {
      get { return trackOutFile_; }
      set {
        trackOutFile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "detect_feature_dir" field.</summary>
    public const int DetectFeatureDirFieldNumber = 4;
    private string detectFeatureDir_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DetectFeatureDir {
      get { return detectFeatureDir_; }
      set {
        detectFeatureDir_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lane_out_dir" field.</summary>
    public const int LaneOutDirFieldNumber = 5;
    private string laneOutDir_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LaneOutDir {
      get { return laneOutDir_; }
      set {
        laneOutDir_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "camera2world_out_file" field.</summary>
    public const int Camera2WorldOutFileFieldNumber = 6;
    private string camera2WorldOutFile_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Camera2WorldOutFile {
      get { return camera2WorldOutFile_; }
      set {
        camera2WorldOutFile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "calibration_out_dir" field.</summary>
    public const int CalibrationOutDirFieldNumber = 7;
    private string calibrationOutDir_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CalibrationOutDir {
      get { return calibrationOutDir_; }
      set {
        calibrationOutDir_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DebugParam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DebugParam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DetectionOutDir != other.DetectionOutDir) return false;
      if (TrackedDetectionOutDir != other.TrackedDetectionOutDir) return false;
      if (TrackOutFile != other.TrackOutFile) return false;
      if (DetectFeatureDir != other.DetectFeatureDir) return false;
      if (LaneOutDir != other.LaneOutDir) return false;
      if (Camera2WorldOutFile != other.Camera2WorldOutFile) return false;
      if (CalibrationOutDir != other.CalibrationOutDir) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DetectionOutDir.Length != 0) hash ^= DetectionOutDir.GetHashCode();
      if (TrackedDetectionOutDir.Length != 0) hash ^= TrackedDetectionOutDir.GetHashCode();
      if (TrackOutFile.Length != 0) hash ^= TrackOutFile.GetHashCode();
      if (DetectFeatureDir.Length != 0) hash ^= DetectFeatureDir.GetHashCode();
      if (LaneOutDir.Length != 0) hash ^= LaneOutDir.GetHashCode();
      if (Camera2WorldOutFile.Length != 0) hash ^= Camera2WorldOutFile.GetHashCode();
      if (CalibrationOutDir.Length != 0) hash ^= CalibrationOutDir.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DetectionOutDir.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DetectionOutDir);
      }
      if (TrackedDetectionOutDir.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TrackedDetectionOutDir);
      }
      if (TrackOutFile.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TrackOutFile);
      }
      if (DetectFeatureDir.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DetectFeatureDir);
      }
      if (LaneOutDir.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(LaneOutDir);
      }
      if (Camera2WorldOutFile.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Camera2WorldOutFile);
      }
      if (CalibrationOutDir.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CalibrationOutDir);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DetectionOutDir.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DetectionOutDir);
      }
      if (TrackedDetectionOutDir.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TrackedDetectionOutDir);
      }
      if (TrackOutFile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TrackOutFile);
      }
      if (DetectFeatureDir.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DetectFeatureDir);
      }
      if (LaneOutDir.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LaneOutDir);
      }
      if (Camera2WorldOutFile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Camera2WorldOutFile);
      }
      if (CalibrationOutDir.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CalibrationOutDir);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DebugParam other) {
      if (other == null) {
        return;
      }
      if (other.DetectionOutDir.Length != 0) {
        DetectionOutDir = other.DetectionOutDir;
      }
      if (other.TrackedDetectionOutDir.Length != 0) {
        TrackedDetectionOutDir = other.TrackedDetectionOutDir;
      }
      if (other.TrackOutFile.Length != 0) {
        TrackOutFile = other.TrackOutFile;
      }
      if (other.DetectFeatureDir.Length != 0) {
        DetectFeatureDir = other.DetectFeatureDir;
      }
      if (other.LaneOutDir.Length != 0) {
        LaneOutDir = other.LaneOutDir;
      }
      if (other.Camera2WorldOutFile.Length != 0) {
        Camera2WorldOutFile = other.Camera2WorldOutFile;
      }
      if (other.CalibrationOutDir.Length != 0) {
        CalibrationOutDir = other.CalibrationOutDir;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            DetectionOutDir = input.ReadString();
            break;
          }
          case 18: {
            TrackedDetectionOutDir = input.ReadString();
            break;
          }
          case 26: {
            TrackOutFile = input.ReadString();
            break;
          }
          case 34: {
            DetectFeatureDir = input.ReadString();
            break;
          }
          case 42: {
            LaneOutDir = input.ReadString();
            break;
          }
          case 50: {
            Camera2WorldOutFile = input.ReadString();
            break;
          }
          case 58: {
            CalibrationOutDir = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LanePerceptionParam : pb::IMessage<LanePerceptionParam> {
    private static readonly pb::MessageParser<LanePerceptionParam> _parser = new pb::MessageParser<LanePerceptionParam>(() => new LanePerceptionParam());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LanePerceptionParam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.Camera.App.PerceptionReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LanePerceptionParam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LanePerceptionParam(LanePerceptionParam other) : this() {
      LaneDetectorParam = other.laneDetectorParam_ != null ? other.LaneDetectorParam.Clone() : null;
      LanePostprocessorParam = other.lanePostprocessorParam_ != null ? other.LanePostprocessorParam.Clone() : null;
      LaneTrackerParam = other.laneTrackerParam_ != null ? other.LaneTrackerParam.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LanePerceptionParam Clone() {
      return new LanePerceptionParam(this);
    }

    /// <summary>Field number for the "lane_detector_param" field.</summary>
    public const int LaneDetectorParamFieldNumber = 1;
    private global::Apollo.Perception.Camera.App.DetectorParam laneDetectorParam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Perception.Camera.App.DetectorParam LaneDetectorParam {
      get { return laneDetectorParam_; }
      set {
        laneDetectorParam_ = value;
      }
    }

    /// <summary>Field number for the "lane_postprocessor_param" field.</summary>
    public const int LanePostprocessorParamFieldNumber = 2;
    private global::Apollo.Perception.Camera.App.PluginParam lanePostprocessorParam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Perception.Camera.App.PluginParam LanePostprocessorParam {
      get { return lanePostprocessorParam_; }
      set {
        lanePostprocessorParam_ = value;
      }
    }

    /// <summary>Field number for the "lane_tracker_param" field.</summary>
    public const int LaneTrackerParamFieldNumber = 3;
    private global::Apollo.Perception.Camera.App.PluginParam laneTrackerParam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Perception.Camera.App.PluginParam LaneTrackerParam {
      get { return laneTrackerParam_; }
      set {
        laneTrackerParam_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LanePerceptionParam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LanePerceptionParam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LaneDetectorParam, other.LaneDetectorParam)) return false;
      if (!object.Equals(LanePostprocessorParam, other.LanePostprocessorParam)) return false;
      if (!object.Equals(LaneTrackerParam, other.LaneTrackerParam)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (laneDetectorParam_ != null) hash ^= LaneDetectorParam.GetHashCode();
      if (lanePostprocessorParam_ != null) hash ^= LanePostprocessorParam.GetHashCode();
      if (laneTrackerParam_ != null) hash ^= LaneTrackerParam.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (laneDetectorParam_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LaneDetectorParam);
      }
      if (lanePostprocessorParam_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LanePostprocessorParam);
      }
      if (laneTrackerParam_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LaneTrackerParam);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (laneDetectorParam_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LaneDetectorParam);
      }
      if (lanePostprocessorParam_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LanePostprocessorParam);
      }
      if (laneTrackerParam_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LaneTrackerParam);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LanePerceptionParam other) {
      if (other == null) {
        return;
      }
      if (other.laneDetectorParam_ != null) {
        if (laneDetectorParam_ == null) {
          laneDetectorParam_ = new global::Apollo.Perception.Camera.App.DetectorParam();
        }
        LaneDetectorParam.MergeFrom(other.LaneDetectorParam);
      }
      if (other.lanePostprocessorParam_ != null) {
        if (lanePostprocessorParam_ == null) {
          lanePostprocessorParam_ = new global::Apollo.Perception.Camera.App.PluginParam();
        }
        LanePostprocessorParam.MergeFrom(other.LanePostprocessorParam);
      }
      if (other.laneTrackerParam_ != null) {
        if (laneTrackerParam_ == null) {
          laneTrackerParam_ = new global::Apollo.Perception.Camera.App.PluginParam();
        }
        LaneTrackerParam.MergeFrom(other.LaneTrackerParam);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (laneDetectorParam_ == null) {
              laneDetectorParam_ = new global::Apollo.Perception.Camera.App.DetectorParam();
            }
            input.ReadMessage(laneDetectorParam_);
            break;
          }
          case 18: {
            if (lanePostprocessorParam_ == null) {
              lanePostprocessorParam_ = new global::Apollo.Perception.Camera.App.PluginParam();
            }
            input.ReadMessage(lanePostprocessorParam_);
            break;
          }
          case 26: {
            if (laneTrackerParam_ == null) {
              laneTrackerParam_ = new global::Apollo.Perception.Camera.App.PluginParam();
            }
            input.ReadMessage(laneTrackerParam_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CalibrationServiceParam : pb::IMessage<CalibrationServiceParam> {
    private static readonly pb::MessageParser<CalibrationServiceParam> _parser = new pb::MessageParser<CalibrationServiceParam>(() => new CalibrationServiceParam());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CalibrationServiceParam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.Camera.App.PerceptionReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CalibrationServiceParam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CalibrationServiceParam(CalibrationServiceParam other) : this() {
      calibratorMethod_ = other.calibratorMethod_;
      PluginParam = other.pluginParam_ != null ? other.PluginParam.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CalibrationServiceParam Clone() {
      return new CalibrationServiceParam(this);
    }

    /// <summary>Field number for the "calibrator_method" field.</summary>
    public const int CalibratorMethodFieldNumber = 2;
    private string calibratorMethod_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CalibratorMethod {
      get { return calibratorMethod_; }
      set {
        calibratorMethod_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "plugin_param" field.</summary>
    public const int PluginParamFieldNumber = 3;
    private global::Apollo.Perception.Camera.App.PluginParam pluginParam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Perception.Camera.App.PluginParam PluginParam {
      get { return pluginParam_; }
      set {
        pluginParam_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CalibrationServiceParam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CalibrationServiceParam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CalibratorMethod != other.CalibratorMethod) return false;
      if (!object.Equals(PluginParam, other.PluginParam)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CalibratorMethod.Length != 0) hash ^= CalibratorMethod.GetHashCode();
      if (pluginParam_ != null) hash ^= PluginParam.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CalibratorMethod.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CalibratorMethod);
      }
      if (pluginParam_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PluginParam);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CalibratorMethod.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CalibratorMethod);
      }
      if (pluginParam_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PluginParam);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CalibrationServiceParam other) {
      if (other == null) {
        return;
      }
      if (other.CalibratorMethod.Length != 0) {
        CalibratorMethod = other.CalibratorMethod;
      }
      if (other.pluginParam_ != null) {
        if (pluginParam_ == null) {
          pluginParam_ = new global::Apollo.Perception.Camera.App.PluginParam();
        }
        PluginParam.MergeFrom(other.PluginParam);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            CalibratorMethod = input.ReadString();
            break;
          }
          case 26: {
            if (pluginParam_ == null) {
              pluginParam_ = new global::Apollo.Perception.Camera.App.PluginParam();
            }
            input.ReadMessage(pluginParam_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ObjectTemplateParam : pb::IMessage<ObjectTemplateParam> {
    private static readonly pb::MessageParser<ObjectTemplateParam> _parser = new pb::MessageParser<ObjectTemplateParam>(() => new ObjectTemplateParam());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjectTemplateParam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.Camera.App.PerceptionReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectTemplateParam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectTemplateParam(ObjectTemplateParam other) : this() {
      PluginParam = other.pluginParam_ != null ? other.PluginParam.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectTemplateParam Clone() {
      return new ObjectTemplateParam(this);
    }

    /// <summary>Field number for the "plugin_param" field.</summary>
    public const int PluginParamFieldNumber = 1;
    private global::Apollo.Perception.Camera.App.PluginParam pluginParam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Perception.Camera.App.PluginParam PluginParam {
      get { return pluginParam_; }
      set {
        pluginParam_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjectTemplateParam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjectTemplateParam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PluginParam, other.PluginParam)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (pluginParam_ != null) hash ^= PluginParam.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (pluginParam_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PluginParam);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (pluginParam_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PluginParam);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjectTemplateParam other) {
      if (other == null) {
        return;
      }
      if (other.pluginParam_ != null) {
        if (pluginParam_ == null) {
          pluginParam_ = new global::Apollo.Perception.Camera.App.PluginParam();
        }
        PluginParam.MergeFrom(other.PluginParam);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (pluginParam_ == null) {
              pluginParam_ = new global::Apollo.Perception.Camera.App.PluginParam();
            }
            input.ReadMessage(pluginParam_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PerceptionParam : pb::IMessage<PerceptionParam> {
    private static readonly pb::MessageParser<PerceptionParam> _parser = new pb::MessageParser<PerceptionParam>(() => new PerceptionParam());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PerceptionParam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.Camera.App.PerceptionReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PerceptionParam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PerceptionParam(PerceptionParam other) : this() {
      detectorParam_ = other.detectorParam_.Clone();
      TrackerParam = other.trackerParam_ != null ? other.TrackerParam.Clone() : null;
      TransformerParam = other.transformerParam_ != null ? other.TransformerParam.Clone() : null;
      PostprocessorParam = other.postprocessorParam_ != null ? other.PostprocessorParam.Clone() : null;
      gpuId_ = other.gpuId_;
      cameraIntrinsics_ = other.cameraIntrinsics_;
      FeatureParam = other.featureParam_ != null ? other.FeatureParam.Clone() : null;
      LaneParam = other.laneParam_ != null ? other.LaneParam.Clone() : null;
      CalibrationServiceParam = other.calibrationServiceParam_ != null ? other.CalibrationServiceParam.Clone() : null;
      DebugParam = other.debugParam_ != null ? other.DebugParam.Clone() : null;
      ObjectTemplateParam = other.objectTemplateParam_ != null ? other.ObjectTemplateParam.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PerceptionParam Clone() {
      return new PerceptionParam(this);
    }

    /// <summary>Field number for the "detector_param" field.</summary>
    public const int DetectorParamFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Apollo.Perception.Camera.App.DetectorParam> _repeated_detectorParam_codec
        = pb::FieldCodec.ForMessage(10, global::Apollo.Perception.Camera.App.DetectorParam.Parser);
    private readonly pbc::RepeatedField<global::Apollo.Perception.Camera.App.DetectorParam> detectorParam_ = new pbc::RepeatedField<global::Apollo.Perception.Camera.App.DetectorParam>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Apollo.Perception.Camera.App.DetectorParam> DetectorParam {
      get { return detectorParam_; }
    }

    /// <summary>Field number for the "tracker_param" field.</summary>
    public const int TrackerParamFieldNumber = 2;
    private global::Apollo.Perception.Camera.App.TrackerParam trackerParam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Perception.Camera.App.TrackerParam TrackerParam {
      get { return trackerParam_; }
      set {
        trackerParam_ = value;
      }
    }

    /// <summary>Field number for the "transformer_param" field.</summary>
    public const int TransformerParamFieldNumber = 3;
    private global::Apollo.Perception.Camera.App.TransformerParam transformerParam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Perception.Camera.App.TransformerParam TransformerParam {
      get { return transformerParam_; }
      set {
        transformerParam_ = value;
      }
    }

    /// <summary>Field number for the "postprocessor_param" field.</summary>
    public const int PostprocessorParamFieldNumber = 4;
    private global::Apollo.Perception.Camera.App.PostprocessorParam postprocessorParam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Perception.Camera.App.PostprocessorParam PostprocessorParam {
      get { return postprocessorParam_; }
      set {
        postprocessorParam_ = value;
      }
    }

    /// <summary>Field number for the "gpu_id" field.</summary>
    public const int GpuIdFieldNumber = 5;
    private int gpuId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GpuId {
      get { return gpuId_; }
      set {
        gpuId_ = value;
      }
    }

    /// <summary>Field number for the "camera_intrinsics" field.</summary>
    public const int CameraIntrinsicsFieldNumber = 6;
    private string cameraIntrinsics_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CameraIntrinsics {
      get { return cameraIntrinsics_; }
      set {
        cameraIntrinsics_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "feature_param" field.</summary>
    public const int FeatureParamFieldNumber = 7;
    private global::Apollo.Perception.Camera.App.FeatureParam featureParam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Perception.Camera.App.FeatureParam FeatureParam {
      get { return featureParam_; }
      set {
        featureParam_ = value;
      }
    }

    /// <summary>Field number for the "lane_param" field.</summary>
    public const int LaneParamFieldNumber = 8;
    private global::Apollo.Perception.Camera.App.LanePerceptionParam laneParam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Perception.Camera.App.LanePerceptionParam LaneParam {
      get { return laneParam_; }
      set {
        laneParam_ = value;
      }
    }

    /// <summary>Field number for the "calibration_service_param" field.</summary>
    public const int CalibrationServiceParamFieldNumber = 9;
    private global::Apollo.Perception.Camera.App.CalibrationServiceParam calibrationServiceParam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Perception.Camera.App.CalibrationServiceParam CalibrationServiceParam {
      get { return calibrationServiceParam_; }
      set {
        calibrationServiceParam_ = value;
      }
    }

    /// <summary>Field number for the "debug_param" field.</summary>
    public const int DebugParamFieldNumber = 10;
    private global::Apollo.Perception.Camera.App.DebugParam debugParam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Perception.Camera.App.DebugParam DebugParam {
      get { return debugParam_; }
      set {
        debugParam_ = value;
      }
    }

    /// <summary>Field number for the "object_template_param" field.</summary>
    public const int ObjectTemplateParamFieldNumber = 11;
    private global::Apollo.Perception.Camera.App.ObjectTemplateParam objectTemplateParam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Perception.Camera.App.ObjectTemplateParam ObjectTemplateParam {
      get { return objectTemplateParam_; }
      set {
        objectTemplateParam_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PerceptionParam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PerceptionParam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!detectorParam_.Equals(other.detectorParam_)) return false;
      if (!object.Equals(TrackerParam, other.TrackerParam)) return false;
      if (!object.Equals(TransformerParam, other.TransformerParam)) return false;
      if (!object.Equals(PostprocessorParam, other.PostprocessorParam)) return false;
      if (GpuId != other.GpuId) return false;
      if (CameraIntrinsics != other.CameraIntrinsics) return false;
      if (!object.Equals(FeatureParam, other.FeatureParam)) return false;
      if (!object.Equals(LaneParam, other.LaneParam)) return false;
      if (!object.Equals(CalibrationServiceParam, other.CalibrationServiceParam)) return false;
      if (!object.Equals(DebugParam, other.DebugParam)) return false;
      if (!object.Equals(ObjectTemplateParam, other.ObjectTemplateParam)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= detectorParam_.GetHashCode();
      if (trackerParam_ != null) hash ^= TrackerParam.GetHashCode();
      if (transformerParam_ != null) hash ^= TransformerParam.GetHashCode();
      if (postprocessorParam_ != null) hash ^= PostprocessorParam.GetHashCode();
      if (GpuId != 0) hash ^= GpuId.GetHashCode();
      if (CameraIntrinsics.Length != 0) hash ^= CameraIntrinsics.GetHashCode();
      if (featureParam_ != null) hash ^= FeatureParam.GetHashCode();
      if (laneParam_ != null) hash ^= LaneParam.GetHashCode();
      if (calibrationServiceParam_ != null) hash ^= CalibrationServiceParam.GetHashCode();
      if (debugParam_ != null) hash ^= DebugParam.GetHashCode();
      if (objectTemplateParam_ != null) hash ^= ObjectTemplateParam.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      detectorParam_.WriteTo(output, _repeated_detectorParam_codec);
      if (trackerParam_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TrackerParam);
      }
      if (transformerParam_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TransformerParam);
      }
      if (postprocessorParam_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PostprocessorParam);
      }
      if (GpuId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(GpuId);
      }
      if (CameraIntrinsics.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CameraIntrinsics);
      }
      if (featureParam_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(FeatureParam);
      }
      if (laneParam_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(LaneParam);
      }
      if (calibrationServiceParam_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(CalibrationServiceParam);
      }
      if (debugParam_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(DebugParam);
      }
      if (objectTemplateParam_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(ObjectTemplateParam);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += detectorParam_.CalculateSize(_repeated_detectorParam_codec);
      if (trackerParam_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrackerParam);
      }
      if (transformerParam_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransformerParam);
      }
      if (postprocessorParam_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostprocessorParam);
      }
      if (GpuId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GpuId);
      }
      if (CameraIntrinsics.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CameraIntrinsics);
      }
      if (featureParam_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FeatureParam);
      }
      if (laneParam_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LaneParam);
      }
      if (calibrationServiceParam_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CalibrationServiceParam);
      }
      if (debugParam_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DebugParam);
      }
      if (objectTemplateParam_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ObjectTemplateParam);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PerceptionParam other) {
      if (other == null) {
        return;
      }
      detectorParam_.Add(other.detectorParam_);
      if (other.trackerParam_ != null) {
        if (trackerParam_ == null) {
          trackerParam_ = new global::Apollo.Perception.Camera.App.TrackerParam();
        }
        TrackerParam.MergeFrom(other.TrackerParam);
      }
      if (other.transformerParam_ != null) {
        if (transformerParam_ == null) {
          transformerParam_ = new global::Apollo.Perception.Camera.App.TransformerParam();
        }
        TransformerParam.MergeFrom(other.TransformerParam);
      }
      if (other.postprocessorParam_ != null) {
        if (postprocessorParam_ == null) {
          postprocessorParam_ = new global::Apollo.Perception.Camera.App.PostprocessorParam();
        }
        PostprocessorParam.MergeFrom(other.PostprocessorParam);
      }
      if (other.GpuId != 0) {
        GpuId = other.GpuId;
      }
      if (other.CameraIntrinsics.Length != 0) {
        CameraIntrinsics = other.CameraIntrinsics;
      }
      if (other.featureParam_ != null) {
        if (featureParam_ == null) {
          featureParam_ = new global::Apollo.Perception.Camera.App.FeatureParam();
        }
        FeatureParam.MergeFrom(other.FeatureParam);
      }
      if (other.laneParam_ != null) {
        if (laneParam_ == null) {
          laneParam_ = new global::Apollo.Perception.Camera.App.LanePerceptionParam();
        }
        LaneParam.MergeFrom(other.LaneParam);
      }
      if (other.calibrationServiceParam_ != null) {
        if (calibrationServiceParam_ == null) {
          calibrationServiceParam_ = new global::Apollo.Perception.Camera.App.CalibrationServiceParam();
        }
        CalibrationServiceParam.MergeFrom(other.CalibrationServiceParam);
      }
      if (other.debugParam_ != null) {
        if (debugParam_ == null) {
          debugParam_ = new global::Apollo.Perception.Camera.App.DebugParam();
        }
        DebugParam.MergeFrom(other.DebugParam);
      }
      if (other.objectTemplateParam_ != null) {
        if (objectTemplateParam_ == null) {
          objectTemplateParam_ = new global::Apollo.Perception.Camera.App.ObjectTemplateParam();
        }
        ObjectTemplateParam.MergeFrom(other.ObjectTemplateParam);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            detectorParam_.AddEntriesFrom(input, _repeated_detectorParam_codec);
            break;
          }
          case 18: {
            if (trackerParam_ == null) {
              trackerParam_ = new global::Apollo.Perception.Camera.App.TrackerParam();
            }
            input.ReadMessage(trackerParam_);
            break;
          }
          case 26: {
            if (transformerParam_ == null) {
              transformerParam_ = new global::Apollo.Perception.Camera.App.TransformerParam();
            }
            input.ReadMessage(transformerParam_);
            break;
          }
          case 34: {
            if (postprocessorParam_ == null) {
              postprocessorParam_ = new global::Apollo.Perception.Camera.App.PostprocessorParam();
            }
            input.ReadMessage(postprocessorParam_);
            break;
          }
          case 40: {
            GpuId = input.ReadInt32();
            break;
          }
          case 50: {
            CameraIntrinsics = input.ReadString();
            break;
          }
          case 58: {
            if (featureParam_ == null) {
              featureParam_ = new global::Apollo.Perception.Camera.App.FeatureParam();
            }
            input.ReadMessage(featureParam_);
            break;
          }
          case 66: {
            if (laneParam_ == null) {
              laneParam_ = new global::Apollo.Perception.Camera.App.LanePerceptionParam();
            }
            input.ReadMessage(laneParam_);
            break;
          }
          case 74: {
            if (calibrationServiceParam_ == null) {
              calibrationServiceParam_ = new global::Apollo.Perception.Camera.App.CalibrationServiceParam();
            }
            input.ReadMessage(calibrationServiceParam_);
            break;
          }
          case 82: {
            if (debugParam_ == null) {
              debugParam_ = new global::Apollo.Perception.Camera.App.DebugParam();
            }
            input.ReadMessage(debugParam_);
            break;
          }
          case 90: {
            if (objectTemplateParam_ == null) {
              objectTemplateParam_ = new global::Apollo.Perception.Camera.App.ObjectTemplateParam();
            }
            input.ReadMessage(objectTemplateParam_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TrafficLightParam : pb::IMessage<TrafficLightParam> {
    private static readonly pb::MessageParser<TrafficLightParam> _parser = new pb::MessageParser<TrafficLightParam>(() => new TrafficLightParam());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TrafficLightParam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.Camera.App.PerceptionReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrafficLightParam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrafficLightParam(TrafficLightParam other) : this() {
      detectorParam_ = other.detectorParam_.Clone();
      TrackerParam = other.trackerParam_ != null ? other.TrackerParam.Clone() : null;
      gpuId_ = other.gpuId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrafficLightParam Clone() {
      return new TrafficLightParam(this);
    }

    /// <summary>Field number for the "detector_param" field.</summary>
    public const int DetectorParamFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Apollo.Perception.Camera.App.DetectorParam> _repeated_detectorParam_codec
        = pb::FieldCodec.ForMessage(10, global::Apollo.Perception.Camera.App.DetectorParam.Parser);
    private readonly pbc::RepeatedField<global::Apollo.Perception.Camera.App.DetectorParam> detectorParam_ = new pbc::RepeatedField<global::Apollo.Perception.Camera.App.DetectorParam>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Apollo.Perception.Camera.App.DetectorParam> DetectorParam {
      get { return detectorParam_; }
    }

    /// <summary>Field number for the "tracker_param" field.</summary>
    public const int TrackerParamFieldNumber = 2;
    private global::Apollo.Perception.Camera.App.TrackerParam trackerParam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Perception.Camera.App.TrackerParam TrackerParam {
      get { return trackerParam_; }
      set {
        trackerParam_ = value;
      }
    }

    /// <summary>Field number for the "gpu_id" field.</summary>
    public const int GpuIdFieldNumber = 3;
    private int gpuId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GpuId {
      get { return gpuId_; }
      set {
        gpuId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TrafficLightParam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TrafficLightParam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!detectorParam_.Equals(other.detectorParam_)) return false;
      if (!object.Equals(TrackerParam, other.TrackerParam)) return false;
      if (GpuId != other.GpuId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= detectorParam_.GetHashCode();
      if (trackerParam_ != null) hash ^= TrackerParam.GetHashCode();
      if (GpuId != 0) hash ^= GpuId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      detectorParam_.WriteTo(output, _repeated_detectorParam_codec);
      if (trackerParam_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TrackerParam);
      }
      if (GpuId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(GpuId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += detectorParam_.CalculateSize(_repeated_detectorParam_codec);
      if (trackerParam_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrackerParam);
      }
      if (GpuId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GpuId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TrafficLightParam other) {
      if (other == null) {
        return;
      }
      detectorParam_.Add(other.detectorParam_);
      if (other.trackerParam_ != null) {
        if (trackerParam_ == null) {
          trackerParam_ = new global::Apollo.Perception.Camera.App.TrackerParam();
        }
        TrackerParam.MergeFrom(other.TrackerParam);
      }
      if (other.GpuId != 0) {
        GpuId = other.GpuId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            detectorParam_.AddEntriesFrom(input, _repeated_detectorParam_codec);
            break;
          }
          case 18: {
            if (trackerParam_ == null) {
              trackerParam_ = new global::Apollo.Perception.Camera.App.TrackerParam();
            }
            input.ReadMessage(trackerParam_);
            break;
          }
          case 24: {
            GpuId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
