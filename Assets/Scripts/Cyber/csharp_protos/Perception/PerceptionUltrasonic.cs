// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/proto/perception_ultrasonic.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Apollo.Perception {

  /// <summary>Holder for reflection information generated from modules/perception/proto/perception_ultrasonic.proto</summary>
  public static partial class PerceptionUltrasonicReflection {

    #region Descriptor
    /// <summary>File descriptor for modules/perception/proto/perception_ultrasonic.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PerceptionUltrasonicReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjRtb2R1bGVzL3BlcmNlcHRpb24vcHJvdG8vcGVyY2VwdGlvbl91bHRyYXNv",
            "bmljLnByb3RvEhFhcG9sbG8ucGVyY2VwdGlvbhohbW9kdWxlcy9jb21tb24v",
            "cHJvdG8vaGVhZGVyLnByb3RvGiNtb2R1bGVzL2NvbW1vbi9wcm90by9nZW9t",
            "ZXRyeS5wcm90byJ4ChZJbXBlbmRpbmdDb2xsaXNpb25FZGdlEgoKAmlkGAEg",
            "ASgFEhQKDGNvbmVfaWRfbGlzdBgCIAMoBRIlCgVwb2ludBgDIAMoCzIWLmFw",
            "b2xsby5jb21tb24uUG9pbnQzRBIVCg10cmFja2luZ190aW1lGAQgASgBIo0B",
            "ChdJbXBlbmRpbmdDb2xsaXNpb25FZGdlcxJLChhpbXBlbmRpbmdfY29sbGlz",
            "aW9uX2VkZ2UYASADKAsyKS5hcG9sbG8ucGVyY2VwdGlvbi5JbXBlbmRpbmdD",
            "b2xsaXNpb25FZGdlEiUKBmhlYWRlchgCIAEoCzIVLmFwb2xsby5jb21tb24u",
            "SGVhZGVyYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Apollo.Common.HeaderReflection.Descriptor, global::Apollo.Common.GeometryReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.ImpendingCollisionEdge), global::Apollo.Perception.ImpendingCollisionEdge.Parser, new[]{ "Id", "ConeIdList", "Point", "TrackingTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.ImpendingCollisionEdges), global::Apollo.Perception.ImpendingCollisionEdges.Parser, new[]{ "ImpendingCollisionEdge", "Header" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ImpendingCollisionEdge : pb::IMessage<ImpendingCollisionEdge> {
    private static readonly pb::MessageParser<ImpendingCollisionEdge> _parser = new pb::MessageParser<ImpendingCollisionEdge>(() => new ImpendingCollisionEdge());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImpendingCollisionEdge> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.PerceptionUltrasonicReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImpendingCollisionEdge() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImpendingCollisionEdge(ImpendingCollisionEdge other) : this() {
      id_ = other.id_;
      coneIdList_ = other.coneIdList_.Clone();
      point_ = other.point_.Clone();
      trackingTime_ = other.trackingTime_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImpendingCollisionEdge Clone() {
      return new ImpendingCollisionEdge(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// edge ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "cone_id_list" field.</summary>
    public const int ConeIdListFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_coneIdList_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> coneIdList_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// cone ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ConeIdList {
      get { return coneIdList_; }
    }

    /// <summary>Field number for the "point" field.</summary>
    public const int PointFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Apollo.Common.Point3D> _repeated_point_codec
        = pb::FieldCodec.ForMessage(26, global::Apollo.Common.Point3D.Parser);
    private readonly pbc::RepeatedField<global::Apollo.Common.Point3D> point_ = new pbc::RepeatedField<global::Apollo.Common.Point3D>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Apollo.Common.Point3D> Point {
      get { return point_; }
    }

    /// <summary>Field number for the "tracking_time" field.</summary>
    public const int TrackingTimeFieldNumber = 4;
    private double trackingTime_;
    /// <summary>
    /// tracking time since detected in s
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double TrackingTime {
      get { return trackingTime_; }
      set {
        trackingTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImpendingCollisionEdge);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImpendingCollisionEdge other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!coneIdList_.Equals(other.coneIdList_)) return false;
      if(!point_.Equals(other.point_)) return false;
      if (TrackingTime != other.TrackingTime) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= coneIdList_.GetHashCode();
      hash ^= point_.GetHashCode();
      if (TrackingTime != 0D) hash ^= TrackingTime.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      coneIdList_.WriteTo(output, _repeated_coneIdList_codec);
      point_.WriteTo(output, _repeated_point_codec);
      if (TrackingTime != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(TrackingTime);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += coneIdList_.CalculateSize(_repeated_coneIdList_codec);
      size += point_.CalculateSize(_repeated_point_codec);
      if (TrackingTime != 0D) {
        size += 1 + 8;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImpendingCollisionEdge other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      coneIdList_.Add(other.coneIdList_);
      point_.Add(other.point_);
      if (other.TrackingTime != 0D) {
        TrackingTime = other.TrackingTime;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            coneIdList_.AddEntriesFrom(input, _repeated_coneIdList_codec);
            break;
          }
          case 26: {
            point_.AddEntriesFrom(input, _repeated_point_codec);
            break;
          }
          case 33: {
            TrackingTime = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImpendingCollisionEdges : pb::IMessage<ImpendingCollisionEdges> {
    private static readonly pb::MessageParser<ImpendingCollisionEdges> _parser = new pb::MessageParser<ImpendingCollisionEdges>(() => new ImpendingCollisionEdges());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImpendingCollisionEdges> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.PerceptionUltrasonicReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImpendingCollisionEdges() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImpendingCollisionEdges(ImpendingCollisionEdges other) : this() {
      impendingCollisionEdge_ = other.impendingCollisionEdge_.Clone();
      Header = other.header_ != null ? other.Header.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImpendingCollisionEdges Clone() {
      return new ImpendingCollisionEdges(this);
    }

    /// <summary>Field number for the "impending_collision_edge" field.</summary>
    public const int ImpendingCollisionEdgeFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Apollo.Perception.ImpendingCollisionEdge> _repeated_impendingCollisionEdge_codec
        = pb::FieldCodec.ForMessage(10, global::Apollo.Perception.ImpendingCollisionEdge.Parser);
    private readonly pbc::RepeatedField<global::Apollo.Perception.ImpendingCollisionEdge> impendingCollisionEdge_ = new pbc::RepeatedField<global::Apollo.Perception.ImpendingCollisionEdge>();
    /// <summary>
    /// obstacles
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Apollo.Perception.ImpendingCollisionEdge> ImpendingCollisionEdge {
      get { return impendingCollisionEdge_; }
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 2;
    private global::Apollo.Common.Header header_;
    /// <summary>
    /// Header
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Common.Header Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImpendingCollisionEdges);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImpendingCollisionEdges other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!impendingCollisionEdge_.Equals(other.impendingCollisionEdge_)) return false;
      if (!object.Equals(Header, other.Header)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= impendingCollisionEdge_.GetHashCode();
      if (header_ != null) hash ^= Header.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      impendingCollisionEdge_.WriteTo(output, _repeated_impendingCollisionEdge_codec);
      if (header_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Header);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += impendingCollisionEdge_.CalculateSize(_repeated_impendingCollisionEdge_codec);
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImpendingCollisionEdges other) {
      if (other == null) {
        return;
      }
      impendingCollisionEdge_.Add(other.impendingCollisionEdge_);
      if (other.header_ != null) {
        if (header_ == null) {
          header_ = new global::Apollo.Common.Header();
        }
        Header.MergeFrom(other.Header);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            impendingCollisionEdge_.AddEntriesFrom(input, _repeated_impendingCollisionEdge_codec);
            break;
          }
          case 18: {
            if (header_ == null) {
              header_ = new global::Apollo.Common.Header();
            }
            input.ReadMessage(header_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
