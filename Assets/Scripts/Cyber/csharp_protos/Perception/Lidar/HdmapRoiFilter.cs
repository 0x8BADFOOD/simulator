// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/lidar/lib/roi_filter/hdmap_roi_filter/proto/hdmap_roi_filter.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Apollo.Perception.Lidar {

  /// <summary>Holder for reflection information generated from modules/perception/lidar/lib/roi_filter/hdmap_roi_filter/proto/hdmap_roi_filter.proto</summary>
  public static partial class HdmapRoiFilterReflection {

    #region Descriptor
    /// <summary>File descriptor for modules/perception/lidar/lib/roi_filter/hdmap_roi_filter/proto/hdmap_roi_filter.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HdmapRoiFilterReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ClVtb2R1bGVzL3BlcmNlcHRpb24vbGlkYXIvbGliL3JvaV9maWx0ZXIvaGRt",
            "YXBfcm9pX2ZpbHRlci9wcm90by9oZG1hcF9yb2lfZmlsdGVyLnByb3RvEhdh",
            "cG9sbG8ucGVyY2VwdGlvbi5saWRhciJ9ChRIRE1hcFJvaUZpbHRlckNvbmZp",
            "ZxINCgVyYW5nZRgBIAEoARIRCgljZWxsX3NpemUYAiABKAESEwoLZXh0ZW5k",
            "X2Rpc3QYAyABKAESFQoNbm9fZWRnZV90YWJsZRgEIAEoCBIXCg9zZXRfcm9p",
            "X3NlcnZpY2UYBSABKAhiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.Lidar.HDMapRoiFilterConfig), global::Apollo.Perception.Lidar.HDMapRoiFilterConfig.Parser, new[]{ "Range", "CellSize", "ExtendDist", "NoEdgeTable", "SetRoiService" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class HDMapRoiFilterConfig : pb::IMessage<HDMapRoiFilterConfig> {
    private static readonly pb::MessageParser<HDMapRoiFilterConfig> _parser = new pb::MessageParser<HDMapRoiFilterConfig>(() => new HDMapRoiFilterConfig());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HDMapRoiFilterConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.Lidar.HdmapRoiFilterReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HDMapRoiFilterConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HDMapRoiFilterConfig(HDMapRoiFilterConfig other) : this() {
      range_ = other.range_;
      cellSize_ = other.cellSize_;
      extendDist_ = other.extendDist_;
      noEdgeTable_ = other.noEdgeTable_;
      setRoiService_ = other.setRoiService_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HDMapRoiFilterConfig Clone() {
      return new HDMapRoiFilterConfig(this);
    }

    /// <summary>Field number for the "range" field.</summary>
    public const int RangeFieldNumber = 1;
    private double range_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Range {
      get { return range_; }
      set {
        range_ = value;
      }
    }

    /// <summary>Field number for the "cell_size" field.</summary>
    public const int CellSizeFieldNumber = 2;
    private double cellSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double CellSize {
      get { return cellSize_; }
      set {
        cellSize_ = value;
      }
    }

    /// <summary>Field number for the "extend_dist" field.</summary>
    public const int ExtendDistFieldNumber = 3;
    private double extendDist_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double ExtendDist {
      get { return extendDist_; }
      set {
        extendDist_ = value;
      }
    }

    /// <summary>Field number for the "no_edge_table" field.</summary>
    public const int NoEdgeTableFieldNumber = 4;
    private bool noEdgeTable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NoEdgeTable {
      get { return noEdgeTable_; }
      set {
        noEdgeTable_ = value;
      }
    }

    /// <summary>Field number for the "set_roi_service" field.</summary>
    public const int SetRoiServiceFieldNumber = 5;
    private bool setRoiService_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SetRoiService {
      get { return setRoiService_; }
      set {
        setRoiService_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HDMapRoiFilterConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HDMapRoiFilterConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Range != other.Range) return false;
      if (CellSize != other.CellSize) return false;
      if (ExtendDist != other.ExtendDist) return false;
      if (NoEdgeTable != other.NoEdgeTable) return false;
      if (SetRoiService != other.SetRoiService) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Range != 0D) hash ^= Range.GetHashCode();
      if (CellSize != 0D) hash ^= CellSize.GetHashCode();
      if (ExtendDist != 0D) hash ^= ExtendDist.GetHashCode();
      if (NoEdgeTable != false) hash ^= NoEdgeTable.GetHashCode();
      if (SetRoiService != false) hash ^= SetRoiService.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Range != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Range);
      }
      if (CellSize != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(CellSize);
      }
      if (ExtendDist != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(ExtendDist);
      }
      if (NoEdgeTable != false) {
        output.WriteRawTag(32);
        output.WriteBool(NoEdgeTable);
      }
      if (SetRoiService != false) {
        output.WriteRawTag(40);
        output.WriteBool(SetRoiService);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Range != 0D) {
        size += 1 + 8;
      }
      if (CellSize != 0D) {
        size += 1 + 8;
      }
      if (ExtendDist != 0D) {
        size += 1 + 8;
      }
      if (NoEdgeTable != false) {
        size += 1 + 1;
      }
      if (SetRoiService != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HDMapRoiFilterConfig other) {
      if (other == null) {
        return;
      }
      if (other.Range != 0D) {
        Range = other.Range;
      }
      if (other.CellSize != 0D) {
        CellSize = other.CellSize;
      }
      if (other.ExtendDist != 0D) {
        ExtendDist = other.ExtendDist;
      }
      if (other.NoEdgeTable != false) {
        NoEdgeTable = other.NoEdgeTable;
      }
      if (other.SetRoiService != false) {
        SetRoiService = other.SetRoiService;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 9: {
            Range = input.ReadDouble();
            break;
          }
          case 17: {
            CellSize = input.ReadDouble();
            break;
          }
          case 25: {
            ExtendDist = input.ReadDouble();
            break;
          }
          case 32: {
            NoEdgeTable = input.ReadBool();
            break;
          }
          case 40: {
            SetRoiService = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
