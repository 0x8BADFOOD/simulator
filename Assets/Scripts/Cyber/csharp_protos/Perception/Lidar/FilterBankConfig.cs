// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/lidar/lib/object_filter_bank/proto/filter_bank_config.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Apollo.Perception.Lidar {

  /// <summary>Holder for reflection information generated from modules/perception/lidar/lib/object_filter_bank/proto/filter_bank_config.proto</summary>
  public static partial class FilterBankConfigReflection {

    #region Descriptor
    /// <summary>File descriptor for modules/perception/lidar/lib/object_filter_bank/proto/filter_bank_config.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FilterBankConfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ck5tb2R1bGVzL3BlcmNlcHRpb24vbGlkYXIvbGliL29iamVjdF9maWx0ZXJf",
            "YmFuay9wcm90by9maWx0ZXJfYmFua19jb25maWcucHJvdG8SF2Fwb2xsby5w",
            "ZXJjZXB0aW9uLmxpZGFyIicKEEZpbHRlckJhbmtDb25maWcSEwoLZmlsdGVy",
            "X25hbWUYASADKAliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Perception.Lidar.FilterBankConfig), global::Apollo.Perception.Lidar.FilterBankConfig.Parser, new[]{ "FilterName" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FilterBankConfig : pb::IMessage<FilterBankConfig> {
    private static readonly pb::MessageParser<FilterBankConfig> _parser = new pb::MessageParser<FilterBankConfig>(() => new FilterBankConfig());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FilterBankConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Perception.Lidar.FilterBankConfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterBankConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterBankConfig(FilterBankConfig other) : this() {
      filterName_ = other.filterName_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterBankConfig Clone() {
      return new FilterBankConfig(this);
    }

    /// <summary>Field number for the "filter_name" field.</summary>
    public const int FilterNameFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_filterName_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> filterName_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> FilterName {
      get { return filterName_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FilterBankConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FilterBankConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!filterName_.Equals(other.filterName_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= filterName_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      filterName_.WriteTo(output, _repeated_filterName_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += filterName_.CalculateSize(_repeated_filterName_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FilterBankConfig other) {
      if (other == null) {
        return;
      }
      filterName_.Add(other.filterName_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            filterName_.AddEntriesFrom(input, _repeated_filterName_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
