// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/common/proto/drive_event.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Apollo.Common {

  /// <summary>Holder for reflection information generated from modules/common/proto/drive_event.proto</summary>
  public static partial class DriveEventReflection {

    #region Descriptor
    /// <summary>File descriptor for modules/common/proto/drive_event.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DriveEventReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZtb2R1bGVzL2NvbW1vbi9wcm90by9kcml2ZV9ldmVudC5wcm90bxINYXBv",
            "bGxvLmNvbW1vbhohbW9kdWxlcy9jb21tb24vcHJvdG8vaGVhZGVyLnByb3Rv",
            "GiVtb2R1bGVzL2xvY2FsaXphdGlvbi9wcm90by9wb3NlLnByb3RvIt8BCgpE",
            "cml2ZUV2ZW50EiUKBmhlYWRlchgBIAEoCzIVLmFwb2xsby5jb21tb24uSGVh",
            "ZGVyEg0KBWV2ZW50GAIgASgJEisKCGxvY2F0aW9uGAMgASgLMhkuYXBvbGxv",
            "LmxvY2FsaXphdGlvbi5Qb3NlEiwKBHR5cGUYBCADKA4yHi5hcG9sbG8uY29t",
            "bW9uLkRyaXZlRXZlbnQuVHlwZSJACgRUeXBlEgwKCENSSVRJQ0FMEAASCwoH",
            "UFJPQkxFTRABEgsKB0RFU0lSRUQQAhIQCgxPVVRfT0ZfU0NPUEUQA2IGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Apollo.Common.HeaderReflection.Descriptor, global::Apollo.Localization.PoseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Common.DriveEvent), global::Apollo.Common.DriveEvent.Parser, new[]{ "Header", "Event", "Location", "Type" }, null, new[]{ typeof(global::Apollo.Common.DriveEvent.Types.Type) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DriveEvent : pb::IMessage<DriveEvent> {
    private static readonly pb::MessageParser<DriveEvent> _parser = new pb::MessageParser<DriveEvent>(() => new DriveEvent());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DriveEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Common.DriveEventReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DriveEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DriveEvent(DriveEvent other) : this() {
      Header = other.header_ != null ? other.Header.Clone() : null;
      event_ = other.event_;
      Location = other.location_ != null ? other.Location.Clone() : null;
      type_ = other.type_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DriveEvent Clone() {
      return new DriveEvent(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Apollo.Common.Header header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Common.Header Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "event" field.</summary>
    public const int EventFieldNumber = 2;
    private string event_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Event {
      get { return event_; }
      set {
        event_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 3;
    private global::Apollo.Localization.Pose location_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Localization.Pose Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Apollo.Common.DriveEvent.Types.Type> _repeated_type_codec
        = pb::FieldCodec.ForEnum(34, x => (int) x, x => (global::Apollo.Common.DriveEvent.Types.Type) x);
    private readonly pbc::RepeatedField<global::Apollo.Common.DriveEvent.Types.Type> type_ = new pbc::RepeatedField<global::Apollo.Common.DriveEvent.Types.Type>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Apollo.Common.DriveEvent.Types.Type> Type {
      get { return type_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DriveEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DriveEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (Event != other.Event) return false;
      if (!object.Equals(Location, other.Location)) return false;
      if(!type_.Equals(other.type_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (Event.Length != 0) hash ^= Event.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      hash ^= type_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (Event.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Event);
      }
      if (location_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Location);
      }
      type_.WriteTo(output, _repeated_type_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (Event.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Event);
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      size += type_.CalculateSize(_repeated_type_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DriveEvent other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          header_ = new global::Apollo.Common.Header();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.Event.Length != 0) {
        Event = other.Event;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          location_ = new global::Apollo.Localization.Pose();
        }
        Location.MergeFrom(other.Location);
      }
      type_.Add(other.type_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (header_ == null) {
              header_ = new global::Apollo.Common.Header();
            }
            input.ReadMessage(header_);
            break;
          }
          case 18: {
            Event = input.ReadString();
            break;
          }
          case 26: {
            if (location_ == null) {
              location_ = new global::Apollo.Localization.Pose();
            }
            input.ReadMessage(location_);
            break;
          }
          case 34:
          case 32: {
            type_.AddEntriesFrom(input, _repeated_type_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DriveEvent message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("CRITICAL")] Critical = 0,
        [pbr::OriginalName("PROBLEM")] Problem = 1,
        [pbr::OriginalName("DESIRED")] Desired = 2,
        [pbr::OriginalName("OUT_OF_SCOPE")] OutOfScope = 3,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
