// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/canbus/proto/wey.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Apollo.Canbus {

  /// <summary>Holder for reflection information generated from modules/canbus/proto/wey.proto</summary>
  public static partial class WeyReflection {

    #region Descriptor
    /// <summary>File descriptor for modules/canbus/proto/wey.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WeyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5tb2R1bGVzL2NhbmJ1cy9wcm90by93ZXkucHJvdG8SDWFwb2xsby5jYW5i",
            "dXMi3AIKD0Fkc19zaGlmdGVyXzExNRJHCg1hZHNfc2hpZnRtb2RlGAEgASgO",
            "MjAuYXBvbGxvLmNhbmJ1cy5BZHNfc2hpZnRlcl8xMTUuQWRzX3NoaWZ0bW9k",
            "ZVR5cGUSSQoOYWRzX3RhcmdldGdlYXIYAiABKA4yMS5hcG9sbG8uY2FuYnVz",
            "LkFkc19zaGlmdGVyXzExNS5BZHNfdGFyZ2V0Z2VhclR5cGUiRwoRQWRzX3No",
            "aWZ0bW9kZVR5cGUSGQoVQURTX1NISUZUTU9ERV9JTlZBTElEEAASFwoTQURT",
            "X1NISUZUTU9ERV9WQUxJRBABImwKEkFkc190YXJnZXRnZWFyVHlwZRIUChBB",
            "RFNfVEFSR0VUR0VBUl9OEAASFAoQQURTX1RBUkdFVEdFQVJfUhABEhQKEEFE",
            "U19UQVJHRVRHRUFSX1AQAhIUChBBRFNfVEFSR0VUR0VBUl9EEAMisQEKC0Fk",
            "c19lcHNfMTEzEj8KC2Fkc19lcHNtb2RlGAEgASgOMiouYXBvbGxvLmNhbmJ1",
            "cy5BZHNfZXBzXzExMy5BZHNfZXBzbW9kZVR5cGUSHQoVYWRzX3JlcWVwc3Rh",
            "cmdldGFuZ2xlGAIgASgBIkIKD0Fkc19lcHNtb2RlVHlwZRIXChNBRFNfRVBT",
            "TU9ERV9ESVNBQkxFEAASFgoSQURTX0VQU01PREVfQUNUSVZFEAIikysKClN0",
            "YXR1c18zMTASSgoRbG9uZ2l0dWRlYWNjdmFsaWQYASABKA4yLy5hcG9sbG8u",
            "Y2FuYnVzLlN0YXR1c18zMTAuTG9uZ2l0dWRlYWNjdmFsaWRUeXBlEkgKEGxh",
            "dGVyYWxhY2NldmFsaWQYAiABKA4yLi5hcG9sbG8uY2FuYnVzLlN0YXR1c18z",
            "MTAuTGF0ZXJhbGFjY2V2YWxpZFR5cGUSTAoSdmVoZHlueWF3cmF0ZXZhbGlk",
            "GAMgASgOMjAuYXBvbGxvLmNhbmJ1cy5TdGF0dXNfMzEwLlZlaGR5bnlhd3Jh",
            "dGV2YWxpZFR5cGUSRgoPZmx3aGVlbHNwZHZhbGlkGAQgASgOMi0uYXBvbGxv",
            "LmNhbmJ1cy5TdGF0dXNfMzEwLkZsd2hlZWxzcGR2YWxpZFR5cGUSRgoPZnJ3",
            "aGVlbHNwZHZhbGlkGAUgASgOMi0uYXBvbGxvLmNhbmJ1cy5TdGF0dXNfMzEw",
            "LkZyd2hlZWxzcGR2YWxpZFR5cGUSRgoPcmx3aGVlbHNwZHZhbGlkGAYgASgO",
            "Mi0uYXBvbGxvLmNhbmJ1cy5TdGF0dXNfMzEwLlJsd2hlZWxzcGR2YWxpZFR5",
            "cGUSRgoPcnJ3aGVlbHNwZHZhbGlkGAcgASgOMi0uYXBvbGxvLmNhbmJ1cy5T",
            "dGF0dXNfMzEwLlJyd2hlZWxzcGR2YWxpZFR5cGUSRgoPdmVoaWNsZXNwZHZh",
            "bGlkGAggASgOMi0uYXBvbGxvLmNhbmJ1cy5TdGF0dXNfMzEwLlZlaGljbGVz",
            "cGR2YWxpZFR5cGUSUAoUbG9uZ2l0dWRlZHJpdmluZ21vZGUYCSABKA4yMi5h",
            "cG9sbG8uY2FuYnVzLlN0YXR1c18zMTAuTG9uZ2l0dWRlZHJpdmluZ21vZGVU",
            "eXBlEj4KC2VuZ3NwZHZhbGlkGAogASgOMikuYXBvbGxvLmNhbmJ1cy5TdGF0",
            "dXNfMzEwLkVuZ3NwZHZhbGlkVHlwZRJKChFhY2NlcGVkYWxvdmVycmlkZRgL",
            "IAEoDjIvLmFwb2xsby5jYW5idXMuU3RhdHVzXzMxMC5BY2NlcGVkYWxvdmVy",
            "cmlkZVR5cGUSSAoQYnJha2VwZWRhbHN0YXR1cxgMIAEoDjIuLmFwb2xsby5j",
            "YW5idXMuU3RhdHVzXzMxMC5CcmFrZXBlZGFsc3RhdHVzVHlwZRJIChBlc3Bi",
            "cmFrZWxpZ2h0c3RzGA0gASgOMi4uYXBvbGxvLmNhbmJ1cy5TdGF0dXNfMzEw",
            "LkVzcGJyYWtlbGlnaHRzdHNUeXBlEk4KE2VwYnN3dHBvc2l0aW9udmFsaWQY",
            "DiABKA4yMS5hcG9sbG8uY2FuYnVzLlN0YXR1c18zMTAuRXBic3d0cG9zaXRp",
            "b252YWxpZFR5cGUSNAoGZXBic3RzGA8gASgOMiQuYXBvbGxvLmNhbmJ1cy5T",
            "dGF0dXNfMzEwLkVwYnN0c1R5cGUSSAoQY3VycmVudGdlYXJ2YWxpZBgQIAEo",
            "DjIuLmFwb2xsby5jYW5idXMuU3RhdHVzXzMxMC5DdXJyZW50Z2VhcnZhbGlk",
            "VHlwZRJCCg1lcHN0cnFzbnNyc3RzGBEgASgOMisuYXBvbGxvLmNhbmJ1cy5T",
            "dGF0dXNfMzEwLkVwc3RycXNuc3JzdHNUeXBlElIKFWVwc19pbnRlcmZlcmRl",
            "dGR2YWxpZBgSIAEoDjIzLmFwb2xsby5jYW5idXMuU3RhdHVzXzMxMC5FcHNf",
            "aW50ZXJmZXJkZXRkdmFsaWRUeXBlEkYKD2Vwc2hhbmRzZGV0bnN0cxgTIAEo",
            "DjItLmFwb2xsby5jYW5idXMuU3RhdHVzXzMxMC5FcHNoYW5kc2RldG5zdHNU",
            "eXBlElIKFWVwc19oYW5kc2RldG5zdHN2YWxpZBgUIAEoDjIzLmFwb2xsby5j",
            "YW5idXMuU3RhdHVzXzMxMC5FcHNfaGFuZHNkZXRuc3RzdmFsaWRUeXBlEk4K",
            "E3N0ZWVyd2hlZWxhbmdsZXNpZ24YFSABKA4yMS5hcG9sbG8uY2FuYnVzLlN0",
            "YXR1c18zMTAuU3RlZXJ3aGVlbGFuZ2xlc2lnblR5cGUSSgoRc3RlZXJ3aGVl",
            "bHNwZHNpZ24YFiABKA4yLy5hcG9sbG8uY2FuYnVzLlN0YXR1c18zMTAuU3Rl",
            "ZXJ3aGVlbHNwZHNpZ25UeXBlEkIKDWRyaXZlcmRvb3JzdHMYFyABKA4yKy5h",
            "cG9sbG8uY2FuYnVzLlN0YXR1c18zMTAuRHJpdmVyZG9vcnN0c1R5cGUSOgoJ",
            "cmxkb29yc3RzGBggASgOMicuYXBvbGxvLmNhbmJ1cy5TdGF0dXNfMzEwLlJs",
            "ZG9vcnN0c1R5cGUSSAoQcGFzc2VuZ2VyZG9vcnN0cxgZIAEoDjIuLmFwb2xs",
            "by5jYW5idXMuU3RhdHVzXzMxMC5QYXNzZW5nZXJkb29yc3RzVHlwZRI6Cgly",
            "cmRvb3JzdHMYGiABKA4yJy5hcG9sbG8uY2FuYnVzLlN0YXR1c18zMTAuUnJk",
            "b29yc3RzVHlwZRJECg5mcm9udGZvZ2xtcHN0cxgbIAEoDjIsLmFwb2xsby5j",
            "YW5idXMuU3RhdHVzXzMxMC5Gcm9udGZvZ2xtcHN0c1R5cGUSQgoNcmVhcmZv",
            "Z2xtcHN0cxgcIAEoDjIrLmFwb2xsby5jYW5idXMuU3RhdHVzXzMxMC5SZWFy",
            "Zm9nbG1wc3RzVHlwZRI8Cgpsb3diZWFtc3RzGB0gASgOMiguYXBvbGxvLmNh",
            "bmJ1cy5TdGF0dXNfMzEwLkxvd2JlYW1zdHNUeXBlEj4KC2hpZ2hiZWFtc3Rz",
            "GB4gASgOMikuYXBvbGxvLmNhbmJ1cy5TdGF0dXNfMzEwLkhpZ2hiZWFtc3Rz",
            "VHlwZRJGCg9sZWZ0dHVybmxhbXBzdHMYHyABKA4yLS5hcG9sbG8uY2FuYnVz",
            "LlN0YXR1c18zMTAuTGVmdHR1cm5sYW1wc3RzVHlwZRJIChByaWdodHR1cm5s",
            "YW1wc3RzGCAgASgOMi4uYXBvbGxvLmNhbmJ1cy5TdGF0dXNfMzEwLlJpZ2h0",
            "dHVybmxhbXBzdHNUeXBlEkAKDGJjbV9hdmFpbHN0cxghIAEoDjIqLmFwb2xs",
            "by5jYW5idXMuU3RhdHVzXzMxMC5CY21fYXZhaWxzdHNUeXBlEj4KC2JyYWtl",
            "bG1wc3RzGCIgASgOMikuYXBvbGxvLmNhbmJ1cy5TdGF0dXNfMzEwLkJyYWtl",
            "bG1wc3RzVHlwZSJTChVMb25naXR1ZGVhY2N2YWxpZFR5cGUSHQoZTE9OR0lU",
            "VURFQUNDVkFMSURfSU5WQUxJRBAAEhsKF0xPTkdJVFVERUFDQ1ZBTElEX1ZB",
            "TElEEAEiUAoUTGF0ZXJhbGFjY2V2YWxpZFR5cGUSHAoYTEFURVJBTEFDQ0VW",
            "QUxJRF9JTlZBTElEEAASGgoWTEFURVJBTEFDQ0VWQUxJRF9WQUxJRBABIlYK",
            "FlZlaGR5bnlhd3JhdGV2YWxpZFR5cGUSHgoaVkVIRFlOWUFXUkFURVZBTElE",
            "X0lOVkFMSUQQABIcChhWRUhEWU5ZQVdSQVRFVkFMSURfVkFMSUQQASJNChNG",
            "bHdoZWVsc3BkdmFsaWRUeXBlEhsKF0ZMV0hFRUxTUERWQUxJRF9JTlZBTElE",
            "EAASGQoVRkxXSEVFTFNQRFZBTElEX1ZBTElEEAEiTQoTRnJ3aGVlbHNwZHZh",
            "bGlkVHlwZRIbChdGUldIRUVMU1BEVkFMSURfSU5WQUxJRBAAEhkKFUZSV0hF",
            "RUxTUERWQUxJRF9WQUxJRBABIk0KE1Jsd2hlZWxzcGR2YWxpZFR5cGUSGwoX",
            "UkxXSEVFTFNQRFZBTElEX0lOVkFMSUQQABIZChVSTFdIRUVMU1BEVkFMSURf",
            "VkFMSUQQASJNChNScndoZWVsc3BkdmFsaWRUeXBlEhsKF1JSV0hFRUxTUERW",
            "QUxJRF9JTlZBTElEEAASGQoVUlJXSEVFTFNQRFZBTElEX1ZBTElEEAEiTQoT",
            "VmVoaWNsZXNwZHZhbGlkVHlwZRIbChdWRUhJQ0xFU1BEVkFMSURfSU5WQUxJ",
            "RBAAEhkKFVZFSElDTEVTUERWQUxJRF9WQUxJRBABIsoBChhMb25naXR1ZGVk",
            "cml2aW5nbW9kZVR5cGUSIwofTE9OR0lUVURFRFJJVklOR01PREVfTUFOVUFM",
            "TU9ERRAAEikKJUxPTkdJVFVERURSSVZJTkdNT0RFX0FVVE9NQVRJQ1NUQU5E",
            "QlkQARIuCipMT05HSVRVREVEUklWSU5HTU9ERV9BVVRPTUFUSUNBQ0NFTEVS",
            "QVRJT04QAhIuCipMT05HSVRVREVEUklWSU5HTU9ERV9BVVRPTUFUSUNERUNF",
            "TEVSQVRJT04QAyJ3Cg9FbmdzcGR2YWxpZFR5cGUSFwoTRU5HU1BEVkFMSURf",
            "SU5WQUxJRBAAEhUKEUVOR1NQRFZBTElEX1ZBTElEEAESGgoWRU5HU1BEVkFM",
            "SURfSU5JVF9WQUxVRRACEhgKFEVOR1NQRFZBTElEX1JFU0VSVkVEEAMiWwoV",
            "QWNjZXBlZGFsb3ZlcnJpZGVUeXBlEiIKHkFDQ0VQRURBTE9WRVJSSURFX05P",
            "VF9PVkVSUklERRAAEh4KGkFDQ0VQRURBTE9WRVJSSURFX09WRVJSSURFEAEi",
            "kgEKFEJyYWtlcGVkYWxzdGF0dXNUeXBlEiAKHEJSQUtFUEVEQUxTVEFUVVNf",
            "Tk9UX1BSRVNTRUQQABIcChhCUkFLRVBFREFMU1RBVFVTX1BSRVNTRUQQARIe",
            "ChpCUkFLRVBFREFMU1RBVFVTX1JFU0VSVkVEMRACEhoKFkJSQUtFUEVEQUxT",
            "VEFUVVNfRVJST1IQAyJJChRFc3BicmFrZWxpZ2h0c3RzVHlwZRIYChRFU1BC",
            "UkFLRUxJR0hUU1RTX09GRhAAEhcKE0VTUEJSQUtFTElHSFRTVFNfT04QASJb",
            "ChdFcGJzd3Rwb3NpdGlvbnZhbGlkVHlwZRIdChlFUEJTV1RQT1NJVElPTlZB",
            "TElEX1ZBTElEEAASIQodRVBCU1dUUE9TSVRJT05WQUxJRF9OT1RfVkFMSUQQ",
            "ASJgCgpFcGJzdHNUeXBlEhMKD0VQQlNUU19SRUxFQVNFRBAAEhEKDUVQQlNU",
            "U19DTE9TRUQQARIWChJFUEJTVFNfSU5fUFJPR1JFU1MQAhISCg5FUEJTVFNf",
            "VU5LTk9XThADIlAKFEN1cnJlbnRnZWFydmFsaWRUeXBlEhwKGENVUlJFTlRH",
            "RUFSVkFMSURfSU5WQUxJRBAAEhoKFkNVUlJFTlRHRUFSVkFMSURfVkFMSUQQ",
            "ASJJChFFcHN0cnFzbnNyc3RzVHlwZRIYChRFUFNUUlFTTlNSU1RTX05PUk1B",
            "TBAAEhoKFkVQU1RSUVNOU1JTVFNfQUJOT1JNQUwQASJfChlFcHNfaW50ZXJm",
            "ZXJkZXRkdmFsaWRUeXBlEiEKHUVQU19JTlRFUkZFUkRFVERWQUxJRF9JTlZB",
            "TElEEAASHwobRVBTX0lOVEVSRkVSREVURFZBTElEX1ZBTElEEAEiZwoTRXBz",
            "aGFuZHNkZXRuc3RzVHlwZRIpCiVFUFNIQU5EU0RFVE5TVFNfSEFORFNPRkZf",
            "Tk9UX0RFVEVDVEVEEAASJQohRVBTSEFORFNERVROU1RTX0hBTkRPRkZGX0RF",
            "VEVDVEVEEAEiXwoZRXBzX2hhbmRzZGV0bnN0c3ZhbGlkVHlwZRIhCh1FUFNf",
            "SEFORFNERVROU1RTVkFMSURfSU5WQUxJRBAAEh8KG0VQU19IQU5EU0RFVE5T",
            "VFNWQUxJRF9WQUxJRBABImgKF1N0ZWVyd2hlZWxhbmdsZXNpZ25UeXBlEiUK",
            "IVNURUVSV0hFRUxBTkdMRVNJR05fTEVGVF9QT1NJVElWRRAAEiYKIlNURUVS",
            "V0hFRUxBTkdMRVNJR05fUklHSFRfTkVHQVRJVkUQASJiChVTdGVlcndoZWVs",
            "c3Bkc2lnblR5cGUSIwofU1RFRVJXSEVFTFNQRFNJR05fTEVGVF9QT1NJVElW",
            "RRAAEiQKIFNURUVSV0hFRUxTUERTSUdOX1JJR0hUX05FR0FUSVZFEAEiRQoR",
            "RHJpdmVyZG9vcnN0c1R5cGUSGAoURFJJVkVSRE9PUlNUU19DTE9TRUQQABIW",
            "ChJEUklWRVJET09SU1RTX09QRU4QASI5Cg1SbGRvb3JzdHNUeXBlEhQKEFJM",
            "RE9PUlNUU19DTE9TRUQQABISCg5STERPT1JTVFNfT1BFThABIk4KFFBhc3Nl",
            "bmdlcmRvb3JzdHNUeXBlEhsKF1BBU1NFTkdFUkRPT1JTVFNfQ0xPU0VEEAAS",
            "GQoVUEFTU0VOR0VSRE9PUlNUU19PUEVOEAEiOQoNUnJkb29yc3RzVHlwZRIU",
            "ChBSUkRPT1JTVFNfQ0xPU0VEEAASEgoOUlJET09SU1RTX09QRU4QASKCAQoS",
            "RnJvbnRmb2dsbXBzdHNUeXBlEhYKEkZST05URk9HTE1QU1RTX09GRhAAEhUK",
            "EUZST05URk9HTE1QU1RTX09OEAESGwoXRlJPTlRGT0dMTVBTVFNfUkVTRVJW",
            "RUQQAhIgChxGUk9OVEZPR0xNUFNUU19OT1RfQVZBSUxBQkxFEAMiQAoRUmVh",
            "cmZvZ2xtcHN0c1R5cGUSFQoRUkVBUkZPR0xNUFNUU19PRkYQABIUChBSRUFS",
            "Rk9HTE1QU1RTX09OEAEiNwoOTG93YmVhbXN0c1R5cGUSEgoOTE9XQkVBTVNU",
            "U19PRkYQABIRCg1MT1dCRUFNU1RTX09OEAEiOgoPSGlnaGJlYW1zdHNUeXBl",
            "EhMKD0hJR0hCRUFNU1RTX09GRhAAEhIKDkhJR0hCRUFNU1RTX09OEAEiRgoT",
            "TGVmdHR1cm5sYW1wc3RzVHlwZRIXChNMRUZUVFVSTkxBTVBTVFNfT0ZGEAAS",
            "FgoSTEVGVFRVUk5MQU1QU1RTX09OEAEiSQoUUmlnaHR0dXJubGFtcHN0c1R5",
            "cGUSGAoUUklHSFRUVVJOTEFNUFNUU19PRkYQABIXChNSSUdIVFRVUk5MQU1Q",
            "U1RTX09OEAEiigEKEEJjbV9hdmFpbHN0c1R5cGUSHAoYQkNNX0FWQUlMU1RT",
            "X01BTlVBTF9NT0RFEAASIAocQkNNX0FWQUlMU1RTX0FVVE9OT01PVVNfTU9E",
            "RRABEhoKFkJDTV9BVkFJTFNUU19SRVNFUlZFRDEQAhIaChZCQ01fQVZBSUxT",
            "VFNfUkVTRVJWRUQyEAMiOgoPQnJha2VsbXBzdHNUeXBlEhMKD0JSQUtFTE1Q",
            "U1RTX09GRhAAEhIKDkJSQUtFTE1QU1RTX09OEAEiHgoNVmluX3Jlc3AzXzM5",
            "MxINCgV2aW4xNhgBIAEoBSKHAQoNVmluX3Jlc3AyXzM5MhINCgV2aW4xNRgB",
            "IAEoBRINCgV2aW4xNBgCIAEoBRINCgV2aW4xMxgDIAEoBRINCgV2aW4xMhgE",
            "IAEoBRINCgV2aW4xMRgFIAEoBRINCgV2aW4xMBgGIAEoBRINCgV2aW4wORgH",
            "IAEoBRINCgV2aW4wOBgIIAEoBSKHAQoNVmluX3Jlc3AxXzM5MRINCgV2aW4w",
            "NxgBIAEoBRINCgV2aW4wNhgCIAEoBRINCgV2aW4wNRgDIAEoBRINCgV2aW4w",
            "NBgEIAEoBRINCgV2aW4wMxgFIAEoBRINCgV2aW4wMhgGIAEoBRINCgV2aW4w",
            "MBgHIAEoBRINCgV2aW4wMRgIIAEoBSKtAQoPQWRzX3JlcV92aW5fMzkwEkkK",
            "DnJlcV92aW5fc2lnbmFsGAEgASgOMjEuYXBvbGxvLmNhbmJ1cy5BZHNfcmVx",
            "X3Zpbl8zOTAuUmVxX3Zpbl9zaWduYWxUeXBlIk8KElJlcV92aW5fc2lnbmFs",
            "VHlwZRIdChlSRVFfVklOX1NJR05BTF9OT19SRVFVRVNUEAASGgoWUkVRX1ZJ",
            "Tl9TSUdOQUxfUkVRVUVTVBABIo0FCghBZHMxXzExMRJACg1hZHNfZGVjdG9z",
            "dG9wGAEgASgOMikuYXBvbGxvLmNhbmJ1cy5BZHMxXzExMS5BZHNfZGVjdG9z",
            "dG9wVHlwZRI2CghhZHNfbW9kZRgCIAEoDjIkLmFwb2xsby5jYW5idXMuQWRz",
            "MV8xMTEuQWRzX21vZGVUeXBlEhMKC2Fkc190YXJhY2NlGAMgASgBEkYKEGFk",
            "c19kcml2ZW9mZl9yZXEYBCABKA4yLC5hcG9sbG8uY2FuYnVzLkFkczFfMTEx",
            "LkFkc19kcml2ZW9mZl9yZXFUeXBlEhcKD2Fkc19hZWJfdGFyYWNjZRgFIAEo",
            "ARJOChRhZHNfYWViX3RndGRlY2VsX3JlcRgGIAEoDjIwLmFwb2xsby5jYW5i",
            "dXMuQWRzMV8xMTEuQWRzX2FlYl90Z3RkZWNlbF9yZXFUeXBlIkoKEUFkc19k",
            "ZWN0b3N0b3BUeXBlEhsKF0FEU19ERUNUT1NUT1BfTk9fREVNQU5EEAASGAoU",
            "QURTX0RFQ1RPU1RPUF9ERU1BTkQQASI/CgxBZHNfbW9kZVR5cGUSFQoRQURT",
            "X01PREVfT0ZGX01PREUQABIYChRBRFNfTU9ERV9BQ1RJVkVfTU9ERRADIlMK",
            "FEFkc19kcml2ZW9mZl9yZXFUeXBlEh4KGkFEU19EUklWRU9GRl9SRVFfTk9f",
            "REVNQU5EEAASGwoXQURTX0RSSVZFT0ZGX1JFUV9ERU1BTkQQASJfChhBZHNf",
            "YWViX3RndGRlY2VsX3JlcVR5cGUSIgoeQURTX0FFQl9UR1RERUNFTF9SRVFf",
            "Tk9fREVNQU5EEAASHwobQURTX0FFQl9UR1RERUNFTF9SRVFfREVNQU5EEAEi",
            "ggYKCEZiczJfMjQwEkYKEGZsd2hlZWxkaXJlY3Rpb24YASABKA4yLC5hcG9s",
            "bG8uY2FuYnVzLkZiczJfMjQwLkZsd2hlZWxkaXJlY3Rpb25UeXBlEhIKCmZy",
            "d2hlZWxzcGQYAiABKAESUAoVcmx3aGVlbGRyaXZlZGlyZWN0aW9uGAMgASgO",
            "MjEuYXBvbGxvLmNhbmJ1cy5GYnMyXzI0MC5SbHdoZWVsZHJpdmVkaXJlY3Rp",
            "b25UeXBlEhIKCnJsd2hlZWxzcGQYBCABKAESRgoQcnJ3aGVlbGRpcmVjdGlv",
            "bhgFIAEoDjIsLmFwb2xsby5jYW5idXMuRmJzMl8yNDAuUnJ3aGVlbGRpcmVj",
            "dGlvblR5cGUSEgoKcnJ3aGVlbHNwZBgGIAEoARISCgp2ZWhpY2xlc3BkGAcg",
            "ASgBIowBChRGbHdoZWVsZGlyZWN0aW9uVHlwZRIcChhGTFdIRUVMRElSRUNU",
            "SU9OX0lOVkFMSUQQABIcChhGTFdIRUVMRElSRUNUSU9OX0ZPUldBUkQQARId",
            "ChlGTFdIRUVMRElSRUNUSU9OX0JBQ0tXQVJEEAISGQoVRkxXSEVFTERJUkVD",
            "VElPTl9TVE9QEAMipQEKGVJsd2hlZWxkcml2ZWRpcmVjdGlvblR5cGUSIQod",
            "UkxXSEVFTERSSVZFRElSRUNUSU9OX0lOVkFMSUQQABIhCh1STFdIRUVMRFJJ",
            "VkVESVJFQ1RJT05fRk9SV0FSRBABEiIKHlJMV0hFRUxEUklWRURJUkVDVElP",
            "Tl9CQUNLV0FSRBACEh4KGlJMV0hFRUxEUklWRURJUkVDVElPTl9TVE9QEAMi",
            "jAEKFFJyd2hlZWxkaXJlY3Rpb25UeXBlEhwKGFJSV0hFRUxESVJFQ1RJT05f",
            "SU5WQUxJRBAAEhwKGFJSV0hFRUxESVJFQ1RJT05fRk9SV0FSRBABEh0KGVJS",
            "V0hFRUxESVJFQ1RJT05fQkFDS1dBUkQQAhIZChVSUldIRUVMRElSRUNUSU9O",
            "X1NUT1AQAyK4AgoIRmJzMV8yNDMSFQoNbG9uZ2l0dWRlYWNjZRgBIAEoARIT",
            "CgtsYXRlcmFsYWNjZRgCIAEoARIVCg12ZWhkeW55YXdyYXRlGAMgASgBEhIK",
            "CmZsd2hlZWxzcGQYBCABKAESRgoQZnJ3aGVlbGRpcmVjdGlvbhgFIAEoDjIs",
            "LmFwb2xsby5jYW5idXMuRmJzMV8yNDMuRnJ3aGVlbGRpcmVjdGlvblR5cGUi",
            "jAEKFEZyd2hlZWxkaXJlY3Rpb25UeXBlEhwKGEZSV0hFRUxESVJFQ1RJT05f",
            "SU5WQUxJRBAAEhwKGEZSV0hFRUxESVJFQ1RJT05fRk9SV0FSRBABEh0KGUZS",
            "V0hFRUxESVJFQ1RJT05fQkFDS1dBUkQQAhIZChVGUldIRUVMRElSRUNUSU9O",
            "X1NUT1AQAyI6CghGYnM0XzIzNRIXCg9zdGVlcndoZWVsYW5nbGUYASABKAES",
            "FQoNc3RlZXJ3aGVlbHNwZBgCIAEoASKhBgoIRmFpbF8yNDESNAoHZW5nZmFp",
            "bBgBIAEoDjIjLmFwb2xsby5jYW5idXMuRmFpbF8yNDEuRW5nZmFpbFR5cGUS",
            "NAoHZXNwZmFpbBgCIAEoDjIjLmFwb2xsby5jYW5idXMuRmFpbF8yNDEuRXNw",
            "ZmFpbFR5cGUSNAoHZXBiZmFpbBgDIAEoDjIjLmFwb2xsby5jYW5idXMuRmFp",
            "bF8yNDEuRXBiZmFpbFR5cGUSOAoJc2hpZnRmYWlsGAQgASgOMiUuYXBvbGxv",
            "LmNhbmJ1cy5GYWlsXzI0MS5TaGlmdGZhaWxUeXBlEjQKB2Vwc2ZhaWwYBSAB",
            "KA4yIy5hcG9sbG8uY2FuYnVzLkZhaWxfMjQxLkVwc2ZhaWxUeXBlIjQKC0Vu",
            "Z2ZhaWxUeXBlEhMKD0VOR0ZBSUxfTk9fRkFJTBAAEhAKDEVOR0ZBSUxfRkFJ",
            "TBABIjoKC0VzcGZhaWxUeXBlEhYKEkVTUEZBSUxfTk9fRkFJTFVSRRAAEhMK",
            "D0VTUEZBSUxfRkFJTFVSRRABImQKC0VwYmZhaWxUeXBlEhUKEUVQQkZBSUxf",
            "VU5ERUZJTkVEEAASFAoQRVBCRkFJTF9OT19FUlJPUhABEhEKDUVQQkZBSUxf",
            "RVJST1IQAhIVChFFUEJGQUlMX0RJQUdOT1NJUxADIvIBCg1TaGlmdGZhaWxU",
            "eXBlEhUKEVNISUZURkFJTF9OT19GQUlMEAASJgoiU0hJRlRGQUlMX1RSQU5T",
            "TUlTU0lPTl9NQUxGVU5DVElPThABEi0KKVNISUZURkFJTF9UUkFOU01JU1NJ",
            "T05fUF9FTkdBR0VNRU5UX0ZBVUxUEAISMAosU0hJRlRGQUlMX1RSQU5TTUlT",
            "U0lPTl9QX0RJU0VOR0FHRU1FTlRfRkFVTFQQAxIWChJTSElGVEZBSUxfUkVT",
            "RVJWRUQQBBIpCiVTSElGVEZBSUxfVFJBTlNNSVNTSU9OX0xJTUlUX0ZVTkNU",
            "SU9OEA8iNgoLRXBzZmFpbFR5cGUSFAoQRVBTRkFJTF9OT19GQVVMVBAAEhEK",
            "DUVQU0ZBSUxfRkFVTFQQASKeCQoIRmJzM18yMzcSDgoGZW5nc3BkGAEgASgB",
            "EhMKC2FjY3BlZGFscG9zGAIgASgBEkgKEWVwYnN3dGljaHBvc2l0aW9uGAMg",
            "ASgOMi0uYXBvbGxvLmNhbmJ1cy5GYnMzXzIzNy5FcGJzd3RpY2hwb3NpdGlv",
            "blR5cGUSPAoLY3VycmVudGdlYXIYBCABKA4yJy5hcG9sbG8uY2FuYnVzLkZi",
            "czNfMjM3LkN1cnJlbnRnZWFyVHlwZRJGChBlcHNfc3RyZWVpbmdtb2RlGAUg",
            "ASgOMiwuYXBvbGxvLmNhbmJ1cy5GYnMzXzIzNy5FcHNfc3RyZWVpbmdtb2Rl",
            "VHlwZRIbChNlcHNkcnZpbnB1dHRycXZhbHVlGAYgASgBEhwKFGVwc2NvbnN1",
            "bWVkY3VycnZhbHVlGAcgASgBEjoKCmVwc2N1cnJtb2QYCCABKA4yJi5hcG9s",
            "bG8uY2FuYnVzLkZiczNfMjM3LkVwc2N1cnJtb2RUeXBlIpMBChVFcGJzd3Rp",
            "Y2hwb3NpdGlvblR5cGUSHQoZRVBCU1dUSUNIUE9TSVRJT05fTkVVVFJBTBAA",
            "Eh0KGUVQQlNXVElDSFBPU0lUSU9OX1JFTEVBU0UQARIbChdFUEJTV1RJQ0hQ",
            "T1NJVElPTl9BUFBMWRACEh8KG0VQQlNXVElDSFBPU0lUSU9OX1JFU0VSVkVE",
            "MRADIl0KD0N1cnJlbnRnZWFyVHlwZRIRCg1DVVJSRU5UR0VBUl9QEAASEQoN",
            "Q1VSUkVOVEdFQVJfUhABEhEKDUNVUlJFTlRHRUFSX04QAhIRCg1DVVJSRU5U",
            "R0VBUl9EEAMiygIKFEVwc19zdHJlZWluZ21vZGVUeXBlEhsKF0VQU19TVFJF",
            "RUlOR01PREVfTUFOVUFMEAASJAogRVBTX1NUUkVFSU5HTU9ERV9BVVRPTUFU",
            "SUNfQVZBSUwQARIvCitFUFNfU1RSRUVJTkdNT0RFX01BTlVBTF9GUk9NX0RS",
            "Vk5URVJGRVJFTkNFEAISNAowRVBTX1NUUkVFSU5HTU9ERV9NQU5VQUxfRlJP",
            "TV9FUFNfRkFJTEVEX0RFVEVDVEVEEAMSKAokRVBTX1NUUkVFSU5HTU9ERV9U",
            "RU1QT1JBUllfSU5ISUJJVEVEEAQSHgoaRVBTX1NUUkVFSU5HTU9ERV9SRVNF",
            "UlZFRDEQBRIeChpFUFNfU1RSRUVJTkdNT0RFX1JFU0VSVkVEMhAGEh4KGkVQ",
            "U19TVFJFRUlOR01PREVfUkVTRVJWRUQzEAci4wEKDkVwc2N1cnJtb2RUeXBl",
            "EhoKFkVQU0NVUlJNT0RfTk9STUFMX01PREUQABIZChVFUFNDVVJSTU9EX1NQ",
            "T1JUX01PREUQARIbChdFUFNDVVJSTU9EX0NPTUZPUlRfTU9ERRACEicKI0VQ",
            "U0NVUlJNT0RfTU9ERVNFTEVDVElPTk5PVFBPU1NJQkxFEAMSGQoVRVBTQ1VS",
            "Uk1PRF9OT19ESVNQTEFZEAQSHwobRVBTQ1VSUk1PRF9DT05ESVRJT05OT1RN",
            "RUVUEAUSGAoURVBTQ1VSUk1PRF9SRVNFUlZFRDEQBiK8DwoIQWRzM18zOGUS",
            "RAoPYWRzX2JjbV93b3Jrc3RzGAEgASgOMisuYXBvbGxvLmNhbmJ1cy5BZHMz",
            "XzM4ZS5BZHNfYmNtX3dvcmtzdHNUeXBlEkwKE2Fkc19iY213b3Jrc3RzdmFs",
            "aWQYAiABKA4yLy5hcG9sbG8uY2FuYnVzLkFkczNfMzhlLkFkc19iY213b3Jr",
            "c3RzdmFsaWRUeXBlEkgKEWFkc19yZXFjb250cm9sYmNtGAMgASgOMi0uYXBv",
            "bGxvLmNhbmJ1cy5BZHMzXzM4ZS5BZHNfcmVxY29udHJvbGJjbVR5cGUSPAoL",
            "aGlnaGJlYW10b24YBCABKA4yJy5hcG9sbG8uY2FuYnVzLkFkczNfMzhlLkhp",
            "Z2hiZWFtdG9uVHlwZRI+CgxkaXBwZWRiZWFtb24YBSABKA4yKC5hcG9sbG8u",
            "Y2FuYnVzLkFkczNfMzhlLkRpcHBlZGJlYW1vblR5cGUSPgoMdHVybmxsaWdo",
            "dG9uGAYgASgOMiguYXBvbGxvLmNhbmJ1cy5BZHMzXzM4ZS5UdXJubGxpZ2h0",
            "b25UeXBlEkYKEGVtZXJnZW5jeWxpZ2h0b24YByABKA4yLC5hcG9sbG8uY2Fu",
            "YnVzLkFkczNfMzhlLkVtZXJnZW5jeWxpZ2h0b25UeXBlEjoKCmZmb2dsYW1w",
            "b24YCCABKA4yJi5hcG9sbG8uY2FuYnVzLkFkczNfMzhlLkZmb2dsYW1wb25U",
            "eXBlEjoKCnJmb2dsYW1wb24YCSABKA4yJi5hcG9sbG8uY2FuYnVzLkFkczNf",
            "MzhlLlJmb2dsYW1wb25UeXBlEjoKCmJyYWtlbGlnaHQYCiABKA4yJi5hcG9s",
            "bG8uY2FuYnVzLkFkczNfMzhlLkJyYWtlbGlnaHRUeXBlEjIKBmhvcm5vbhgL",
            "IAEoDjIiLmFwb2xsby5jYW5idXMuQWRzM18zOGUuSG9ybm9uVHlwZRJGChBm",
            "d2luZHNoaWVsZHdpcGVyGAwgASgOMiwuYXBvbGxvLmNhbmJ1cy5BZHMzXzM4",
            "ZS5Gd2luZHNoaWVsZHdpcGVyVHlwZRJGChByd2luZHNoaWVsZHdpcGVyGA0g",
            "ASgOMiwuYXBvbGxvLmNhbmJ1cy5BZHMzXzM4ZS5Sd2luZHNoaWVsZHdpcGVy",
            "VHlwZSKGAQoTQWRzX2JjbV93b3Jrc3RzVHlwZRIbChdBRFNfQkNNX1dPUktT",
            "VFNfRElTQUJMRRAAEhoKFkFEU19CQ01fV09SS1NUU19FTkFCTEUQARIaChZB",
            "RFNfQkNNX1dPUktTVFNfQUNUSVZFEAISGgoWQURTX0JDTV9XT1JLU1RTX0ZB",
            "SUxFRBADIlkKF0Fkc19iY213b3Jrc3RzdmFsaWRUeXBlEh8KG0FEU19CQ01X",
            "T1JLU1RTVkFMSURfSU5WQUxJRBAAEh0KGUFEU19CQ01XT1JLU1RTVkFMSURf",
            "VkFMSUQQASJYChVBZHNfcmVxY29udHJvbGJjbVR5cGUSIAocQURTX1JFUUNP",
            "TlRST0xCQ01fTk9fUkVRVUVTVBAAEh0KGUFEU19SRVFDT05UUk9MQkNNX1JF",
            "UVVFU1QQASJECg9IaWdoYmVhbXRvblR5cGUSGAoUSElHSEJFQU1UT05fVFVS",
            "Tl9PRkYQABIXChNISUdIQkVBTVRPTl9UVVJOX09OEAEiRwoQRGlwcGVkYmVh",
            "bW9uVHlwZRIZChVESVBQRURCRUFNT05fVFVSTl9PRkYQABIYChRESVBQRURC",
            "RUFNT05fVFVSTl9PThABIocBChBUdXJubGxpZ2h0b25UeXBlEhkKFVRVUk5M",
            "TElHSFRPTl9UVVJOX09GRhAAEh0KGVRVUk5MTElHSFRPTl9UVVJOX0xFRlRf",
            "T04QARIeChpUVVJOTExJR0hUT05fVFVSTl9SSUdIVF9PThACEhkKFVRVUk5M",
            "TElHSFRPTl9SRVNFUlZFRBADIlMKFEVtZXJnZW5jeWxpZ2h0b25UeXBlEh0K",
            "GUVNRVJHRU5DWUxJR0hUT05fVFVSTl9PRkYQABIcChhFTUVSR0VOQ1lMSUdI",
            "VE9OX1RVUk5fT04QASJBCg5GZm9nbGFtcG9uVHlwZRIXChNGRk9HTEFNUE9O",
            "X1RVUk5fT0ZGEAASFgoSRkZPR0xBTVBPTl9UVVJOX09OEAEiQQoOUmZvZ2xh",
            "bXBvblR5cGUSFwoTUkZPR0xBTVBPTl9UVVJOX09GRhAAEhYKElJGT0dMQU1Q",
            "T05fVFVSTl9PThABIkEKDkJyYWtlbGlnaHRUeXBlEhcKE0JSQUtFTElHSFRf",
            "VFVSTl9PRkYQABIWChJCUkFLRUxJR0hUX1RVUk5fT04QASI1CgpIb3Jub25U",
            "eXBlEhMKD0hPUk5PTl9UVVJOX09GRhAAEhIKDkhPUk5PTl9UVVJOX09OEAEi",
            "UwoURndpbmRzaGllbGR3aXBlclR5cGUSHQoZRldJTkRTSElFTERXSVBFUl9U",
            "VVJOX09GRhAAEhwKGEZXSU5EU0hJRUxEV0lQRVJfVFVSTl9PThABIlMKFFJ3",
            "aW5kc2hpZWxkd2lwZXJUeXBlEh0KGVJXSU5EU0hJRUxEV0lQRVJfVFVSTl9P",
            "RkYQABIcChhSV0lORFNISUVMRFdJUEVSX1RVUk5fT04QASKjBQoDV2V5EjcK",
            "D2Fkc19zaGlmdGVyXzExNRgBIAEoCzIeLmFwb2xsby5jYW5idXMuQWRzX3No",
            "aWZ0ZXJfMTE1Ei8KC2Fkc19lcHNfMTEzGAIgASgLMhouYXBvbGxvLmNhbmJ1",
            "cy5BZHNfZXBzXzExMxItCgpzdGF0dXNfMzEwGAMgASgLMhkuYXBvbGxvLmNh",
            "bmJ1cy5TdGF0dXNfMzEwEjMKDXZpbl9yZXNwM18zOTMYBCABKAsyHC5hcG9s",
            "bG8uY2FuYnVzLlZpbl9yZXNwM18zOTMSMwoNdmluX3Jlc3AyXzM5MhgFIAEo",
            "CzIcLmFwb2xsby5jYW5idXMuVmluX3Jlc3AyXzM5MhIzCg12aW5fcmVzcDFf",
            "MzkxGAYgASgLMhwuYXBvbGxvLmNhbmJ1cy5WaW5fcmVzcDFfMzkxEjcKD2Fk",
            "c19yZXFfdmluXzM5MBgHIAEoCzIeLmFwb2xsby5jYW5idXMuQWRzX3JlcV92",
            "aW5fMzkwEikKCGFkczFfMTExGAggASgLMhcuYXBvbGxvLmNhbmJ1cy5BZHMx",
            "XzExMRIpCghmYnMyXzI0MBgJIAEoCzIXLmFwb2xsby5jYW5idXMuRmJzMl8y",
            "NDASKQoIZmJzMV8yNDMYCiABKAsyFy5hcG9sbG8uY2FuYnVzLkZiczFfMjQz",
            "EikKCGZiczRfMjM1GAsgASgLMhcuYXBvbGxvLmNhbmJ1cy5GYnM0XzIzNRIp",
            "CghmYWlsXzI0MRgMIAEoCzIXLmFwb2xsby5jYW5idXMuRmFpbF8yNDESKQoI",
            "ZmJzM18yMzcYDSABKAsyFy5hcG9sbG8uY2FuYnVzLkZiczNfMjM3EikKCGFk",
            "czNfMzhlGA4gASgLMhcuYXBvbGxvLmNhbmJ1cy5BZHMzXzM4ZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Canbus.Ads_shifter_115), global::Apollo.Canbus.Ads_shifter_115.Parser, new[]{ "AdsShiftmode", "AdsTargetgear" }, null, new[]{ typeof(global::Apollo.Canbus.Ads_shifter_115.Types.Ads_shiftmodeType), typeof(global::Apollo.Canbus.Ads_shifter_115.Types.Ads_targetgearType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Canbus.Ads_eps_113), global::Apollo.Canbus.Ads_eps_113.Parser, new[]{ "AdsEpsmode", "AdsReqepstargetangle" }, null, new[]{ typeof(global::Apollo.Canbus.Ads_eps_113.Types.Ads_epsmodeType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Canbus.Status_310), global::Apollo.Canbus.Status_310.Parser, new[]{ "Longitudeaccvalid", "Lateralaccevalid", "Vehdynyawratevalid", "Flwheelspdvalid", "Frwheelspdvalid", "Rlwheelspdvalid", "Rrwheelspdvalid", "Vehiclespdvalid", "Longitudedrivingmode", "Engspdvalid", "Accepedaloverride", "Brakepedalstatus", "Espbrakelightsts", "Epbswtpositionvalid", "Epbsts", "Currentgearvalid", "Epstrqsnsrsts", "EpsInterferdetdvalid", "Epshandsdetnsts", "EpsHandsdetnstsvalid", "Steerwheelanglesign", "Steerwheelspdsign", "Driverdoorsts", "Rldoorsts", "Passengerdoorsts", "Rrdoorsts", "Frontfoglmpsts", "Rearfoglmpsts", "Lowbeamsts", "Highbeamsts", "Leftturnlampsts", "Rightturnlampsts", "BcmAvailsts", "Brakelmpsts" }, null, new[]{ typeof(global::Apollo.Canbus.Status_310.Types.LongitudeaccvalidType), typeof(global::Apollo.Canbus.Status_310.Types.LateralaccevalidType), typeof(global::Apollo.Canbus.Status_310.Types.VehdynyawratevalidType), typeof(global::Apollo.Canbus.Status_310.Types.FlwheelspdvalidType), typeof(global::Apollo.Canbus.Status_310.Types.FrwheelspdvalidType), typeof(global::Apollo.Canbus.Status_310.Types.RlwheelspdvalidType), typeof(global::Apollo.Canbus.Status_310.Types.RrwheelspdvalidType), typeof(global::Apollo.Canbus.Status_310.Types.VehiclespdvalidType), typeof(global::Apollo.Canbus.Status_310.Types.LongitudedrivingmodeType), typeof(global::Apollo.Canbus.Status_310.Types.EngspdvalidType), typeof(global::Apollo.Canbus.Status_310.Types.AccepedaloverrideType), typeof(global::Apollo.Canbus.Status_310.Types.BrakepedalstatusType), typeof(global::Apollo.Canbus.Status_310.Types.EspbrakelightstsType), typeof(global::Apollo.Canbus.Status_310.Types.EpbswtpositionvalidType), typeof(global::Apollo.Canbus.Status_310.Types.EpbstsType), typeof(global::Apollo.Canbus.Status_310.Types.CurrentgearvalidType), typeof(global::Apollo.Canbus.Status_310.Types.EpstrqsnsrstsType), typeof(global::Apollo.Canbus.Status_310.Types.Eps_interferdetdvalidType), typeof(global::Apollo.Canbus.Status_310.Types.EpshandsdetnstsType), typeof(global::Apollo.Canbus.Status_310.Types.Eps_handsdetnstsvalidType), typeof(global::Apollo.Canbus.Status_310.Types.SteerwheelanglesignType), typeof(global::Apollo.Canbus.Status_310.Types.SteerwheelspdsignType), typeof(global::Apollo.Canbus.Status_310.Types.DriverdoorstsType), typeof(global::Apollo.Canbus.Status_310.Types.RldoorstsType), typeof(global::Apollo.Canbus.Status_310.Types.PassengerdoorstsType), typeof(global::Apollo.Canbus.Status_310.Types.RrdoorstsType), typeof(global::Apollo.Canbus.Status_310.Types.FrontfoglmpstsType), typeof(global::Apollo.Canbus.Status_310.Types.RearfoglmpstsType), typeof(global::Apollo.Canbus.Status_310.Types.LowbeamstsType), typeof(global::Apollo.Canbus.Status_310.Types.HighbeamstsType), typeof(global::Apollo.Canbus.Status_310.Types.LeftturnlampstsType), typeof(global::Apollo.Canbus.Status_310.Types.RightturnlampstsType), typeof(global::Apollo.Canbus.Status_310.Types.Bcm_availstsType), typeof(global::Apollo.Canbus.Status_310.Types.BrakelmpstsType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Canbus.Vin_resp3_393), global::Apollo.Canbus.Vin_resp3_393.Parser, new[]{ "Vin16" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Canbus.Vin_resp2_392), global::Apollo.Canbus.Vin_resp2_392.Parser, new[]{ "Vin15", "Vin14", "Vin13", "Vin12", "Vin11", "Vin10", "Vin09", "Vin08" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Canbus.Vin_resp1_391), global::Apollo.Canbus.Vin_resp1_391.Parser, new[]{ "Vin07", "Vin06", "Vin05", "Vin04", "Vin03", "Vin02", "Vin00", "Vin01" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Canbus.Ads_req_vin_390), global::Apollo.Canbus.Ads_req_vin_390.Parser, new[]{ "ReqVinSignal" }, null, new[]{ typeof(global::Apollo.Canbus.Ads_req_vin_390.Types.Req_vin_signalType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Canbus.Ads1_111), global::Apollo.Canbus.Ads1_111.Parser, new[]{ "AdsDectostop", "AdsMode", "AdsTaracce", "AdsDriveoffReq", "AdsAebTaracce", "AdsAebTgtdecelReq" }, null, new[]{ typeof(global::Apollo.Canbus.Ads1_111.Types.Ads_dectostopType), typeof(global::Apollo.Canbus.Ads1_111.Types.Ads_modeType), typeof(global::Apollo.Canbus.Ads1_111.Types.Ads_driveoff_reqType), typeof(global::Apollo.Canbus.Ads1_111.Types.Ads_aeb_tgtdecel_reqType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Canbus.Fbs2_240), global::Apollo.Canbus.Fbs2_240.Parser, new[]{ "Flwheeldirection", "Frwheelspd", "Rlwheeldrivedirection", "Rlwheelspd", "Rrwheeldirection", "Rrwheelspd", "Vehiclespd" }, null, new[]{ typeof(global::Apollo.Canbus.Fbs2_240.Types.FlwheeldirectionType), typeof(global::Apollo.Canbus.Fbs2_240.Types.RlwheeldrivedirectionType), typeof(global::Apollo.Canbus.Fbs2_240.Types.RrwheeldirectionType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Canbus.Fbs1_243), global::Apollo.Canbus.Fbs1_243.Parser, new[]{ "Longitudeacce", "Lateralacce", "Vehdynyawrate", "Flwheelspd", "Frwheeldirection" }, null, new[]{ typeof(global::Apollo.Canbus.Fbs1_243.Types.FrwheeldirectionType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Canbus.Fbs4_235), global::Apollo.Canbus.Fbs4_235.Parser, new[]{ "Steerwheelangle", "Steerwheelspd" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Canbus.Fail_241), global::Apollo.Canbus.Fail_241.Parser, new[]{ "Engfail", "Espfail", "Epbfail", "Shiftfail", "Epsfail" }, null, new[]{ typeof(global::Apollo.Canbus.Fail_241.Types.EngfailType), typeof(global::Apollo.Canbus.Fail_241.Types.EspfailType), typeof(global::Apollo.Canbus.Fail_241.Types.EpbfailType), typeof(global::Apollo.Canbus.Fail_241.Types.ShiftfailType), typeof(global::Apollo.Canbus.Fail_241.Types.EpsfailType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Canbus.Fbs3_237), global::Apollo.Canbus.Fbs3_237.Parser, new[]{ "Engspd", "Accpedalpos", "Epbswtichposition", "Currentgear", "EpsStreeingmode", "Epsdrvinputtrqvalue", "Epsconsumedcurrvalue", "Epscurrmod" }, null, new[]{ typeof(global::Apollo.Canbus.Fbs3_237.Types.EpbswtichpositionType), typeof(global::Apollo.Canbus.Fbs3_237.Types.CurrentgearType), typeof(global::Apollo.Canbus.Fbs3_237.Types.Eps_streeingmodeType), typeof(global::Apollo.Canbus.Fbs3_237.Types.EpscurrmodType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Canbus.Ads3_38e), global::Apollo.Canbus.Ads3_38e.Parser, new[]{ "AdsBcmWorksts", "AdsBcmworkstsvalid", "AdsReqcontrolbcm", "Highbeamton", "Dippedbeamon", "Turnllighton", "Emergencylighton", "Ffoglampon", "Rfoglampon", "Brakelight", "Hornon", "Fwindshieldwiper", "Rwindshieldwiper" }, null, new[]{ typeof(global::Apollo.Canbus.Ads3_38e.Types.Ads_bcm_workstsType), typeof(global::Apollo.Canbus.Ads3_38e.Types.Ads_bcmworkstsvalidType), typeof(global::Apollo.Canbus.Ads3_38e.Types.Ads_reqcontrolbcmType), typeof(global::Apollo.Canbus.Ads3_38e.Types.HighbeamtonType), typeof(global::Apollo.Canbus.Ads3_38e.Types.DippedbeamonType), typeof(global::Apollo.Canbus.Ads3_38e.Types.TurnllightonType), typeof(global::Apollo.Canbus.Ads3_38e.Types.EmergencylightonType), typeof(global::Apollo.Canbus.Ads3_38e.Types.FfoglamponType), typeof(global::Apollo.Canbus.Ads3_38e.Types.RfoglamponType), typeof(global::Apollo.Canbus.Ads3_38e.Types.BrakelightType), typeof(global::Apollo.Canbus.Ads3_38e.Types.HornonType), typeof(global::Apollo.Canbus.Ads3_38e.Types.FwindshieldwiperType), typeof(global::Apollo.Canbus.Ads3_38e.Types.RwindshieldwiperType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Canbus.Wey), global::Apollo.Canbus.Wey.Parser, new[]{ "AdsShifter115", "AdsEps113", "Status310", "VinResp3393", "VinResp2392", "VinResp1391", "AdsReqVin390", "Ads1111", "Fbs2240", "Fbs1243", "Fbs4235", "Fail241", "Fbs3237", "Ads338E" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Ads_shifter_115 : pb::IMessage<Ads_shifter_115> {
    private static readonly pb::MessageParser<Ads_shifter_115> _parser = new pb::MessageParser<Ads_shifter_115>(() => new Ads_shifter_115());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Ads_shifter_115> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Canbus.WeyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ads_shifter_115() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ads_shifter_115(Ads_shifter_115 other) : this() {
      adsShiftmode_ = other.adsShiftmode_;
      adsTargetgear_ = other.adsTargetgear_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ads_shifter_115 Clone() {
      return new Ads_shifter_115(this);
    }

    /// <summary>Field number for the "ads_shiftmode" field.</summary>
    public const int AdsShiftmodeFieldNumber = 1;
    private global::Apollo.Canbus.Ads_shifter_115.Types.Ads_shiftmodeType adsShiftmode_ = 0;
    /// <summary>
    /// ADS Shift Mode  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Ads_shifter_115.Types.Ads_shiftmodeType AdsShiftmode {
      get { return adsShiftmode_; }
      set {
        adsShiftmode_ = value;
      }
    }

    /// <summary>Field number for the "ads_targetgear" field.</summary>
    public const int AdsTargetgearFieldNumber = 2;
    private global::Apollo.Canbus.Ads_shifter_115.Types.Ads_targetgearType adsTargetgear_ = 0;
    /// <summary>
    /// ADS Target Gear  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Ads_shifter_115.Types.Ads_targetgearType AdsTargetgear {
      get { return adsTargetgear_; }
      set {
        adsTargetgear_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Ads_shifter_115);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Ads_shifter_115 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AdsShiftmode != other.AdsShiftmode) return false;
      if (AdsTargetgear != other.AdsTargetgear) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AdsShiftmode != 0) hash ^= AdsShiftmode.GetHashCode();
      if (AdsTargetgear != 0) hash ^= AdsTargetgear.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AdsShiftmode != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AdsShiftmode);
      }
      if (AdsTargetgear != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) AdsTargetgear);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AdsShiftmode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AdsShiftmode);
      }
      if (AdsTargetgear != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AdsTargetgear);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Ads_shifter_115 other) {
      if (other == null) {
        return;
      }
      if (other.AdsShiftmode != 0) {
        AdsShiftmode = other.AdsShiftmode;
      }
      if (other.AdsTargetgear != 0) {
        AdsTargetgear = other.AdsTargetgear;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            adsShiftmode_ = (global::Apollo.Canbus.Ads_shifter_115.Types.Ads_shiftmodeType) input.ReadEnum();
            break;
          }
          case 16: {
            adsTargetgear_ = (global::Apollo.Canbus.Ads_shifter_115.Types.Ads_targetgearType) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Ads_shifter_115 message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Control Message
      /// </summary>
      public enum Ads_shiftmodeType {
        [pbr::OriginalName("ADS_SHIFTMODE_INVALID")] AdsShiftmodeInvalid = 0,
        [pbr::OriginalName("ADS_SHIFTMODE_VALID")] AdsShiftmodeValid = 1,
      }

      public enum Ads_targetgearType {
        [pbr::OriginalName("ADS_TARGETGEAR_N")] AdsTargetgearN = 0,
        [pbr::OriginalName("ADS_TARGETGEAR_R")] AdsTargetgearR = 1,
        [pbr::OriginalName("ADS_TARGETGEAR_P")] AdsTargetgearP = 2,
        [pbr::OriginalName("ADS_TARGETGEAR_D")] AdsTargetgearD = 3,
      }

    }
    #endregion

  }

  public sealed partial class Ads_eps_113 : pb::IMessage<Ads_eps_113> {
    private static readonly pb::MessageParser<Ads_eps_113> _parser = new pb::MessageParser<Ads_eps_113>(() => new Ads_eps_113());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Ads_eps_113> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Canbus.WeyReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ads_eps_113() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ads_eps_113(Ads_eps_113 other) : this() {
      adsEpsmode_ = other.adsEpsmode_;
      adsReqepstargetangle_ = other.adsReqepstargetangle_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ads_eps_113 Clone() {
      return new Ads_eps_113(this);
    }

    /// <summary>Field number for the "ads_epsmode" field.</summary>
    public const int AdsEpsmodeFieldNumber = 1;
    private global::Apollo.Canbus.Ads_eps_113.Types.Ads_epsmodeType adsEpsmode_ = 0;
    /// <summary>
    /// EPS Mode  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Ads_eps_113.Types.Ads_epsmodeType AdsEpsmode {
      get { return adsEpsmode_; }
      set {
        adsEpsmode_ = value;
      }
    }

    /// <summary>Field number for the "ads_reqepstargetangle" field.</summary>
    public const int AdsReqepstargetangleFieldNumber = 2;
    private double adsReqepstargetangle_;
    /// <summary>
    /// Steering Wheel Target Angle  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double AdsReqepstargetangle {
      get { return adsReqepstargetangle_; }
      set {
        adsReqepstargetangle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Ads_eps_113);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Ads_eps_113 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AdsEpsmode != other.AdsEpsmode) return false;
      if (AdsReqepstargetangle != other.AdsReqepstargetangle) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AdsEpsmode != 0) hash ^= AdsEpsmode.GetHashCode();
      if (AdsReqepstargetangle != 0D) hash ^= AdsReqepstargetangle.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AdsEpsmode != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AdsEpsmode);
      }
      if (AdsReqepstargetangle != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(AdsReqepstargetangle);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AdsEpsmode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AdsEpsmode);
      }
      if (AdsReqepstargetangle != 0D) {
        size += 1 + 8;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Ads_eps_113 other) {
      if (other == null) {
        return;
      }
      if (other.AdsEpsmode != 0) {
        AdsEpsmode = other.AdsEpsmode;
      }
      if (other.AdsReqepstargetangle != 0D) {
        AdsReqepstargetangle = other.AdsReqepstargetangle;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            adsEpsmode_ = (global::Apollo.Canbus.Ads_eps_113.Types.Ads_epsmodeType) input.ReadEnum();
            break;
          }
          case 17: {
            AdsReqepstargetangle = input.ReadDouble();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Ads_eps_113 message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Control Message
      /// </summary>
      public enum Ads_epsmodeType {
        [pbr::OriginalName("ADS_EPSMODE_DISABLE")] AdsEpsmodeDisable = 0,
        [pbr::OriginalName("ADS_EPSMODE_ACTIVE")] AdsEpsmodeActive = 2,
      }

    }
    #endregion

  }

  public sealed partial class Status_310 : pb::IMessage<Status_310> {
    private static readonly pb::MessageParser<Status_310> _parser = new pb::MessageParser<Status_310>(() => new Status_310());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Status_310> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Canbus.WeyReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Status_310() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Status_310(Status_310 other) : this() {
      longitudeaccvalid_ = other.longitudeaccvalid_;
      lateralaccevalid_ = other.lateralaccevalid_;
      vehdynyawratevalid_ = other.vehdynyawratevalid_;
      flwheelspdvalid_ = other.flwheelspdvalid_;
      frwheelspdvalid_ = other.frwheelspdvalid_;
      rlwheelspdvalid_ = other.rlwheelspdvalid_;
      rrwheelspdvalid_ = other.rrwheelspdvalid_;
      vehiclespdvalid_ = other.vehiclespdvalid_;
      longitudedrivingmode_ = other.longitudedrivingmode_;
      engspdvalid_ = other.engspdvalid_;
      accepedaloverride_ = other.accepedaloverride_;
      brakepedalstatus_ = other.brakepedalstatus_;
      espbrakelightsts_ = other.espbrakelightsts_;
      epbswtpositionvalid_ = other.epbswtpositionvalid_;
      epbsts_ = other.epbsts_;
      currentgearvalid_ = other.currentgearvalid_;
      epstrqsnsrsts_ = other.epstrqsnsrsts_;
      epsInterferdetdvalid_ = other.epsInterferdetdvalid_;
      epshandsdetnsts_ = other.epshandsdetnsts_;
      epsHandsdetnstsvalid_ = other.epsHandsdetnstsvalid_;
      steerwheelanglesign_ = other.steerwheelanglesign_;
      steerwheelspdsign_ = other.steerwheelspdsign_;
      driverdoorsts_ = other.driverdoorsts_;
      rldoorsts_ = other.rldoorsts_;
      passengerdoorsts_ = other.passengerdoorsts_;
      rrdoorsts_ = other.rrdoorsts_;
      frontfoglmpsts_ = other.frontfoglmpsts_;
      rearfoglmpsts_ = other.rearfoglmpsts_;
      lowbeamsts_ = other.lowbeamsts_;
      highbeamsts_ = other.highbeamsts_;
      leftturnlampsts_ = other.leftturnlampsts_;
      rightturnlampsts_ = other.rightturnlampsts_;
      bcmAvailsts_ = other.bcmAvailsts_;
      brakelmpsts_ = other.brakelmpsts_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Status_310 Clone() {
      return new Status_310(this);
    }

    /// <summary>Field number for the "longitudeaccvalid" field.</summary>
    public const int LongitudeaccvalidFieldNumber = 1;
    private global::Apollo.Canbus.Status_310.Types.LongitudeaccvalidType longitudeaccvalid_ = 0;
    /// <summary>
    /// Longitude acceleration valid  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310.Types.LongitudeaccvalidType Longitudeaccvalid {
      get { return longitudeaccvalid_; }
      set {
        longitudeaccvalid_ = value;
      }
    }

    /// <summary>Field number for the "lateralaccevalid" field.</summary>
    public const int LateralaccevalidFieldNumber = 2;
    private global::Apollo.Canbus.Status_310.Types.LateralaccevalidType lateralaccevalid_ = 0;
    /// <summary>
    /// Indicates Lateral Signal State  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310.Types.LateralaccevalidType Lateralaccevalid {
      get { return lateralaccevalid_; }
      set {
        lateralaccevalid_ = value;
      }
    }

    /// <summary>Field number for the "vehdynyawratevalid" field.</summary>
    public const int VehdynyawratevalidFieldNumber = 3;
    private global::Apollo.Canbus.Status_310.Types.VehdynyawratevalidType vehdynyawratevalid_ = 0;
    /// <summary>
    /// Vehicle yaw rate valid  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310.Types.VehdynyawratevalidType Vehdynyawratevalid {
      get { return vehdynyawratevalid_; }
      set {
        vehdynyawratevalid_ = value;
      }
    }

    /// <summary>Field number for the "flwheelspdvalid" field.</summary>
    public const int FlwheelspdvalidFieldNumber = 4;
    private global::Apollo.Canbus.Status_310.Types.FlwheelspdvalidType flwheelspdvalid_ = 0;
    /// <summary>
    /// Front right wheel speed valid  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310.Types.FlwheelspdvalidType Flwheelspdvalid {
      get { return flwheelspdvalid_; }
      set {
        flwheelspdvalid_ = value;
      }
    }

    /// <summary>Field number for the "frwheelspdvalid" field.</summary>
    public const int FrwheelspdvalidFieldNumber = 5;
    private global::Apollo.Canbus.Status_310.Types.FrwheelspdvalidType frwheelspdvalid_ = 0;
    /// <summary>
    /// Front right wheel speed valid  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310.Types.FrwheelspdvalidType Frwheelspdvalid {
      get { return frwheelspdvalid_; }
      set {
        frwheelspdvalid_ = value;
      }
    }

    /// <summary>Field number for the "rlwheelspdvalid" field.</summary>
    public const int RlwheelspdvalidFieldNumber = 6;
    private global::Apollo.Canbus.Status_310.Types.RlwheelspdvalidType rlwheelspdvalid_ = 0;
    /// <summary>
    /// Rear left wheel speed valid  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310.Types.RlwheelspdvalidType Rlwheelspdvalid {
      get { return rlwheelspdvalid_; }
      set {
        rlwheelspdvalid_ = value;
      }
    }

    /// <summary>Field number for the "rrwheelspdvalid" field.</summary>
    public const int RrwheelspdvalidFieldNumber = 7;
    private global::Apollo.Canbus.Status_310.Types.RrwheelspdvalidType rrwheelspdvalid_ = 0;
    /// <summary>
    /// Rear right wheel speed valid  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310.Types.RrwheelspdvalidType Rrwheelspdvalid {
      get { return rrwheelspdvalid_; }
      set {
        rrwheelspdvalid_ = value;
      }
    }

    /// <summary>Field number for the "vehiclespdvalid" field.</summary>
    public const int VehiclespdvalidFieldNumber = 8;
    private global::Apollo.Canbus.Status_310.Types.VehiclespdvalidType vehiclespdvalid_ = 0;
    /// <summary>
    /// Quality/fault information to current Vehicle speed information  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310.Types.VehiclespdvalidType Vehiclespdvalid {
      get { return vehiclespdvalid_; }
      set {
        vehiclespdvalid_ = value;
      }
    }

    /// <summary>Field number for the "longitudedrivingmode" field.</summary>
    public const int LongitudedrivingmodeFieldNumber = 9;
    private global::Apollo.Canbus.Status_310.Types.LongitudedrivingmodeType longitudedrivingmode_ = 0;
    /// <summary>
    /// This signal indicates if ECM control for  ADS torque request is active or not.  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310.Types.LongitudedrivingmodeType Longitudedrivingmode {
      get { return longitudedrivingmode_; }
      set {
        longitudedrivingmode_ = value;
      }
    }

    /// <summary>Field number for the "engspdvalid" field.</summary>
    public const int EngspdvalidFieldNumber = 10;
    private global::Apollo.Canbus.Status_310.Types.EngspdvalidType engspdvalid_ = 0;
    /// <summary>
    /// Engine speed valid  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310.Types.EngspdvalidType Engspdvalid {
      get { return engspdvalid_; }
      set {
        engspdvalid_ = value;
      }
    }

    /// <summary>Field number for the "accepedaloverride" field.</summary>
    public const int AccepedaloverrideFieldNumber = 11;
    private global::Apollo.Canbus.Status_310.Types.AccepedaloverrideType accepedaloverride_ = 0;
    /// <summary>
    /// Detect Acceleration Pedal Override  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310.Types.AccepedaloverrideType Accepedaloverride {
      get { return accepedaloverride_; }
      set {
        accepedaloverride_ = value;
      }
    }

    /// <summary>Field number for the "brakepedalstatus" field.</summary>
    public const int BrakepedalstatusFieldNumber = 12;
    private global::Apollo.Canbus.Status_310.Types.BrakepedalstatusType brakepedalstatus_ = 0;
    /// <summary>
    /// indicates the brake pedal is pressed or not or incorrect for plausibility check.  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310.Types.BrakepedalstatusType Brakepedalstatus {
      get { return brakepedalstatus_; }
      set {
        brakepedalstatus_ = value;
      }
    }

    /// <summary>Field number for the "espbrakelightsts" field.</summary>
    public const int EspbrakelightstsFieldNumber = 13;
    private global::Apollo.Canbus.Status_310.Types.EspbrakelightstsType espbrakelightsts_ = 0;
    /// <summary>
    /// Brake light lamp(on/off),come from ESP  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310.Types.EspbrakelightstsType Espbrakelightsts {
      get { return espbrakelightsts_; }
      set {
        espbrakelightsts_ = value;
      }
    }

    /// <summary>Field number for the "epbswtpositionvalid" field.</summary>
    public const int EpbswtpositionvalidFieldNumber = 14;
    private global::Apollo.Canbus.Status_310.Types.EpbswtpositionvalidType epbswtpositionvalid_ = 0;
    /// <summary>
    /// EPB switch position signal valid  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310.Types.EpbswtpositionvalidType Epbswtpositionvalid {
      get { return epbswtpositionvalid_; }
      set {
        epbswtpositionvalid_ = value;
      }
    }

    /// <summary>Field number for the "epbsts" field.</summary>
    public const int EpbstsFieldNumber = 15;
    private global::Apollo.Canbus.Status_310.Types.EpbstsType epbsts_ = 0;
    /// <summary>
    /// EPB status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310.Types.EpbstsType Epbsts {
      get { return epbsts_; }
      set {
        epbsts_ = value;
      }
    }

    /// <summary>Field number for the "currentgearvalid" field.</summary>
    public const int CurrentgearvalidFieldNumber = 16;
    private global::Apollo.Canbus.Status_310.Types.CurrentgearvalidType currentgearvalid_ = 0;
    /// <summary>
    /// Current gear valid  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310.Types.CurrentgearvalidType Currentgearvalid {
      get { return currentgearvalid_; }
      set {
        currentgearvalid_ = value;
      }
    }

    /// <summary>Field number for the "epstrqsnsrsts" field.</summary>
    public const int EpstrqsnsrstsFieldNumber = 17;
    private global::Apollo.Canbus.Status_310.Types.EpstrqsnsrstsType epstrqsnsrsts_ = 0;
    /// <summary>
    /// EPS torque sensor status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310.Types.EpstrqsnsrstsType Epstrqsnsrsts {
      get { return epstrqsnsrsts_; }
      set {
        epstrqsnsrsts_ = value;
      }
    }

    /// <summary>Field number for the "eps_interferdetdvalid" field.</summary>
    public const int EpsInterferdetdvalidFieldNumber = 18;
    private global::Apollo.Canbus.Status_310.Types.Eps_interferdetdvalidType epsInterferdetdvalid_ = 0;
    /// <summary>
    /// Driver Steering Interference Detected Validity  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310.Types.Eps_interferdetdvalidType EpsInterferdetdvalid {
      get { return epsInterferdetdvalid_; }
      set {
        epsInterferdetdvalid_ = value;
      }
    }

    /// <summary>Field number for the "epshandsdetnsts" field.</summary>
    public const int EpshandsdetnstsFieldNumber = 19;
    private global::Apollo.Canbus.Status_310.Types.EpshandsdetnstsType epshandsdetnsts_ = 0;
    /// <summary>
    /// Hands Off Steering Wheel Detection status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310.Types.EpshandsdetnstsType Epshandsdetnsts {
      get { return epshandsdetnsts_; }
      set {
        epshandsdetnsts_ = value;
      }
    }

    /// <summary>Field number for the "eps_handsdetnstsvalid" field.</summary>
    public const int EpsHandsdetnstsvalidFieldNumber = 20;
    private global::Apollo.Canbus.Status_310.Types.Eps_handsdetnstsvalidType epsHandsdetnstsvalid_ = 0;
    /// <summary>
    /// Hands Off Steering Wheel Detection status Validity  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310.Types.Eps_handsdetnstsvalidType EpsHandsdetnstsvalid {
      get { return epsHandsdetnstsvalid_; }
      set {
        epsHandsdetnstsvalid_ = value;
      }
    }

    /// <summary>Field number for the "steerwheelanglesign" field.</summary>
    public const int SteerwheelanglesignFieldNumber = 21;
    private global::Apollo.Canbus.Status_310.Types.SteerwheelanglesignType steerwheelanglesign_ = 0;
    /// <summary>
    /// sign of steering wheel angle  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310.Types.SteerwheelanglesignType Steerwheelanglesign {
      get { return steerwheelanglesign_; }
      set {
        steerwheelanglesign_ = value;
      }
    }

    /// <summary>Field number for the "steerwheelspdsign" field.</summary>
    public const int SteerwheelspdsignFieldNumber = 22;
    private global::Apollo.Canbus.Status_310.Types.SteerwheelspdsignType steerwheelspdsign_ = 0;
    /// <summary>
    /// sign of steering wheel speed   
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310.Types.SteerwheelspdsignType Steerwheelspdsign {
      get { return steerwheelspdsign_; }
      set {
        steerwheelspdsign_ = value;
      }
    }

    /// <summary>Field number for the "driverdoorsts" field.</summary>
    public const int DriverdoorstsFieldNumber = 23;
    private global::Apollo.Canbus.Status_310.Types.DriverdoorstsType driverdoorsts_ = 0;
    /// <summary>
    /// Driver door status.  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310.Types.DriverdoorstsType Driverdoorsts {
      get { return driverdoorsts_; }
      set {
        driverdoorsts_ = value;
      }
    }

    /// <summary>Field number for the "rldoorsts" field.</summary>
    public const int RldoorstsFieldNumber = 24;
    private global::Apollo.Canbus.Status_310.Types.RldoorstsType rldoorsts_ = 0;
    /// <summary>
    /// Left rear door status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310.Types.RldoorstsType Rldoorsts {
      get { return rldoorsts_; }
      set {
        rldoorsts_ = value;
      }
    }

    /// <summary>Field number for the "passengerdoorsts" field.</summary>
    public const int PassengerdoorstsFieldNumber = 25;
    private global::Apollo.Canbus.Status_310.Types.PassengerdoorstsType passengerdoorsts_ = 0;
    /// <summary>
    /// Passenger door status.  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310.Types.PassengerdoorstsType Passengerdoorsts {
      get { return passengerdoorsts_; }
      set {
        passengerdoorsts_ = value;
      }
    }

    /// <summary>Field number for the "rrdoorsts" field.</summary>
    public const int RrdoorstsFieldNumber = 26;
    private global::Apollo.Canbus.Status_310.Types.RrdoorstsType rrdoorsts_ = 0;
    /// <summary>
    /// Right   rear door status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310.Types.RrdoorstsType Rrdoorsts {
      get { return rrdoorsts_; }
      set {
        rrdoorsts_ = value;
      }
    }

    /// <summary>Field number for the "frontfoglmpsts" field.</summary>
    public const int FrontfoglmpstsFieldNumber = 27;
    private global::Apollo.Canbus.Status_310.Types.FrontfoglmpstsType frontfoglmpsts_ = 0;
    /// <summary>
    /// Front fog lamp status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310.Types.FrontfoglmpstsType Frontfoglmpsts {
      get { return frontfoglmpsts_; }
      set {
        frontfoglmpsts_ = value;
      }
    }

    /// <summary>Field number for the "rearfoglmpsts" field.</summary>
    public const int RearfoglmpstsFieldNumber = 28;
    private global::Apollo.Canbus.Status_310.Types.RearfoglmpstsType rearfoglmpsts_ = 0;
    /// <summary>
    /// Rear fog lamp status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310.Types.RearfoglmpstsType Rearfoglmpsts {
      get { return rearfoglmpsts_; }
      set {
        rearfoglmpsts_ = value;
      }
    }

    /// <summary>Field number for the "lowbeamsts" field.</summary>
    public const int LowbeamstsFieldNumber = 29;
    private global::Apollo.Canbus.Status_310.Types.LowbeamstsType lowbeamsts_ = 0;
    /// <summary>
    /// Low beam status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310.Types.LowbeamstsType Lowbeamsts {
      get { return lowbeamsts_; }
      set {
        lowbeamsts_ = value;
      }
    }

    /// <summary>Field number for the "highbeamsts" field.</summary>
    public const int HighbeamstsFieldNumber = 30;
    private global::Apollo.Canbus.Status_310.Types.HighbeamstsType highbeamsts_ = 0;
    /// <summary>
    /// High beam status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310.Types.HighbeamstsType Highbeamsts {
      get { return highbeamsts_; }
      set {
        highbeamsts_ = value;
      }
    }

    /// <summary>Field number for the "leftturnlampsts" field.</summary>
    public const int LeftturnlampstsFieldNumber = 31;
    private global::Apollo.Canbus.Status_310.Types.LeftturnlampstsType leftturnlampsts_ = 0;
    /// <summary>
    /// Left turn lamp status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310.Types.LeftturnlampstsType Leftturnlampsts {
      get { return leftturnlampsts_; }
      set {
        leftturnlampsts_ = value;
      }
    }

    /// <summary>Field number for the "rightturnlampsts" field.</summary>
    public const int RightturnlampstsFieldNumber = 32;
    private global::Apollo.Canbus.Status_310.Types.RightturnlampstsType rightturnlampsts_ = 0;
    /// <summary>
    /// Right turn lamp status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310.Types.RightturnlampstsType Rightturnlampsts {
      get { return rightturnlampsts_; }
      set {
        rightturnlampsts_ = value;
      }
    }

    /// <summary>Field number for the "bcm_availsts" field.</summary>
    public const int BcmAvailstsFieldNumber = 33;
    private global::Apollo.Canbus.Status_310.Types.Bcm_availstsType bcmAvailsts_ = 0;
    /// <summary>
    /// The work status of BCM  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310.Types.Bcm_availstsType BcmAvailsts {
      get { return bcmAvailsts_; }
      set {
        bcmAvailsts_ = value;
      }
    }

    /// <summary>Field number for the "brakelmpsts" field.</summary>
    public const int BrakelmpstsFieldNumber = 34;
    private global::Apollo.Canbus.Status_310.Types.BrakelmpstsType brakelmpsts_ = 0;
    /// <summary>
    /// Break Lamp status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310.Types.BrakelmpstsType Brakelmpsts {
      get { return brakelmpsts_; }
      set {
        brakelmpsts_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Status_310);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Status_310 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Longitudeaccvalid != other.Longitudeaccvalid) return false;
      if (Lateralaccevalid != other.Lateralaccevalid) return false;
      if (Vehdynyawratevalid != other.Vehdynyawratevalid) return false;
      if (Flwheelspdvalid != other.Flwheelspdvalid) return false;
      if (Frwheelspdvalid != other.Frwheelspdvalid) return false;
      if (Rlwheelspdvalid != other.Rlwheelspdvalid) return false;
      if (Rrwheelspdvalid != other.Rrwheelspdvalid) return false;
      if (Vehiclespdvalid != other.Vehiclespdvalid) return false;
      if (Longitudedrivingmode != other.Longitudedrivingmode) return false;
      if (Engspdvalid != other.Engspdvalid) return false;
      if (Accepedaloverride != other.Accepedaloverride) return false;
      if (Brakepedalstatus != other.Brakepedalstatus) return false;
      if (Espbrakelightsts != other.Espbrakelightsts) return false;
      if (Epbswtpositionvalid != other.Epbswtpositionvalid) return false;
      if (Epbsts != other.Epbsts) return false;
      if (Currentgearvalid != other.Currentgearvalid) return false;
      if (Epstrqsnsrsts != other.Epstrqsnsrsts) return false;
      if (EpsInterferdetdvalid != other.EpsInterferdetdvalid) return false;
      if (Epshandsdetnsts != other.Epshandsdetnsts) return false;
      if (EpsHandsdetnstsvalid != other.EpsHandsdetnstsvalid) return false;
      if (Steerwheelanglesign != other.Steerwheelanglesign) return false;
      if (Steerwheelspdsign != other.Steerwheelspdsign) return false;
      if (Driverdoorsts != other.Driverdoorsts) return false;
      if (Rldoorsts != other.Rldoorsts) return false;
      if (Passengerdoorsts != other.Passengerdoorsts) return false;
      if (Rrdoorsts != other.Rrdoorsts) return false;
      if (Frontfoglmpsts != other.Frontfoglmpsts) return false;
      if (Rearfoglmpsts != other.Rearfoglmpsts) return false;
      if (Lowbeamsts != other.Lowbeamsts) return false;
      if (Highbeamsts != other.Highbeamsts) return false;
      if (Leftturnlampsts != other.Leftturnlampsts) return false;
      if (Rightturnlampsts != other.Rightturnlampsts) return false;
      if (BcmAvailsts != other.BcmAvailsts) return false;
      if (Brakelmpsts != other.Brakelmpsts) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Longitudeaccvalid != 0) hash ^= Longitudeaccvalid.GetHashCode();
      if (Lateralaccevalid != 0) hash ^= Lateralaccevalid.GetHashCode();
      if (Vehdynyawratevalid != 0) hash ^= Vehdynyawratevalid.GetHashCode();
      if (Flwheelspdvalid != 0) hash ^= Flwheelspdvalid.GetHashCode();
      if (Frwheelspdvalid != 0) hash ^= Frwheelspdvalid.GetHashCode();
      if (Rlwheelspdvalid != 0) hash ^= Rlwheelspdvalid.GetHashCode();
      if (Rrwheelspdvalid != 0) hash ^= Rrwheelspdvalid.GetHashCode();
      if (Vehiclespdvalid != 0) hash ^= Vehiclespdvalid.GetHashCode();
      if (Longitudedrivingmode != 0) hash ^= Longitudedrivingmode.GetHashCode();
      if (Engspdvalid != 0) hash ^= Engspdvalid.GetHashCode();
      if (Accepedaloverride != 0) hash ^= Accepedaloverride.GetHashCode();
      if (Brakepedalstatus != 0) hash ^= Brakepedalstatus.GetHashCode();
      if (Espbrakelightsts != 0) hash ^= Espbrakelightsts.GetHashCode();
      if (Epbswtpositionvalid != 0) hash ^= Epbswtpositionvalid.GetHashCode();
      if (Epbsts != 0) hash ^= Epbsts.GetHashCode();
      if (Currentgearvalid != 0) hash ^= Currentgearvalid.GetHashCode();
      if (Epstrqsnsrsts != 0) hash ^= Epstrqsnsrsts.GetHashCode();
      if (EpsInterferdetdvalid != 0) hash ^= EpsInterferdetdvalid.GetHashCode();
      if (Epshandsdetnsts != 0) hash ^= Epshandsdetnsts.GetHashCode();
      if (EpsHandsdetnstsvalid != 0) hash ^= EpsHandsdetnstsvalid.GetHashCode();
      if (Steerwheelanglesign != 0) hash ^= Steerwheelanglesign.GetHashCode();
      if (Steerwheelspdsign != 0) hash ^= Steerwheelspdsign.GetHashCode();
      if (Driverdoorsts != 0) hash ^= Driverdoorsts.GetHashCode();
      if (Rldoorsts != 0) hash ^= Rldoorsts.GetHashCode();
      if (Passengerdoorsts != 0) hash ^= Passengerdoorsts.GetHashCode();
      if (Rrdoorsts != 0) hash ^= Rrdoorsts.GetHashCode();
      if (Frontfoglmpsts != 0) hash ^= Frontfoglmpsts.GetHashCode();
      if (Rearfoglmpsts != 0) hash ^= Rearfoglmpsts.GetHashCode();
      if (Lowbeamsts != 0) hash ^= Lowbeamsts.GetHashCode();
      if (Highbeamsts != 0) hash ^= Highbeamsts.GetHashCode();
      if (Leftturnlampsts != 0) hash ^= Leftturnlampsts.GetHashCode();
      if (Rightturnlampsts != 0) hash ^= Rightturnlampsts.GetHashCode();
      if (BcmAvailsts != 0) hash ^= BcmAvailsts.GetHashCode();
      if (Brakelmpsts != 0) hash ^= Brakelmpsts.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Longitudeaccvalid != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Longitudeaccvalid);
      }
      if (Lateralaccevalid != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Lateralaccevalid);
      }
      if (Vehdynyawratevalid != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Vehdynyawratevalid);
      }
      if (Flwheelspdvalid != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Flwheelspdvalid);
      }
      if (Frwheelspdvalid != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Frwheelspdvalid);
      }
      if (Rlwheelspdvalid != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Rlwheelspdvalid);
      }
      if (Rrwheelspdvalid != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Rrwheelspdvalid);
      }
      if (Vehiclespdvalid != 0) {
        output.WriteRawTag(64);
        output.WriteEnum((int) Vehiclespdvalid);
      }
      if (Longitudedrivingmode != 0) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Longitudedrivingmode);
      }
      if (Engspdvalid != 0) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Engspdvalid);
      }
      if (Accepedaloverride != 0) {
        output.WriteRawTag(88);
        output.WriteEnum((int) Accepedaloverride);
      }
      if (Brakepedalstatus != 0) {
        output.WriteRawTag(96);
        output.WriteEnum((int) Brakepedalstatus);
      }
      if (Espbrakelightsts != 0) {
        output.WriteRawTag(104);
        output.WriteEnum((int) Espbrakelightsts);
      }
      if (Epbswtpositionvalid != 0) {
        output.WriteRawTag(112);
        output.WriteEnum((int) Epbswtpositionvalid);
      }
      if (Epbsts != 0) {
        output.WriteRawTag(120);
        output.WriteEnum((int) Epbsts);
      }
      if (Currentgearvalid != 0) {
        output.WriteRawTag(128, 1);
        output.WriteEnum((int) Currentgearvalid);
      }
      if (Epstrqsnsrsts != 0) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) Epstrqsnsrsts);
      }
      if (EpsInterferdetdvalid != 0) {
        output.WriteRawTag(144, 1);
        output.WriteEnum((int) EpsInterferdetdvalid);
      }
      if (Epshandsdetnsts != 0) {
        output.WriteRawTag(152, 1);
        output.WriteEnum((int) Epshandsdetnsts);
      }
      if (EpsHandsdetnstsvalid != 0) {
        output.WriteRawTag(160, 1);
        output.WriteEnum((int) EpsHandsdetnstsvalid);
      }
      if (Steerwheelanglesign != 0) {
        output.WriteRawTag(168, 1);
        output.WriteEnum((int) Steerwheelanglesign);
      }
      if (Steerwheelspdsign != 0) {
        output.WriteRawTag(176, 1);
        output.WriteEnum((int) Steerwheelspdsign);
      }
      if (Driverdoorsts != 0) {
        output.WriteRawTag(184, 1);
        output.WriteEnum((int) Driverdoorsts);
      }
      if (Rldoorsts != 0) {
        output.WriteRawTag(192, 1);
        output.WriteEnum((int) Rldoorsts);
      }
      if (Passengerdoorsts != 0) {
        output.WriteRawTag(200, 1);
        output.WriteEnum((int) Passengerdoorsts);
      }
      if (Rrdoorsts != 0) {
        output.WriteRawTag(208, 1);
        output.WriteEnum((int) Rrdoorsts);
      }
      if (Frontfoglmpsts != 0) {
        output.WriteRawTag(216, 1);
        output.WriteEnum((int) Frontfoglmpsts);
      }
      if (Rearfoglmpsts != 0) {
        output.WriteRawTag(224, 1);
        output.WriteEnum((int) Rearfoglmpsts);
      }
      if (Lowbeamsts != 0) {
        output.WriteRawTag(232, 1);
        output.WriteEnum((int) Lowbeamsts);
      }
      if (Highbeamsts != 0) {
        output.WriteRawTag(240, 1);
        output.WriteEnum((int) Highbeamsts);
      }
      if (Leftturnlampsts != 0) {
        output.WriteRawTag(248, 1);
        output.WriteEnum((int) Leftturnlampsts);
      }
      if (Rightturnlampsts != 0) {
        output.WriteRawTag(128, 2);
        output.WriteEnum((int) Rightturnlampsts);
      }
      if (BcmAvailsts != 0) {
        output.WriteRawTag(136, 2);
        output.WriteEnum((int) BcmAvailsts);
      }
      if (Brakelmpsts != 0) {
        output.WriteRawTag(144, 2);
        output.WriteEnum((int) Brakelmpsts);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Longitudeaccvalid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Longitudeaccvalid);
      }
      if (Lateralaccevalid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Lateralaccevalid);
      }
      if (Vehdynyawratevalid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Vehdynyawratevalid);
      }
      if (Flwheelspdvalid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Flwheelspdvalid);
      }
      if (Frwheelspdvalid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Frwheelspdvalid);
      }
      if (Rlwheelspdvalid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Rlwheelspdvalid);
      }
      if (Rrwheelspdvalid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Rrwheelspdvalid);
      }
      if (Vehiclespdvalid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Vehiclespdvalid);
      }
      if (Longitudedrivingmode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Longitudedrivingmode);
      }
      if (Engspdvalid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Engspdvalid);
      }
      if (Accepedaloverride != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Accepedaloverride);
      }
      if (Brakepedalstatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Brakepedalstatus);
      }
      if (Espbrakelightsts != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Espbrakelightsts);
      }
      if (Epbswtpositionvalid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Epbswtpositionvalid);
      }
      if (Epbsts != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Epbsts);
      }
      if (Currentgearvalid != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Currentgearvalid);
      }
      if (Epstrqsnsrsts != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Epstrqsnsrsts);
      }
      if (EpsInterferdetdvalid != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) EpsInterferdetdvalid);
      }
      if (Epshandsdetnsts != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Epshandsdetnsts);
      }
      if (EpsHandsdetnstsvalid != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) EpsHandsdetnstsvalid);
      }
      if (Steerwheelanglesign != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Steerwheelanglesign);
      }
      if (Steerwheelspdsign != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Steerwheelspdsign);
      }
      if (Driverdoorsts != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Driverdoorsts);
      }
      if (Rldoorsts != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Rldoorsts);
      }
      if (Passengerdoorsts != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Passengerdoorsts);
      }
      if (Rrdoorsts != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Rrdoorsts);
      }
      if (Frontfoglmpsts != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Frontfoglmpsts);
      }
      if (Rearfoglmpsts != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Rearfoglmpsts);
      }
      if (Lowbeamsts != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Lowbeamsts);
      }
      if (Highbeamsts != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Highbeamsts);
      }
      if (Leftturnlampsts != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Leftturnlampsts);
      }
      if (Rightturnlampsts != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Rightturnlampsts);
      }
      if (BcmAvailsts != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) BcmAvailsts);
      }
      if (Brakelmpsts != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Brakelmpsts);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Status_310 other) {
      if (other == null) {
        return;
      }
      if (other.Longitudeaccvalid != 0) {
        Longitudeaccvalid = other.Longitudeaccvalid;
      }
      if (other.Lateralaccevalid != 0) {
        Lateralaccevalid = other.Lateralaccevalid;
      }
      if (other.Vehdynyawratevalid != 0) {
        Vehdynyawratevalid = other.Vehdynyawratevalid;
      }
      if (other.Flwheelspdvalid != 0) {
        Flwheelspdvalid = other.Flwheelspdvalid;
      }
      if (other.Frwheelspdvalid != 0) {
        Frwheelspdvalid = other.Frwheelspdvalid;
      }
      if (other.Rlwheelspdvalid != 0) {
        Rlwheelspdvalid = other.Rlwheelspdvalid;
      }
      if (other.Rrwheelspdvalid != 0) {
        Rrwheelspdvalid = other.Rrwheelspdvalid;
      }
      if (other.Vehiclespdvalid != 0) {
        Vehiclespdvalid = other.Vehiclespdvalid;
      }
      if (other.Longitudedrivingmode != 0) {
        Longitudedrivingmode = other.Longitudedrivingmode;
      }
      if (other.Engspdvalid != 0) {
        Engspdvalid = other.Engspdvalid;
      }
      if (other.Accepedaloverride != 0) {
        Accepedaloverride = other.Accepedaloverride;
      }
      if (other.Brakepedalstatus != 0) {
        Brakepedalstatus = other.Brakepedalstatus;
      }
      if (other.Espbrakelightsts != 0) {
        Espbrakelightsts = other.Espbrakelightsts;
      }
      if (other.Epbswtpositionvalid != 0) {
        Epbswtpositionvalid = other.Epbswtpositionvalid;
      }
      if (other.Epbsts != 0) {
        Epbsts = other.Epbsts;
      }
      if (other.Currentgearvalid != 0) {
        Currentgearvalid = other.Currentgearvalid;
      }
      if (other.Epstrqsnsrsts != 0) {
        Epstrqsnsrsts = other.Epstrqsnsrsts;
      }
      if (other.EpsInterferdetdvalid != 0) {
        EpsInterferdetdvalid = other.EpsInterferdetdvalid;
      }
      if (other.Epshandsdetnsts != 0) {
        Epshandsdetnsts = other.Epshandsdetnsts;
      }
      if (other.EpsHandsdetnstsvalid != 0) {
        EpsHandsdetnstsvalid = other.EpsHandsdetnstsvalid;
      }
      if (other.Steerwheelanglesign != 0) {
        Steerwheelanglesign = other.Steerwheelanglesign;
      }
      if (other.Steerwheelspdsign != 0) {
        Steerwheelspdsign = other.Steerwheelspdsign;
      }
      if (other.Driverdoorsts != 0) {
        Driverdoorsts = other.Driverdoorsts;
      }
      if (other.Rldoorsts != 0) {
        Rldoorsts = other.Rldoorsts;
      }
      if (other.Passengerdoorsts != 0) {
        Passengerdoorsts = other.Passengerdoorsts;
      }
      if (other.Rrdoorsts != 0) {
        Rrdoorsts = other.Rrdoorsts;
      }
      if (other.Frontfoglmpsts != 0) {
        Frontfoglmpsts = other.Frontfoglmpsts;
      }
      if (other.Rearfoglmpsts != 0) {
        Rearfoglmpsts = other.Rearfoglmpsts;
      }
      if (other.Lowbeamsts != 0) {
        Lowbeamsts = other.Lowbeamsts;
      }
      if (other.Highbeamsts != 0) {
        Highbeamsts = other.Highbeamsts;
      }
      if (other.Leftturnlampsts != 0) {
        Leftturnlampsts = other.Leftturnlampsts;
      }
      if (other.Rightturnlampsts != 0) {
        Rightturnlampsts = other.Rightturnlampsts;
      }
      if (other.BcmAvailsts != 0) {
        BcmAvailsts = other.BcmAvailsts;
      }
      if (other.Brakelmpsts != 0) {
        Brakelmpsts = other.Brakelmpsts;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            longitudeaccvalid_ = (global::Apollo.Canbus.Status_310.Types.LongitudeaccvalidType) input.ReadEnum();
            break;
          }
          case 16: {
            lateralaccevalid_ = (global::Apollo.Canbus.Status_310.Types.LateralaccevalidType) input.ReadEnum();
            break;
          }
          case 24: {
            vehdynyawratevalid_ = (global::Apollo.Canbus.Status_310.Types.VehdynyawratevalidType) input.ReadEnum();
            break;
          }
          case 32: {
            flwheelspdvalid_ = (global::Apollo.Canbus.Status_310.Types.FlwheelspdvalidType) input.ReadEnum();
            break;
          }
          case 40: {
            frwheelspdvalid_ = (global::Apollo.Canbus.Status_310.Types.FrwheelspdvalidType) input.ReadEnum();
            break;
          }
          case 48: {
            rlwheelspdvalid_ = (global::Apollo.Canbus.Status_310.Types.RlwheelspdvalidType) input.ReadEnum();
            break;
          }
          case 56: {
            rrwheelspdvalid_ = (global::Apollo.Canbus.Status_310.Types.RrwheelspdvalidType) input.ReadEnum();
            break;
          }
          case 64: {
            vehiclespdvalid_ = (global::Apollo.Canbus.Status_310.Types.VehiclespdvalidType) input.ReadEnum();
            break;
          }
          case 72: {
            longitudedrivingmode_ = (global::Apollo.Canbus.Status_310.Types.LongitudedrivingmodeType) input.ReadEnum();
            break;
          }
          case 80: {
            engspdvalid_ = (global::Apollo.Canbus.Status_310.Types.EngspdvalidType) input.ReadEnum();
            break;
          }
          case 88: {
            accepedaloverride_ = (global::Apollo.Canbus.Status_310.Types.AccepedaloverrideType) input.ReadEnum();
            break;
          }
          case 96: {
            brakepedalstatus_ = (global::Apollo.Canbus.Status_310.Types.BrakepedalstatusType) input.ReadEnum();
            break;
          }
          case 104: {
            espbrakelightsts_ = (global::Apollo.Canbus.Status_310.Types.EspbrakelightstsType) input.ReadEnum();
            break;
          }
          case 112: {
            epbswtpositionvalid_ = (global::Apollo.Canbus.Status_310.Types.EpbswtpositionvalidType) input.ReadEnum();
            break;
          }
          case 120: {
            epbsts_ = (global::Apollo.Canbus.Status_310.Types.EpbstsType) input.ReadEnum();
            break;
          }
          case 128: {
            currentgearvalid_ = (global::Apollo.Canbus.Status_310.Types.CurrentgearvalidType) input.ReadEnum();
            break;
          }
          case 136: {
            epstrqsnsrsts_ = (global::Apollo.Canbus.Status_310.Types.EpstrqsnsrstsType) input.ReadEnum();
            break;
          }
          case 144: {
            epsInterferdetdvalid_ = (global::Apollo.Canbus.Status_310.Types.Eps_interferdetdvalidType) input.ReadEnum();
            break;
          }
          case 152: {
            epshandsdetnsts_ = (global::Apollo.Canbus.Status_310.Types.EpshandsdetnstsType) input.ReadEnum();
            break;
          }
          case 160: {
            epsHandsdetnstsvalid_ = (global::Apollo.Canbus.Status_310.Types.Eps_handsdetnstsvalidType) input.ReadEnum();
            break;
          }
          case 168: {
            steerwheelanglesign_ = (global::Apollo.Canbus.Status_310.Types.SteerwheelanglesignType) input.ReadEnum();
            break;
          }
          case 176: {
            steerwheelspdsign_ = (global::Apollo.Canbus.Status_310.Types.SteerwheelspdsignType) input.ReadEnum();
            break;
          }
          case 184: {
            driverdoorsts_ = (global::Apollo.Canbus.Status_310.Types.DriverdoorstsType) input.ReadEnum();
            break;
          }
          case 192: {
            rldoorsts_ = (global::Apollo.Canbus.Status_310.Types.RldoorstsType) input.ReadEnum();
            break;
          }
          case 200: {
            passengerdoorsts_ = (global::Apollo.Canbus.Status_310.Types.PassengerdoorstsType) input.ReadEnum();
            break;
          }
          case 208: {
            rrdoorsts_ = (global::Apollo.Canbus.Status_310.Types.RrdoorstsType) input.ReadEnum();
            break;
          }
          case 216: {
            frontfoglmpsts_ = (global::Apollo.Canbus.Status_310.Types.FrontfoglmpstsType) input.ReadEnum();
            break;
          }
          case 224: {
            rearfoglmpsts_ = (global::Apollo.Canbus.Status_310.Types.RearfoglmpstsType) input.ReadEnum();
            break;
          }
          case 232: {
            lowbeamsts_ = (global::Apollo.Canbus.Status_310.Types.LowbeamstsType) input.ReadEnum();
            break;
          }
          case 240: {
            highbeamsts_ = (global::Apollo.Canbus.Status_310.Types.HighbeamstsType) input.ReadEnum();
            break;
          }
          case 248: {
            leftturnlampsts_ = (global::Apollo.Canbus.Status_310.Types.LeftturnlampstsType) input.ReadEnum();
            break;
          }
          case 256: {
            rightturnlampsts_ = (global::Apollo.Canbus.Status_310.Types.RightturnlampstsType) input.ReadEnum();
            break;
          }
          case 264: {
            bcmAvailsts_ = (global::Apollo.Canbus.Status_310.Types.Bcm_availstsType) input.ReadEnum();
            break;
          }
          case 272: {
            brakelmpsts_ = (global::Apollo.Canbus.Status_310.Types.BrakelmpstsType) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Status_310 message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Report Message
      /// </summary>
      public enum LongitudeaccvalidType {
        [pbr::OriginalName("LONGITUDEACCVALID_INVALID")] LongitudeaccvalidInvalid = 0,
        [pbr::OriginalName("LONGITUDEACCVALID_VALID")] LongitudeaccvalidValid = 1,
      }

      public enum LateralaccevalidType {
        [pbr::OriginalName("LATERALACCEVALID_INVALID")] LateralaccevalidInvalid = 0,
        [pbr::OriginalName("LATERALACCEVALID_VALID")] LateralaccevalidValid = 1,
      }

      public enum VehdynyawratevalidType {
        [pbr::OriginalName("VEHDYNYAWRATEVALID_INVALID")] VehdynyawratevalidInvalid = 0,
        [pbr::OriginalName("VEHDYNYAWRATEVALID_VALID")] VehdynyawratevalidValid = 1,
      }

      public enum FlwheelspdvalidType {
        [pbr::OriginalName("FLWHEELSPDVALID_INVALID")] FlwheelspdvalidInvalid = 0,
        [pbr::OriginalName("FLWHEELSPDVALID_VALID")] FlwheelspdvalidValid = 1,
      }

      public enum FrwheelspdvalidType {
        [pbr::OriginalName("FRWHEELSPDVALID_INVALID")] FrwheelspdvalidInvalid = 0,
        [pbr::OriginalName("FRWHEELSPDVALID_VALID")] FrwheelspdvalidValid = 1,
      }

      public enum RlwheelspdvalidType {
        [pbr::OriginalName("RLWHEELSPDVALID_INVALID")] RlwheelspdvalidInvalid = 0,
        [pbr::OriginalName("RLWHEELSPDVALID_VALID")] RlwheelspdvalidValid = 1,
      }

      public enum RrwheelspdvalidType {
        [pbr::OriginalName("RRWHEELSPDVALID_INVALID")] RrwheelspdvalidInvalid = 0,
        [pbr::OriginalName("RRWHEELSPDVALID_VALID")] RrwheelspdvalidValid = 1,
      }

      public enum VehiclespdvalidType {
        [pbr::OriginalName("VEHICLESPDVALID_INVALID")] VehiclespdvalidInvalid = 0,
        [pbr::OriginalName("VEHICLESPDVALID_VALID")] VehiclespdvalidValid = 1,
      }

      public enum LongitudedrivingmodeType {
        [pbr::OriginalName("LONGITUDEDRIVINGMODE_MANUALMODE")] LongitudedrivingmodeManualmode = 0,
        [pbr::OriginalName("LONGITUDEDRIVINGMODE_AUTOMATICSTANDBY")] LongitudedrivingmodeAutomaticstandby = 1,
        [pbr::OriginalName("LONGITUDEDRIVINGMODE_AUTOMATICACCELERATION")] LongitudedrivingmodeAutomaticacceleration = 2,
        [pbr::OriginalName("LONGITUDEDRIVINGMODE_AUTOMATICDECELERATION")] LongitudedrivingmodeAutomaticdeceleration = 3,
      }

      public enum EngspdvalidType {
        [pbr::OriginalName("ENGSPDVALID_INVALID")] EngspdvalidInvalid = 0,
        [pbr::OriginalName("ENGSPDVALID_VALID")] EngspdvalidValid = 1,
        [pbr::OriginalName("ENGSPDVALID_INIT_VALUE")] EngspdvalidInitValue = 2,
        [pbr::OriginalName("ENGSPDVALID_RESERVED")] EngspdvalidReserved = 3,
      }

      public enum AccepedaloverrideType {
        [pbr::OriginalName("ACCEPEDALOVERRIDE_NOT_OVERRIDE")] AccepedaloverrideNotOverride = 0,
        [pbr::OriginalName("ACCEPEDALOVERRIDE_OVERRIDE")] AccepedaloverrideOverride = 1,
      }

      public enum BrakepedalstatusType {
        [pbr::OriginalName("BRAKEPEDALSTATUS_NOT_PRESSED")] BrakepedalstatusNotPressed = 0,
        [pbr::OriginalName("BRAKEPEDALSTATUS_PRESSED")] BrakepedalstatusPressed = 1,
        [pbr::OriginalName("BRAKEPEDALSTATUS_RESERVED1")] BrakepedalstatusReserved1 = 2,
        [pbr::OriginalName("BRAKEPEDALSTATUS_ERROR")] BrakepedalstatusError = 3,
      }

      public enum EspbrakelightstsType {
        [pbr::OriginalName("ESPBRAKELIGHTSTS_OFF")] EspbrakelightstsOff = 0,
        [pbr::OriginalName("ESPBRAKELIGHTSTS_ON")] EspbrakelightstsOn = 1,
      }

      public enum EpbswtpositionvalidType {
        [pbr::OriginalName("EPBSWTPOSITIONVALID_VALID")] EpbswtpositionvalidValid = 0,
        [pbr::OriginalName("EPBSWTPOSITIONVALID_NOT_VALID")] EpbswtpositionvalidNotValid = 1,
      }

      public enum EpbstsType {
        [pbr::OriginalName("EPBSTS_RELEASED")] EpbstsReleased = 0,
        [pbr::OriginalName("EPBSTS_CLOSED")] EpbstsClosed = 1,
        [pbr::OriginalName("EPBSTS_IN_PROGRESS")] EpbstsInProgress = 2,
        [pbr::OriginalName("EPBSTS_UNKNOWN")] EpbstsUnknown = 3,
      }

      public enum CurrentgearvalidType {
        [pbr::OriginalName("CURRENTGEARVALID_INVALID")] CurrentgearvalidInvalid = 0,
        [pbr::OriginalName("CURRENTGEARVALID_VALID")] CurrentgearvalidValid = 1,
      }

      public enum EpstrqsnsrstsType {
        [pbr::OriginalName("EPSTRQSNSRSTS_NORMAL")] EpstrqsnsrstsNormal = 0,
        [pbr::OriginalName("EPSTRQSNSRSTS_ABNORMAL")] EpstrqsnsrstsAbnormal = 1,
      }

      public enum Eps_interferdetdvalidType {
        [pbr::OriginalName("EPS_INTERFERDETDVALID_INVALID")] EpsInterferdetdvalidInvalid = 0,
        [pbr::OriginalName("EPS_INTERFERDETDVALID_VALID")] EpsInterferdetdvalidValid = 1,
      }

      public enum EpshandsdetnstsType {
        [pbr::OriginalName("EPSHANDSDETNSTS_HANDSOFF_NOT_DETECTED")] EpshandsdetnstsHandsoffNotDetected = 0,
        [pbr::OriginalName("EPSHANDSDETNSTS_HANDOFFF_DETECTED")] EpshandsdetnstsHandofffDetected = 1,
      }

      public enum Eps_handsdetnstsvalidType {
        [pbr::OriginalName("EPS_HANDSDETNSTSVALID_INVALID")] EpsHandsdetnstsvalidInvalid = 0,
        [pbr::OriginalName("EPS_HANDSDETNSTSVALID_VALID")] EpsHandsdetnstsvalidValid = 1,
      }

      public enum SteerwheelanglesignType {
        [pbr::OriginalName("STEERWHEELANGLESIGN_LEFT_POSITIVE")] SteerwheelanglesignLeftPositive = 0,
        [pbr::OriginalName("STEERWHEELANGLESIGN_RIGHT_NEGATIVE")] SteerwheelanglesignRightNegative = 1,
      }

      public enum SteerwheelspdsignType {
        [pbr::OriginalName("STEERWHEELSPDSIGN_LEFT_POSITIVE")] SteerwheelspdsignLeftPositive = 0,
        [pbr::OriginalName("STEERWHEELSPDSIGN_RIGHT_NEGATIVE")] SteerwheelspdsignRightNegative = 1,
      }

      public enum DriverdoorstsType {
        [pbr::OriginalName("DRIVERDOORSTS_CLOSED")] DriverdoorstsClosed = 0,
        [pbr::OriginalName("DRIVERDOORSTS_OPEN")] DriverdoorstsOpen = 1,
      }

      public enum RldoorstsType {
        [pbr::OriginalName("RLDOORSTS_CLOSED")] RldoorstsClosed = 0,
        [pbr::OriginalName("RLDOORSTS_OPEN")] RldoorstsOpen = 1,
      }

      public enum PassengerdoorstsType {
        [pbr::OriginalName("PASSENGERDOORSTS_CLOSED")] PassengerdoorstsClosed = 0,
        [pbr::OriginalName("PASSENGERDOORSTS_OPEN")] PassengerdoorstsOpen = 1,
      }

      public enum RrdoorstsType {
        [pbr::OriginalName("RRDOORSTS_CLOSED")] RrdoorstsClosed = 0,
        [pbr::OriginalName("RRDOORSTS_OPEN")] RrdoorstsOpen = 1,
      }

      public enum FrontfoglmpstsType {
        [pbr::OriginalName("FRONTFOGLMPSTS_OFF")] FrontfoglmpstsOff = 0,
        [pbr::OriginalName("FRONTFOGLMPSTS_ON")] FrontfoglmpstsOn = 1,
        [pbr::OriginalName("FRONTFOGLMPSTS_RESERVED")] FrontfoglmpstsReserved = 2,
        [pbr::OriginalName("FRONTFOGLMPSTS_NOT_AVAILABLE")] FrontfoglmpstsNotAvailable = 3,
      }

      public enum RearfoglmpstsType {
        [pbr::OriginalName("REARFOGLMPSTS_OFF")] RearfoglmpstsOff = 0,
        [pbr::OriginalName("REARFOGLMPSTS_ON")] RearfoglmpstsOn = 1,
      }

      public enum LowbeamstsType {
        [pbr::OriginalName("LOWBEAMSTS_OFF")] LowbeamstsOff = 0,
        [pbr::OriginalName("LOWBEAMSTS_ON")] LowbeamstsOn = 1,
      }

      public enum HighbeamstsType {
        [pbr::OriginalName("HIGHBEAMSTS_OFF")] HighbeamstsOff = 0,
        [pbr::OriginalName("HIGHBEAMSTS_ON")] HighbeamstsOn = 1,
      }

      public enum LeftturnlampstsType {
        [pbr::OriginalName("LEFTTURNLAMPSTS_OFF")] LeftturnlampstsOff = 0,
        [pbr::OriginalName("LEFTTURNLAMPSTS_ON")] LeftturnlampstsOn = 1,
      }

      public enum RightturnlampstsType {
        [pbr::OriginalName("RIGHTTURNLAMPSTS_OFF")] RightturnlampstsOff = 0,
        [pbr::OriginalName("RIGHTTURNLAMPSTS_ON")] RightturnlampstsOn = 1,
      }

      public enum Bcm_availstsType {
        [pbr::OriginalName("BCM_AVAILSTS_MANUAL_MODE")] BcmAvailstsManualMode = 0,
        [pbr::OriginalName("BCM_AVAILSTS_AUTONOMOUS_MODE")] BcmAvailstsAutonomousMode = 1,
        [pbr::OriginalName("BCM_AVAILSTS_RESERVED1")] BcmAvailstsReserved1 = 2,
        [pbr::OriginalName("BCM_AVAILSTS_RESERVED2")] BcmAvailstsReserved2 = 3,
      }

      public enum BrakelmpstsType {
        [pbr::OriginalName("BRAKELMPSTS_OFF")] BrakelmpstsOff = 0,
        [pbr::OriginalName("BRAKELMPSTS_ON")] BrakelmpstsOn = 1,
      }

    }
    #endregion

  }

  public sealed partial class Vin_resp3_393 : pb::IMessage<Vin_resp3_393> {
    private static readonly pb::MessageParser<Vin_resp3_393> _parser = new pb::MessageParser<Vin_resp3_393>(() => new Vin_resp3_393());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Vin_resp3_393> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Canbus.WeyReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vin_resp3_393() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vin_resp3_393(Vin_resp3_393 other) : this() {
      vin16_ = other.vin16_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vin_resp3_393 Clone() {
      return new Vin_resp3_393(this);
    }

    /// <summary>Field number for the "vin16" field.</summary>
    public const int Vin16FieldNumber = 1;
    private int vin16_;
    /// <summary>
    /// Report Message
    ///  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vin16 {
      get { return vin16_; }
      set {
        vin16_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Vin_resp3_393);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Vin_resp3_393 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Vin16 != other.Vin16) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Vin16 != 0) hash ^= Vin16.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Vin16 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Vin16);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Vin16 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vin16);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Vin_resp3_393 other) {
      if (other == null) {
        return;
      }
      if (other.Vin16 != 0) {
        Vin16 = other.Vin16;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Vin16 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Vin_resp2_392 : pb::IMessage<Vin_resp2_392> {
    private static readonly pb::MessageParser<Vin_resp2_392> _parser = new pb::MessageParser<Vin_resp2_392>(() => new Vin_resp2_392());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Vin_resp2_392> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Canbus.WeyReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vin_resp2_392() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vin_resp2_392(Vin_resp2_392 other) : this() {
      vin15_ = other.vin15_;
      vin14_ = other.vin14_;
      vin13_ = other.vin13_;
      vin12_ = other.vin12_;
      vin11_ = other.vin11_;
      vin10_ = other.vin10_;
      vin09_ = other.vin09_;
      vin08_ = other.vin08_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vin_resp2_392 Clone() {
      return new Vin_resp2_392(this);
    }

    /// <summary>Field number for the "vin15" field.</summary>
    public const int Vin15FieldNumber = 1;
    private int vin15_;
    /// <summary>
    /// Report Message
    ///  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vin15 {
      get { return vin15_; }
      set {
        vin15_ = value;
      }
    }

    /// <summary>Field number for the "vin14" field.</summary>
    public const int Vin14FieldNumber = 2;
    private int vin14_;
    /// <summary>
    ///  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vin14 {
      get { return vin14_; }
      set {
        vin14_ = value;
      }
    }

    /// <summary>Field number for the "vin13" field.</summary>
    public const int Vin13FieldNumber = 3;
    private int vin13_;
    /// <summary>
    ///  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vin13 {
      get { return vin13_; }
      set {
        vin13_ = value;
      }
    }

    /// <summary>Field number for the "vin12" field.</summary>
    public const int Vin12FieldNumber = 4;
    private int vin12_;
    /// <summary>
    ///  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vin12 {
      get { return vin12_; }
      set {
        vin12_ = value;
      }
    }

    /// <summary>Field number for the "vin11" field.</summary>
    public const int Vin11FieldNumber = 5;
    private int vin11_;
    /// <summary>
    ///  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vin11 {
      get { return vin11_; }
      set {
        vin11_ = value;
      }
    }

    /// <summary>Field number for the "vin10" field.</summary>
    public const int Vin10FieldNumber = 6;
    private int vin10_;
    /// <summary>
    ///  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vin10 {
      get { return vin10_; }
      set {
        vin10_ = value;
      }
    }

    /// <summary>Field number for the "vin09" field.</summary>
    public const int Vin09FieldNumber = 7;
    private int vin09_;
    /// <summary>
    ///  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vin09 {
      get { return vin09_; }
      set {
        vin09_ = value;
      }
    }

    /// <summary>Field number for the "vin08" field.</summary>
    public const int Vin08FieldNumber = 8;
    private int vin08_;
    /// <summary>
    ///  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vin08 {
      get { return vin08_; }
      set {
        vin08_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Vin_resp2_392);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Vin_resp2_392 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Vin15 != other.Vin15) return false;
      if (Vin14 != other.Vin14) return false;
      if (Vin13 != other.Vin13) return false;
      if (Vin12 != other.Vin12) return false;
      if (Vin11 != other.Vin11) return false;
      if (Vin10 != other.Vin10) return false;
      if (Vin09 != other.Vin09) return false;
      if (Vin08 != other.Vin08) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Vin15 != 0) hash ^= Vin15.GetHashCode();
      if (Vin14 != 0) hash ^= Vin14.GetHashCode();
      if (Vin13 != 0) hash ^= Vin13.GetHashCode();
      if (Vin12 != 0) hash ^= Vin12.GetHashCode();
      if (Vin11 != 0) hash ^= Vin11.GetHashCode();
      if (Vin10 != 0) hash ^= Vin10.GetHashCode();
      if (Vin09 != 0) hash ^= Vin09.GetHashCode();
      if (Vin08 != 0) hash ^= Vin08.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Vin15 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Vin15);
      }
      if (Vin14 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Vin14);
      }
      if (Vin13 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Vin13);
      }
      if (Vin12 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Vin12);
      }
      if (Vin11 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Vin11);
      }
      if (Vin10 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Vin10);
      }
      if (Vin09 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Vin09);
      }
      if (Vin08 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Vin08);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Vin15 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vin15);
      }
      if (Vin14 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vin14);
      }
      if (Vin13 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vin13);
      }
      if (Vin12 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vin12);
      }
      if (Vin11 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vin11);
      }
      if (Vin10 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vin10);
      }
      if (Vin09 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vin09);
      }
      if (Vin08 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vin08);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Vin_resp2_392 other) {
      if (other == null) {
        return;
      }
      if (other.Vin15 != 0) {
        Vin15 = other.Vin15;
      }
      if (other.Vin14 != 0) {
        Vin14 = other.Vin14;
      }
      if (other.Vin13 != 0) {
        Vin13 = other.Vin13;
      }
      if (other.Vin12 != 0) {
        Vin12 = other.Vin12;
      }
      if (other.Vin11 != 0) {
        Vin11 = other.Vin11;
      }
      if (other.Vin10 != 0) {
        Vin10 = other.Vin10;
      }
      if (other.Vin09 != 0) {
        Vin09 = other.Vin09;
      }
      if (other.Vin08 != 0) {
        Vin08 = other.Vin08;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Vin15 = input.ReadInt32();
            break;
          }
          case 16: {
            Vin14 = input.ReadInt32();
            break;
          }
          case 24: {
            Vin13 = input.ReadInt32();
            break;
          }
          case 32: {
            Vin12 = input.ReadInt32();
            break;
          }
          case 40: {
            Vin11 = input.ReadInt32();
            break;
          }
          case 48: {
            Vin10 = input.ReadInt32();
            break;
          }
          case 56: {
            Vin09 = input.ReadInt32();
            break;
          }
          case 64: {
            Vin08 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Vin_resp1_391 : pb::IMessage<Vin_resp1_391> {
    private static readonly pb::MessageParser<Vin_resp1_391> _parser = new pb::MessageParser<Vin_resp1_391>(() => new Vin_resp1_391());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Vin_resp1_391> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Canbus.WeyReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vin_resp1_391() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vin_resp1_391(Vin_resp1_391 other) : this() {
      vin07_ = other.vin07_;
      vin06_ = other.vin06_;
      vin05_ = other.vin05_;
      vin04_ = other.vin04_;
      vin03_ = other.vin03_;
      vin02_ = other.vin02_;
      vin00_ = other.vin00_;
      vin01_ = other.vin01_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vin_resp1_391 Clone() {
      return new Vin_resp1_391(this);
    }

    /// <summary>Field number for the "vin07" field.</summary>
    public const int Vin07FieldNumber = 1;
    private int vin07_;
    /// <summary>
    /// Report Message
    ///  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vin07 {
      get { return vin07_; }
      set {
        vin07_ = value;
      }
    }

    /// <summary>Field number for the "vin06" field.</summary>
    public const int Vin06FieldNumber = 2;
    private int vin06_;
    /// <summary>
    ///  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vin06 {
      get { return vin06_; }
      set {
        vin06_ = value;
      }
    }

    /// <summary>Field number for the "vin05" field.</summary>
    public const int Vin05FieldNumber = 3;
    private int vin05_;
    /// <summary>
    ///  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vin05 {
      get { return vin05_; }
      set {
        vin05_ = value;
      }
    }

    /// <summary>Field number for the "vin04" field.</summary>
    public const int Vin04FieldNumber = 4;
    private int vin04_;
    /// <summary>
    ///  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vin04 {
      get { return vin04_; }
      set {
        vin04_ = value;
      }
    }

    /// <summary>Field number for the "vin03" field.</summary>
    public const int Vin03FieldNumber = 5;
    private int vin03_;
    /// <summary>
    ///  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vin03 {
      get { return vin03_; }
      set {
        vin03_ = value;
      }
    }

    /// <summary>Field number for the "vin02" field.</summary>
    public const int Vin02FieldNumber = 6;
    private int vin02_;
    /// <summary>
    ///  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vin02 {
      get { return vin02_; }
      set {
        vin02_ = value;
      }
    }

    /// <summary>Field number for the "vin00" field.</summary>
    public const int Vin00FieldNumber = 7;
    private int vin00_;
    /// <summary>
    ///  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vin00 {
      get { return vin00_; }
      set {
        vin00_ = value;
      }
    }

    /// <summary>Field number for the "vin01" field.</summary>
    public const int Vin01FieldNumber = 8;
    private int vin01_;
    /// <summary>
    ///  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vin01 {
      get { return vin01_; }
      set {
        vin01_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Vin_resp1_391);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Vin_resp1_391 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Vin07 != other.Vin07) return false;
      if (Vin06 != other.Vin06) return false;
      if (Vin05 != other.Vin05) return false;
      if (Vin04 != other.Vin04) return false;
      if (Vin03 != other.Vin03) return false;
      if (Vin02 != other.Vin02) return false;
      if (Vin00 != other.Vin00) return false;
      if (Vin01 != other.Vin01) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Vin07 != 0) hash ^= Vin07.GetHashCode();
      if (Vin06 != 0) hash ^= Vin06.GetHashCode();
      if (Vin05 != 0) hash ^= Vin05.GetHashCode();
      if (Vin04 != 0) hash ^= Vin04.GetHashCode();
      if (Vin03 != 0) hash ^= Vin03.GetHashCode();
      if (Vin02 != 0) hash ^= Vin02.GetHashCode();
      if (Vin00 != 0) hash ^= Vin00.GetHashCode();
      if (Vin01 != 0) hash ^= Vin01.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Vin07 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Vin07);
      }
      if (Vin06 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Vin06);
      }
      if (Vin05 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Vin05);
      }
      if (Vin04 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Vin04);
      }
      if (Vin03 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Vin03);
      }
      if (Vin02 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Vin02);
      }
      if (Vin00 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Vin00);
      }
      if (Vin01 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Vin01);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Vin07 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vin07);
      }
      if (Vin06 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vin06);
      }
      if (Vin05 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vin05);
      }
      if (Vin04 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vin04);
      }
      if (Vin03 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vin03);
      }
      if (Vin02 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vin02);
      }
      if (Vin00 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vin00);
      }
      if (Vin01 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vin01);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Vin_resp1_391 other) {
      if (other == null) {
        return;
      }
      if (other.Vin07 != 0) {
        Vin07 = other.Vin07;
      }
      if (other.Vin06 != 0) {
        Vin06 = other.Vin06;
      }
      if (other.Vin05 != 0) {
        Vin05 = other.Vin05;
      }
      if (other.Vin04 != 0) {
        Vin04 = other.Vin04;
      }
      if (other.Vin03 != 0) {
        Vin03 = other.Vin03;
      }
      if (other.Vin02 != 0) {
        Vin02 = other.Vin02;
      }
      if (other.Vin00 != 0) {
        Vin00 = other.Vin00;
      }
      if (other.Vin01 != 0) {
        Vin01 = other.Vin01;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Vin07 = input.ReadInt32();
            break;
          }
          case 16: {
            Vin06 = input.ReadInt32();
            break;
          }
          case 24: {
            Vin05 = input.ReadInt32();
            break;
          }
          case 32: {
            Vin04 = input.ReadInt32();
            break;
          }
          case 40: {
            Vin03 = input.ReadInt32();
            break;
          }
          case 48: {
            Vin02 = input.ReadInt32();
            break;
          }
          case 56: {
            Vin00 = input.ReadInt32();
            break;
          }
          case 64: {
            Vin01 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Ads_req_vin_390 : pb::IMessage<Ads_req_vin_390> {
    private static readonly pb::MessageParser<Ads_req_vin_390> _parser = new pb::MessageParser<Ads_req_vin_390>(() => new Ads_req_vin_390());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Ads_req_vin_390> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Canbus.WeyReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ads_req_vin_390() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ads_req_vin_390(Ads_req_vin_390 other) : this() {
      reqVinSignal_ = other.reqVinSignal_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ads_req_vin_390 Clone() {
      return new Ads_req_vin_390(this);
    }

    /// <summary>Field number for the "req_vin_signal" field.</summary>
    public const int ReqVinSignalFieldNumber = 1;
    private global::Apollo.Canbus.Ads_req_vin_390.Types.Req_vin_signalType reqVinSignal_ = 0;
    /// <summary>
    ///  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Ads_req_vin_390.Types.Req_vin_signalType ReqVinSignal {
      get { return reqVinSignal_; }
      set {
        reqVinSignal_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Ads_req_vin_390);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Ads_req_vin_390 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReqVinSignal != other.ReqVinSignal) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReqVinSignal != 0) hash ^= ReqVinSignal.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReqVinSignal != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ReqVinSignal);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReqVinSignal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReqVinSignal);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Ads_req_vin_390 other) {
      if (other == null) {
        return;
      }
      if (other.ReqVinSignal != 0) {
        ReqVinSignal = other.ReqVinSignal;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            reqVinSignal_ = (global::Apollo.Canbus.Ads_req_vin_390.Types.Req_vin_signalType) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Ads_req_vin_390 message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Control Message
      /// </summary>
      public enum Req_vin_signalType {
        [pbr::OriginalName("REQ_VIN_SIGNAL_NO_REQUEST")] ReqVinSignalNoRequest = 0,
        [pbr::OriginalName("REQ_VIN_SIGNAL_REQUEST")] ReqVinSignalRequest = 1,
      }

    }
    #endregion

  }

  public sealed partial class Ads1_111 : pb::IMessage<Ads1_111> {
    private static readonly pb::MessageParser<Ads1_111> _parser = new pb::MessageParser<Ads1_111>(() => new Ads1_111());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Ads1_111> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Canbus.WeyReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ads1_111() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ads1_111(Ads1_111 other) : this() {
      adsDectostop_ = other.adsDectostop_;
      adsMode_ = other.adsMode_;
      adsTaracce_ = other.adsTaracce_;
      adsDriveoffReq_ = other.adsDriveoffReq_;
      adsAebTaracce_ = other.adsAebTaracce_;
      adsAebTgtdecelReq_ = other.adsAebTgtdecelReq_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ads1_111 Clone() {
      return new Ads1_111(this);
    }

    /// <summary>Field number for the "ads_dectostop" field.</summary>
    public const int AdsDectostopFieldNumber = 1;
    private global::Apollo.Canbus.Ads1_111.Types.Ads_dectostopType adsDectostop_ = 0;
    /// <summary>
    /// ADS request ESP/VLC to decelerate untill standstill.  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Ads1_111.Types.Ads_dectostopType AdsDectostop {
      get { return adsDectostop_; }
      set {
        adsDectostop_ = value;
      }
    }

    /// <summary>Field number for the "ads_mode" field.</summary>
    public const int AdsModeFieldNumber = 2;
    private global::Apollo.Canbus.Ads1_111.Types.Ads_modeType adsMode_ = 0;
    /// <summary>
    /// The status of the ADS control unit.The ADS mode should be contained in every message sent by ADS  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Ads1_111.Types.Ads_modeType AdsMode {
      get { return adsMode_; }
      set {
        adsMode_ = value;
      }
    }

    /// <summary>Field number for the "ads_taracce" field.</summary>
    public const int AdsTaracceFieldNumber = 3;
    private double adsTaracce_;
    /// <summary>
    /// ADS target acceleration for transmission  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double AdsTaracce {
      get { return adsTaracce_; }
      set {
        adsTaracce_ = value;
      }
    }

    /// <summary>Field number for the "ads_driveoff_req" field.</summary>
    public const int AdsDriveoffReqFieldNumber = 4;
    private global::Apollo.Canbus.Ads1_111.Types.Ads_driveoff_reqType adsDriveoffReq_ = 0;
    /// <summary>
    /// ACC request ESP drive off  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Ads1_111.Types.Ads_driveoff_reqType AdsDriveoffReq {
      get { return adsDriveoffReq_; }
      set {
        adsDriveoffReq_ = value;
      }
    }

    /// <summary>Field number for the "ads_aeb_taracce" field.</summary>
    public const int AdsAebTaracceFieldNumber = 5;
    private double adsAebTaracce_;
    /// <summary>
    /// target deceleration value from AEB  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double AdsAebTaracce {
      get { return adsAebTaracce_; }
      set {
        adsAebTaracce_ = value;
      }
    }

    /// <summary>Field number for the "ads_aeb_tgtdecel_req" field.</summary>
    public const int AdsAebTgtdecelReqFieldNumber = 6;
    private global::Apollo.Canbus.Ads1_111.Types.Ads_aeb_tgtdecel_reqType adsAebTgtdecelReq_ = 0;
    /// <summary>
    /// Request of the AEB deceleration control.  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Ads1_111.Types.Ads_aeb_tgtdecel_reqType AdsAebTgtdecelReq {
      get { return adsAebTgtdecelReq_; }
      set {
        adsAebTgtdecelReq_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Ads1_111);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Ads1_111 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AdsDectostop != other.AdsDectostop) return false;
      if (AdsMode != other.AdsMode) return false;
      if (AdsTaracce != other.AdsTaracce) return false;
      if (AdsDriveoffReq != other.AdsDriveoffReq) return false;
      if (AdsAebTaracce != other.AdsAebTaracce) return false;
      if (AdsAebTgtdecelReq != other.AdsAebTgtdecelReq) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AdsDectostop != 0) hash ^= AdsDectostop.GetHashCode();
      if (AdsMode != 0) hash ^= AdsMode.GetHashCode();
      if (AdsTaracce != 0D) hash ^= AdsTaracce.GetHashCode();
      if (AdsDriveoffReq != 0) hash ^= AdsDriveoffReq.GetHashCode();
      if (AdsAebTaracce != 0D) hash ^= AdsAebTaracce.GetHashCode();
      if (AdsAebTgtdecelReq != 0) hash ^= AdsAebTgtdecelReq.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AdsDectostop != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AdsDectostop);
      }
      if (AdsMode != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) AdsMode);
      }
      if (AdsTaracce != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(AdsTaracce);
      }
      if (AdsDriveoffReq != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) AdsDriveoffReq);
      }
      if (AdsAebTaracce != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(AdsAebTaracce);
      }
      if (AdsAebTgtdecelReq != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) AdsAebTgtdecelReq);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AdsDectostop != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AdsDectostop);
      }
      if (AdsMode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AdsMode);
      }
      if (AdsTaracce != 0D) {
        size += 1 + 8;
      }
      if (AdsDriveoffReq != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AdsDriveoffReq);
      }
      if (AdsAebTaracce != 0D) {
        size += 1 + 8;
      }
      if (AdsAebTgtdecelReq != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AdsAebTgtdecelReq);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Ads1_111 other) {
      if (other == null) {
        return;
      }
      if (other.AdsDectostop != 0) {
        AdsDectostop = other.AdsDectostop;
      }
      if (other.AdsMode != 0) {
        AdsMode = other.AdsMode;
      }
      if (other.AdsTaracce != 0D) {
        AdsTaracce = other.AdsTaracce;
      }
      if (other.AdsDriveoffReq != 0) {
        AdsDriveoffReq = other.AdsDriveoffReq;
      }
      if (other.AdsAebTaracce != 0D) {
        AdsAebTaracce = other.AdsAebTaracce;
      }
      if (other.AdsAebTgtdecelReq != 0) {
        AdsAebTgtdecelReq = other.AdsAebTgtdecelReq;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            adsDectostop_ = (global::Apollo.Canbus.Ads1_111.Types.Ads_dectostopType) input.ReadEnum();
            break;
          }
          case 16: {
            adsMode_ = (global::Apollo.Canbus.Ads1_111.Types.Ads_modeType) input.ReadEnum();
            break;
          }
          case 25: {
            AdsTaracce = input.ReadDouble();
            break;
          }
          case 32: {
            adsDriveoffReq_ = (global::Apollo.Canbus.Ads1_111.Types.Ads_driveoff_reqType) input.ReadEnum();
            break;
          }
          case 41: {
            AdsAebTaracce = input.ReadDouble();
            break;
          }
          case 48: {
            adsAebTgtdecelReq_ = (global::Apollo.Canbus.Ads1_111.Types.Ads_aeb_tgtdecel_reqType) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Ads1_111 message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Control Message
      /// </summary>
      public enum Ads_dectostopType {
        [pbr::OriginalName("ADS_DECTOSTOP_NO_DEMAND")] AdsDectostopNoDemand = 0,
        [pbr::OriginalName("ADS_DECTOSTOP_DEMAND")] AdsDectostopDemand = 1,
      }

      public enum Ads_modeType {
        [pbr::OriginalName("ADS_MODE_OFF_MODE")] AdsModeOffMode = 0,
        [pbr::OriginalName("ADS_MODE_ACTIVE_MODE")] AdsModeActiveMode = 3,
      }

      public enum Ads_driveoff_reqType {
        [pbr::OriginalName("ADS_DRIVEOFF_REQ_NO_DEMAND")] AdsDriveoffReqNoDemand = 0,
        [pbr::OriginalName("ADS_DRIVEOFF_REQ_DEMAND")] AdsDriveoffReqDemand = 1,
      }

      public enum Ads_aeb_tgtdecel_reqType {
        [pbr::OriginalName("ADS_AEB_TGTDECEL_REQ_NO_DEMAND")] AdsAebTgtdecelReqNoDemand = 0,
        [pbr::OriginalName("ADS_AEB_TGTDECEL_REQ_DEMAND")] AdsAebTgtdecelReqDemand = 1,
      }

    }
    #endregion

  }

  public sealed partial class Fbs2_240 : pb::IMessage<Fbs2_240> {
    private static readonly pb::MessageParser<Fbs2_240> _parser = new pb::MessageParser<Fbs2_240>(() => new Fbs2_240());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Fbs2_240> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Canbus.WeyReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Fbs2_240() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Fbs2_240(Fbs2_240 other) : this() {
      flwheeldirection_ = other.flwheeldirection_;
      frwheelspd_ = other.frwheelspd_;
      rlwheeldrivedirection_ = other.rlwheeldrivedirection_;
      rlwheelspd_ = other.rlwheelspd_;
      rrwheeldirection_ = other.rrwheeldirection_;
      rrwheelspd_ = other.rrwheelspd_;
      vehiclespd_ = other.vehiclespd_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Fbs2_240 Clone() {
      return new Fbs2_240(this);
    }

    /// <summary>Field number for the "flwheeldirection" field.</summary>
    public const int FlwheeldirectionFieldNumber = 1;
    private global::Apollo.Canbus.Fbs2_240.Types.FlwheeldirectionType flwheeldirection_ = 0;
    /// <summary>
    /// Front left wheel Moving direction  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Fbs2_240.Types.FlwheeldirectionType Flwheeldirection {
      get { return flwheeldirection_; }
      set {
        flwheeldirection_ = value;
      }
    }

    /// <summary>Field number for the "frwheelspd" field.</summary>
    public const int FrwheelspdFieldNumber = 2;
    private double frwheelspd_;
    /// <summary>
    /// Front right wheel speed  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Frwheelspd {
      get { return frwheelspd_; }
      set {
        frwheelspd_ = value;
      }
    }

    /// <summary>Field number for the "rlwheeldrivedirection" field.</summary>
    public const int RlwheeldrivedirectionFieldNumber = 3;
    private global::Apollo.Canbus.Fbs2_240.Types.RlwheeldrivedirectionType rlwheeldrivedirection_ = 0;
    /// <summary>
    /// Rear left wheel  Moving direction  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Fbs2_240.Types.RlwheeldrivedirectionType Rlwheeldrivedirection {
      get { return rlwheeldrivedirection_; }
      set {
        rlwheeldrivedirection_ = value;
      }
    }

    /// <summary>Field number for the "rlwheelspd" field.</summary>
    public const int RlwheelspdFieldNumber = 4;
    private double rlwheelspd_;
    /// <summary>
    /// Rear left wheel speed  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Rlwheelspd {
      get { return rlwheelspd_; }
      set {
        rlwheelspd_ = value;
      }
    }

    /// <summary>Field number for the "rrwheeldirection" field.</summary>
    public const int RrwheeldirectionFieldNumber = 5;
    private global::Apollo.Canbus.Fbs2_240.Types.RrwheeldirectionType rrwheeldirection_ = 0;
    /// <summary>
    /// Rear right wheel Moving direction  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Fbs2_240.Types.RrwheeldirectionType Rrwheeldirection {
      get { return rrwheeldirection_; }
      set {
        rrwheeldirection_ = value;
      }
    }

    /// <summary>Field number for the "rrwheelspd" field.</summary>
    public const int RrwheelspdFieldNumber = 6;
    private double rrwheelspd_;
    /// <summary>
    /// Rear right wheel speed  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Rrwheelspd {
      get { return rrwheelspd_; }
      set {
        rrwheelspd_ = value;
      }
    }

    /// <summary>Field number for the "vehiclespd" field.</summary>
    public const int VehiclespdFieldNumber = 7;
    private double vehiclespd_;
    /// <summary>
    /// Current Vehicle speed information  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Vehiclespd {
      get { return vehiclespd_; }
      set {
        vehiclespd_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Fbs2_240);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Fbs2_240 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Flwheeldirection != other.Flwheeldirection) return false;
      if (Frwheelspd != other.Frwheelspd) return false;
      if (Rlwheeldrivedirection != other.Rlwheeldrivedirection) return false;
      if (Rlwheelspd != other.Rlwheelspd) return false;
      if (Rrwheeldirection != other.Rrwheeldirection) return false;
      if (Rrwheelspd != other.Rrwheelspd) return false;
      if (Vehiclespd != other.Vehiclespd) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Flwheeldirection != 0) hash ^= Flwheeldirection.GetHashCode();
      if (Frwheelspd != 0D) hash ^= Frwheelspd.GetHashCode();
      if (Rlwheeldrivedirection != 0) hash ^= Rlwheeldrivedirection.GetHashCode();
      if (Rlwheelspd != 0D) hash ^= Rlwheelspd.GetHashCode();
      if (Rrwheeldirection != 0) hash ^= Rrwheeldirection.GetHashCode();
      if (Rrwheelspd != 0D) hash ^= Rrwheelspd.GetHashCode();
      if (Vehiclespd != 0D) hash ^= Vehiclespd.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Flwheeldirection != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Flwheeldirection);
      }
      if (Frwheelspd != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Frwheelspd);
      }
      if (Rlwheeldrivedirection != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Rlwheeldrivedirection);
      }
      if (Rlwheelspd != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Rlwheelspd);
      }
      if (Rrwheeldirection != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Rrwheeldirection);
      }
      if (Rrwheelspd != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(Rrwheelspd);
      }
      if (Vehiclespd != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(Vehiclespd);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Flwheeldirection != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Flwheeldirection);
      }
      if (Frwheelspd != 0D) {
        size += 1 + 8;
      }
      if (Rlwheeldrivedirection != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Rlwheeldrivedirection);
      }
      if (Rlwheelspd != 0D) {
        size += 1 + 8;
      }
      if (Rrwheeldirection != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Rrwheeldirection);
      }
      if (Rrwheelspd != 0D) {
        size += 1 + 8;
      }
      if (Vehiclespd != 0D) {
        size += 1 + 8;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Fbs2_240 other) {
      if (other == null) {
        return;
      }
      if (other.Flwheeldirection != 0) {
        Flwheeldirection = other.Flwheeldirection;
      }
      if (other.Frwheelspd != 0D) {
        Frwheelspd = other.Frwheelspd;
      }
      if (other.Rlwheeldrivedirection != 0) {
        Rlwheeldrivedirection = other.Rlwheeldrivedirection;
      }
      if (other.Rlwheelspd != 0D) {
        Rlwheelspd = other.Rlwheelspd;
      }
      if (other.Rrwheeldirection != 0) {
        Rrwheeldirection = other.Rrwheeldirection;
      }
      if (other.Rrwheelspd != 0D) {
        Rrwheelspd = other.Rrwheelspd;
      }
      if (other.Vehiclespd != 0D) {
        Vehiclespd = other.Vehiclespd;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            flwheeldirection_ = (global::Apollo.Canbus.Fbs2_240.Types.FlwheeldirectionType) input.ReadEnum();
            break;
          }
          case 17: {
            Frwheelspd = input.ReadDouble();
            break;
          }
          case 24: {
            rlwheeldrivedirection_ = (global::Apollo.Canbus.Fbs2_240.Types.RlwheeldrivedirectionType) input.ReadEnum();
            break;
          }
          case 33: {
            Rlwheelspd = input.ReadDouble();
            break;
          }
          case 40: {
            rrwheeldirection_ = (global::Apollo.Canbus.Fbs2_240.Types.RrwheeldirectionType) input.ReadEnum();
            break;
          }
          case 49: {
            Rrwheelspd = input.ReadDouble();
            break;
          }
          case 57: {
            Vehiclespd = input.ReadDouble();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Fbs2_240 message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Report Message
      /// </summary>
      public enum FlwheeldirectionType {
        [pbr::OriginalName("FLWHEELDIRECTION_INVALID")] FlwheeldirectionInvalid = 0,
        [pbr::OriginalName("FLWHEELDIRECTION_FORWARD")] FlwheeldirectionForward = 1,
        [pbr::OriginalName("FLWHEELDIRECTION_BACKWARD")] FlwheeldirectionBackward = 2,
        [pbr::OriginalName("FLWHEELDIRECTION_STOP")] FlwheeldirectionStop = 3,
      }

      public enum RlwheeldrivedirectionType {
        [pbr::OriginalName("RLWHEELDRIVEDIRECTION_INVALID")] RlwheeldrivedirectionInvalid = 0,
        [pbr::OriginalName("RLWHEELDRIVEDIRECTION_FORWARD")] RlwheeldrivedirectionForward = 1,
        [pbr::OriginalName("RLWHEELDRIVEDIRECTION_BACKWARD")] RlwheeldrivedirectionBackward = 2,
        [pbr::OriginalName("RLWHEELDRIVEDIRECTION_STOP")] RlwheeldrivedirectionStop = 3,
      }

      public enum RrwheeldirectionType {
        [pbr::OriginalName("RRWHEELDIRECTION_INVALID")] RrwheeldirectionInvalid = 0,
        [pbr::OriginalName("RRWHEELDIRECTION_FORWARD")] RrwheeldirectionForward = 1,
        [pbr::OriginalName("RRWHEELDIRECTION_BACKWARD")] RrwheeldirectionBackward = 2,
        [pbr::OriginalName("RRWHEELDIRECTION_STOP")] RrwheeldirectionStop = 3,
      }

    }
    #endregion

  }

  public sealed partial class Fbs1_243 : pb::IMessage<Fbs1_243> {
    private static readonly pb::MessageParser<Fbs1_243> _parser = new pb::MessageParser<Fbs1_243>(() => new Fbs1_243());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Fbs1_243> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Canbus.WeyReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Fbs1_243() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Fbs1_243(Fbs1_243 other) : this() {
      longitudeacce_ = other.longitudeacce_;
      lateralacce_ = other.lateralacce_;
      vehdynyawrate_ = other.vehdynyawrate_;
      flwheelspd_ = other.flwheelspd_;
      frwheeldirection_ = other.frwheeldirection_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Fbs1_243 Clone() {
      return new Fbs1_243(this);
    }

    /// <summary>Field number for the "longitudeacce" field.</summary>
    public const int LongitudeacceFieldNumber = 1;
    private double longitudeacce_;
    /// <summary>
    /// Longitude acceleration  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Longitudeacce {
      get { return longitudeacce_; }
      set {
        longitudeacce_ = value;
      }
    }

    /// <summary>Field number for the "lateralacce" field.</summary>
    public const int LateralacceFieldNumber = 2;
    private double lateralacce_;
    /// <summary>
    /// Indicates Lateral Acceleration  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Lateralacce {
      get { return lateralacce_; }
      set {
        lateralacce_ = value;
      }
    }

    /// <summary>Field number for the "vehdynyawrate" field.</summary>
    public const int VehdynyawrateFieldNumber = 3;
    private double vehdynyawrate_;
    /// <summary>
    /// Vehicle yaw rate  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Vehdynyawrate {
      get { return vehdynyawrate_; }
      set {
        vehdynyawrate_ = value;
      }
    }

    /// <summary>Field number for the "flwheelspd" field.</summary>
    public const int FlwheelspdFieldNumber = 4;
    private double flwheelspd_;
    /// <summary>
    /// Front left wheel speed  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Flwheelspd {
      get { return flwheelspd_; }
      set {
        flwheelspd_ = value;
      }
    }

    /// <summary>Field number for the "frwheeldirection" field.</summary>
    public const int FrwheeldirectionFieldNumber = 5;
    private global::Apollo.Canbus.Fbs1_243.Types.FrwheeldirectionType frwheeldirection_ = 0;
    /// <summary>
    /// Front right wheel  Moving direction  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Fbs1_243.Types.FrwheeldirectionType Frwheeldirection {
      get { return frwheeldirection_; }
      set {
        frwheeldirection_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Fbs1_243);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Fbs1_243 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Longitudeacce != other.Longitudeacce) return false;
      if (Lateralacce != other.Lateralacce) return false;
      if (Vehdynyawrate != other.Vehdynyawrate) return false;
      if (Flwheelspd != other.Flwheelspd) return false;
      if (Frwheeldirection != other.Frwheeldirection) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Longitudeacce != 0D) hash ^= Longitudeacce.GetHashCode();
      if (Lateralacce != 0D) hash ^= Lateralacce.GetHashCode();
      if (Vehdynyawrate != 0D) hash ^= Vehdynyawrate.GetHashCode();
      if (Flwheelspd != 0D) hash ^= Flwheelspd.GetHashCode();
      if (Frwheeldirection != 0) hash ^= Frwheeldirection.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Longitudeacce != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Longitudeacce);
      }
      if (Lateralacce != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Lateralacce);
      }
      if (Vehdynyawrate != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Vehdynyawrate);
      }
      if (Flwheelspd != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Flwheelspd);
      }
      if (Frwheeldirection != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Frwheeldirection);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Longitudeacce != 0D) {
        size += 1 + 8;
      }
      if (Lateralacce != 0D) {
        size += 1 + 8;
      }
      if (Vehdynyawrate != 0D) {
        size += 1 + 8;
      }
      if (Flwheelspd != 0D) {
        size += 1 + 8;
      }
      if (Frwheeldirection != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Frwheeldirection);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Fbs1_243 other) {
      if (other == null) {
        return;
      }
      if (other.Longitudeacce != 0D) {
        Longitudeacce = other.Longitudeacce;
      }
      if (other.Lateralacce != 0D) {
        Lateralacce = other.Lateralacce;
      }
      if (other.Vehdynyawrate != 0D) {
        Vehdynyawrate = other.Vehdynyawrate;
      }
      if (other.Flwheelspd != 0D) {
        Flwheelspd = other.Flwheelspd;
      }
      if (other.Frwheeldirection != 0) {
        Frwheeldirection = other.Frwheeldirection;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 9: {
            Longitudeacce = input.ReadDouble();
            break;
          }
          case 17: {
            Lateralacce = input.ReadDouble();
            break;
          }
          case 25: {
            Vehdynyawrate = input.ReadDouble();
            break;
          }
          case 33: {
            Flwheelspd = input.ReadDouble();
            break;
          }
          case 40: {
            frwheeldirection_ = (global::Apollo.Canbus.Fbs1_243.Types.FrwheeldirectionType) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Fbs1_243 message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Report Message
      /// </summary>
      public enum FrwheeldirectionType {
        [pbr::OriginalName("FRWHEELDIRECTION_INVALID")] FrwheeldirectionInvalid = 0,
        [pbr::OriginalName("FRWHEELDIRECTION_FORWARD")] FrwheeldirectionForward = 1,
        [pbr::OriginalName("FRWHEELDIRECTION_BACKWARD")] FrwheeldirectionBackward = 2,
        [pbr::OriginalName("FRWHEELDIRECTION_STOP")] FrwheeldirectionStop = 3,
      }

    }
    #endregion

  }

  public sealed partial class Fbs4_235 : pb::IMessage<Fbs4_235> {
    private static readonly pb::MessageParser<Fbs4_235> _parser = new pb::MessageParser<Fbs4_235>(() => new Fbs4_235());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Fbs4_235> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Canbus.WeyReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Fbs4_235() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Fbs4_235(Fbs4_235 other) : this() {
      steerwheelangle_ = other.steerwheelangle_;
      steerwheelspd_ = other.steerwheelspd_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Fbs4_235 Clone() {
      return new Fbs4_235(this);
    }

    /// <summary>Field number for the "steerwheelangle" field.</summary>
    public const int SteerwheelangleFieldNumber = 1;
    private double steerwheelangle_;
    /// <summary>
    /// Report Message
    /// angle of steering wheel   
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Steerwheelangle {
      get { return steerwheelangle_; }
      set {
        steerwheelangle_ = value;
      }
    }

    /// <summary>Field number for the "steerwheelspd" field.</summary>
    public const int SteerwheelspdFieldNumber = 2;
    private double steerwheelspd_;
    /// <summary>
    /// steering wheel rotation speed  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Steerwheelspd {
      get { return steerwheelspd_; }
      set {
        steerwheelspd_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Fbs4_235);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Fbs4_235 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steerwheelangle != other.Steerwheelangle) return false;
      if (Steerwheelspd != other.Steerwheelspd) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Steerwheelangle != 0D) hash ^= Steerwheelangle.GetHashCode();
      if (Steerwheelspd != 0D) hash ^= Steerwheelspd.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Steerwheelangle != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Steerwheelangle);
      }
      if (Steerwheelspd != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Steerwheelspd);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Steerwheelangle != 0D) {
        size += 1 + 8;
      }
      if (Steerwheelspd != 0D) {
        size += 1 + 8;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Fbs4_235 other) {
      if (other == null) {
        return;
      }
      if (other.Steerwheelangle != 0D) {
        Steerwheelangle = other.Steerwheelangle;
      }
      if (other.Steerwheelspd != 0D) {
        Steerwheelspd = other.Steerwheelspd;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 9: {
            Steerwheelangle = input.ReadDouble();
            break;
          }
          case 17: {
            Steerwheelspd = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Fail_241 : pb::IMessage<Fail_241> {
    private static readonly pb::MessageParser<Fail_241> _parser = new pb::MessageParser<Fail_241>(() => new Fail_241());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Fail_241> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Canbus.WeyReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Fail_241() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Fail_241(Fail_241 other) : this() {
      engfail_ = other.engfail_;
      espfail_ = other.espfail_;
      epbfail_ = other.epbfail_;
      shiftfail_ = other.shiftfail_;
      epsfail_ = other.epsfail_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Fail_241 Clone() {
      return new Fail_241(this);
    }

    /// <summary>Field number for the "engfail" field.</summary>
    public const int EngfailFieldNumber = 1;
    private global::Apollo.Canbus.Fail_241.Types.EngfailType engfail_ = 0;
    /// <summary>
    /// Engine Fail status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Fail_241.Types.EngfailType Engfail {
      get { return engfail_; }
      set {
        engfail_ = value;
      }
    }

    /// <summary>Field number for the "espfail" field.</summary>
    public const int EspfailFieldNumber = 2;
    private global::Apollo.Canbus.Fail_241.Types.EspfailType espfail_ = 0;
    /// <summary>
    /// ESP fault  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Fail_241.Types.EspfailType Espfail {
      get { return espfail_; }
      set {
        espfail_ = value;
      }
    }

    /// <summary>Field number for the "epbfail" field.</summary>
    public const int EpbfailFieldNumber = 3;
    private global::Apollo.Canbus.Fail_241.Types.EpbfailType epbfail_ = 0;
    /// <summary>
    /// error indication of EPB system  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Fail_241.Types.EpbfailType Epbfail {
      get { return epbfail_; }
      set {
        epbfail_ = value;
      }
    }

    /// <summary>Field number for the "shiftfail" field.</summary>
    public const int ShiftfailFieldNumber = 4;
    private global::Apollo.Canbus.Fail_241.Types.ShiftfailType shiftfail_ = 0;
    /// <summary>
    /// Driver display failure messages  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Fail_241.Types.ShiftfailType Shiftfail {
      get { return shiftfail_; }
      set {
        shiftfail_ = value;
      }
    }

    /// <summary>Field number for the "epsfail" field.</summary>
    public const int EpsfailFieldNumber = 5;
    private global::Apollo.Canbus.Fail_241.Types.EpsfailType epsfail_ = 0;
    /// <summary>
    /// Electrical steering fail status  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Fail_241.Types.EpsfailType Epsfail {
      get { return epsfail_; }
      set {
        epsfail_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Fail_241);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Fail_241 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Engfail != other.Engfail) return false;
      if (Espfail != other.Espfail) return false;
      if (Epbfail != other.Epbfail) return false;
      if (Shiftfail != other.Shiftfail) return false;
      if (Epsfail != other.Epsfail) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Engfail != 0) hash ^= Engfail.GetHashCode();
      if (Espfail != 0) hash ^= Espfail.GetHashCode();
      if (Epbfail != 0) hash ^= Epbfail.GetHashCode();
      if (Shiftfail != 0) hash ^= Shiftfail.GetHashCode();
      if (Epsfail != 0) hash ^= Epsfail.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Engfail != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Engfail);
      }
      if (Espfail != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Espfail);
      }
      if (Epbfail != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Epbfail);
      }
      if (Shiftfail != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Shiftfail);
      }
      if (Epsfail != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Epsfail);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Engfail != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Engfail);
      }
      if (Espfail != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Espfail);
      }
      if (Epbfail != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Epbfail);
      }
      if (Shiftfail != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Shiftfail);
      }
      if (Epsfail != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Epsfail);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Fail_241 other) {
      if (other == null) {
        return;
      }
      if (other.Engfail != 0) {
        Engfail = other.Engfail;
      }
      if (other.Espfail != 0) {
        Espfail = other.Espfail;
      }
      if (other.Epbfail != 0) {
        Epbfail = other.Epbfail;
      }
      if (other.Shiftfail != 0) {
        Shiftfail = other.Shiftfail;
      }
      if (other.Epsfail != 0) {
        Epsfail = other.Epsfail;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            engfail_ = (global::Apollo.Canbus.Fail_241.Types.EngfailType) input.ReadEnum();
            break;
          }
          case 16: {
            espfail_ = (global::Apollo.Canbus.Fail_241.Types.EspfailType) input.ReadEnum();
            break;
          }
          case 24: {
            epbfail_ = (global::Apollo.Canbus.Fail_241.Types.EpbfailType) input.ReadEnum();
            break;
          }
          case 32: {
            shiftfail_ = (global::Apollo.Canbus.Fail_241.Types.ShiftfailType) input.ReadEnum();
            break;
          }
          case 40: {
            epsfail_ = (global::Apollo.Canbus.Fail_241.Types.EpsfailType) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Fail_241 message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Report Message
      /// </summary>
      public enum EngfailType {
        [pbr::OriginalName("ENGFAIL_NO_FAIL")] EngfailNoFail = 0,
        [pbr::OriginalName("ENGFAIL_FAIL")] EngfailFail = 1,
      }

      public enum EspfailType {
        [pbr::OriginalName("ESPFAIL_NO_FAILURE")] EspfailNoFailure = 0,
        [pbr::OriginalName("ESPFAIL_FAILURE")] EspfailFailure = 1,
      }

      public enum EpbfailType {
        [pbr::OriginalName("EPBFAIL_UNDEFINED")] EpbfailUndefined = 0,
        [pbr::OriginalName("EPBFAIL_NO_ERROR")] EpbfailNoError = 1,
        [pbr::OriginalName("EPBFAIL_ERROR")] EpbfailError = 2,
        [pbr::OriginalName("EPBFAIL_DIAGNOSIS")] EpbfailDiagnosis = 3,
      }

      public enum ShiftfailType {
        [pbr::OriginalName("SHIFTFAIL_NO_FAIL")] ShiftfailNoFail = 0,
        [pbr::OriginalName("SHIFTFAIL_TRANSMISSION_MALFUNCTION")] ShiftfailTransmissionMalfunction = 1,
        [pbr::OriginalName("SHIFTFAIL_TRANSMISSION_P_ENGAGEMENT_FAULT")] ShiftfailTransmissionPEngagementFault = 2,
        [pbr::OriginalName("SHIFTFAIL_TRANSMISSION_P_DISENGAGEMENT_FAULT")] ShiftfailTransmissionPDisengagementFault = 3,
        [pbr::OriginalName("SHIFTFAIL_RESERVED")] ShiftfailReserved = 4,
        [pbr::OriginalName("SHIFTFAIL_TRANSMISSION_LIMIT_FUNCTION")] ShiftfailTransmissionLimitFunction = 15,
      }

      public enum EpsfailType {
        [pbr::OriginalName("EPSFAIL_NO_FAULT")] EpsfailNoFault = 0,
        [pbr::OriginalName("EPSFAIL_FAULT")] EpsfailFault = 1,
      }

    }
    #endregion

  }

  public sealed partial class Fbs3_237 : pb::IMessage<Fbs3_237> {
    private static readonly pb::MessageParser<Fbs3_237> _parser = new pb::MessageParser<Fbs3_237>(() => new Fbs3_237());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Fbs3_237> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Canbus.WeyReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Fbs3_237() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Fbs3_237(Fbs3_237 other) : this() {
      engspd_ = other.engspd_;
      accpedalpos_ = other.accpedalpos_;
      epbswtichposition_ = other.epbswtichposition_;
      currentgear_ = other.currentgear_;
      epsStreeingmode_ = other.epsStreeingmode_;
      epsdrvinputtrqvalue_ = other.epsdrvinputtrqvalue_;
      epsconsumedcurrvalue_ = other.epsconsumedcurrvalue_;
      epscurrmod_ = other.epscurrmod_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Fbs3_237 Clone() {
      return new Fbs3_237(this);
    }

    /// <summary>Field number for the "engspd" field.</summary>
    public const int EngspdFieldNumber = 1;
    private double engspd_;
    /// <summary>
    /// Engine speed  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Engspd {
      get { return engspd_; }
      set {
        engspd_ = value;
      }
    }

    /// <summary>Field number for the "accpedalpos" field.</summary>
    public const int AccpedalposFieldNumber = 2;
    private double accpedalpos_;
    /// <summary>
    /// Acceleration Pedal Position  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Accpedalpos {
      get { return accpedalpos_; }
      set {
        accpedalpos_ = value;
      }
    }

    /// <summary>Field number for the "epbswtichposition" field.</summary>
    public const int EpbswtichpositionFieldNumber = 3;
    private global::Apollo.Canbus.Fbs3_237.Types.EpbswtichpositionType epbswtichposition_ = 0;
    /// <summary>
    /// EPB Switch position information  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Fbs3_237.Types.EpbswtichpositionType Epbswtichposition {
      get { return epbswtichposition_; }
      set {
        epbswtichposition_ = value;
      }
    }

    /// <summary>Field number for the "currentgear" field.</summary>
    public const int CurrentgearFieldNumber = 4;
    private global::Apollo.Canbus.Fbs3_237.Types.CurrentgearType currentgear_ = 0;
    /// <summary>
    /// To indicate which gear the DCT is in now   
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Fbs3_237.Types.CurrentgearType Currentgear {
      get { return currentgear_; }
      set {
        currentgear_ = value;
      }
    }

    /// <summary>Field number for the "eps_streeingmode" field.</summary>
    public const int EpsStreeingmodeFieldNumber = 5;
    private global::Apollo.Canbus.Fbs3_237.Types.Eps_streeingmodeType epsStreeingmode_ = 0;
    /// <summary>
    /// Driver Steering Interference Detected  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Fbs3_237.Types.Eps_streeingmodeType EpsStreeingmode {
      get { return epsStreeingmode_; }
      set {
        epsStreeingmode_ = value;
      }
    }

    /// <summary>Field number for the "epsdrvinputtrqvalue" field.</summary>
    public const int EpsdrvinputtrqvalueFieldNumber = 6;
    private double epsdrvinputtrqvalue_;
    /// <summary>
    /// Value of driver input torque  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Epsdrvinputtrqvalue {
      get { return epsdrvinputtrqvalue_; }
      set {
        epsdrvinputtrqvalue_ = value;
      }
    }

    /// <summary>Field number for the "epsconsumedcurrvalue" field.</summary>
    public const int EpsconsumedcurrvalueFieldNumber = 7;
    private double epsconsumedcurrvalue_;
    /// <summary>
    /// Value of consumed current by EPS  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Epsconsumedcurrvalue {
      get { return epsconsumedcurrvalue_; }
      set {
        epsconsumedcurrvalue_ = value;
      }
    }

    /// <summary>Field number for the "epscurrmod" field.</summary>
    public const int EpscurrmodFieldNumber = 8;
    private global::Apollo.Canbus.Fbs3_237.Types.EpscurrmodType epscurrmod_ = 0;
    /// <summary>
    /// Applied steering mode currently  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Fbs3_237.Types.EpscurrmodType Epscurrmod {
      get { return epscurrmod_; }
      set {
        epscurrmod_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Fbs3_237);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Fbs3_237 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Engspd != other.Engspd) return false;
      if (Accpedalpos != other.Accpedalpos) return false;
      if (Epbswtichposition != other.Epbswtichposition) return false;
      if (Currentgear != other.Currentgear) return false;
      if (EpsStreeingmode != other.EpsStreeingmode) return false;
      if (Epsdrvinputtrqvalue != other.Epsdrvinputtrqvalue) return false;
      if (Epsconsumedcurrvalue != other.Epsconsumedcurrvalue) return false;
      if (Epscurrmod != other.Epscurrmod) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Engspd != 0D) hash ^= Engspd.GetHashCode();
      if (Accpedalpos != 0D) hash ^= Accpedalpos.GetHashCode();
      if (Epbswtichposition != 0) hash ^= Epbswtichposition.GetHashCode();
      if (Currentgear != 0) hash ^= Currentgear.GetHashCode();
      if (EpsStreeingmode != 0) hash ^= EpsStreeingmode.GetHashCode();
      if (Epsdrvinputtrqvalue != 0D) hash ^= Epsdrvinputtrqvalue.GetHashCode();
      if (Epsconsumedcurrvalue != 0D) hash ^= Epsconsumedcurrvalue.GetHashCode();
      if (Epscurrmod != 0) hash ^= Epscurrmod.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Engspd != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Engspd);
      }
      if (Accpedalpos != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Accpedalpos);
      }
      if (Epbswtichposition != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Epbswtichposition);
      }
      if (Currentgear != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Currentgear);
      }
      if (EpsStreeingmode != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) EpsStreeingmode);
      }
      if (Epsdrvinputtrqvalue != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(Epsdrvinputtrqvalue);
      }
      if (Epsconsumedcurrvalue != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(Epsconsumedcurrvalue);
      }
      if (Epscurrmod != 0) {
        output.WriteRawTag(64);
        output.WriteEnum((int) Epscurrmod);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Engspd != 0D) {
        size += 1 + 8;
      }
      if (Accpedalpos != 0D) {
        size += 1 + 8;
      }
      if (Epbswtichposition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Epbswtichposition);
      }
      if (Currentgear != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Currentgear);
      }
      if (EpsStreeingmode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EpsStreeingmode);
      }
      if (Epsdrvinputtrqvalue != 0D) {
        size += 1 + 8;
      }
      if (Epsconsumedcurrvalue != 0D) {
        size += 1 + 8;
      }
      if (Epscurrmod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Epscurrmod);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Fbs3_237 other) {
      if (other == null) {
        return;
      }
      if (other.Engspd != 0D) {
        Engspd = other.Engspd;
      }
      if (other.Accpedalpos != 0D) {
        Accpedalpos = other.Accpedalpos;
      }
      if (other.Epbswtichposition != 0) {
        Epbswtichposition = other.Epbswtichposition;
      }
      if (other.Currentgear != 0) {
        Currentgear = other.Currentgear;
      }
      if (other.EpsStreeingmode != 0) {
        EpsStreeingmode = other.EpsStreeingmode;
      }
      if (other.Epsdrvinputtrqvalue != 0D) {
        Epsdrvinputtrqvalue = other.Epsdrvinputtrqvalue;
      }
      if (other.Epsconsumedcurrvalue != 0D) {
        Epsconsumedcurrvalue = other.Epsconsumedcurrvalue;
      }
      if (other.Epscurrmod != 0) {
        Epscurrmod = other.Epscurrmod;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 9: {
            Engspd = input.ReadDouble();
            break;
          }
          case 17: {
            Accpedalpos = input.ReadDouble();
            break;
          }
          case 24: {
            epbswtichposition_ = (global::Apollo.Canbus.Fbs3_237.Types.EpbswtichpositionType) input.ReadEnum();
            break;
          }
          case 32: {
            currentgear_ = (global::Apollo.Canbus.Fbs3_237.Types.CurrentgearType) input.ReadEnum();
            break;
          }
          case 40: {
            epsStreeingmode_ = (global::Apollo.Canbus.Fbs3_237.Types.Eps_streeingmodeType) input.ReadEnum();
            break;
          }
          case 49: {
            Epsdrvinputtrqvalue = input.ReadDouble();
            break;
          }
          case 57: {
            Epsconsumedcurrvalue = input.ReadDouble();
            break;
          }
          case 64: {
            epscurrmod_ = (global::Apollo.Canbus.Fbs3_237.Types.EpscurrmodType) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Fbs3_237 message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Report Message
      /// </summary>
      public enum EpbswtichpositionType {
        [pbr::OriginalName("EPBSWTICHPOSITION_NEUTRAL")] EpbswtichpositionNeutral = 0,
        [pbr::OriginalName("EPBSWTICHPOSITION_RELEASE")] EpbswtichpositionRelease = 1,
        [pbr::OriginalName("EPBSWTICHPOSITION_APPLY")] EpbswtichpositionApply = 2,
        [pbr::OriginalName("EPBSWTICHPOSITION_RESERVED1")] EpbswtichpositionReserved1 = 3,
      }

      public enum CurrentgearType {
        [pbr::OriginalName("CURRENTGEAR_P")] CurrentgearP = 0,
        [pbr::OriginalName("CURRENTGEAR_R")] CurrentgearR = 1,
        [pbr::OriginalName("CURRENTGEAR_N")] CurrentgearN = 2,
        [pbr::OriginalName("CURRENTGEAR_D")] CurrentgearD = 3,
      }

      public enum Eps_streeingmodeType {
        [pbr::OriginalName("EPS_STREEINGMODE_MANUAL")] EpsStreeingmodeManual = 0,
        [pbr::OriginalName("EPS_STREEINGMODE_AUTOMATIC_AVAIL")] EpsStreeingmodeAutomaticAvail = 1,
        [pbr::OriginalName("EPS_STREEINGMODE_MANUAL_FROM_DRVNTERFERENCE")] EpsStreeingmodeManualFromDrvnterference = 2,
        [pbr::OriginalName("EPS_STREEINGMODE_MANUAL_FROM_EPS_FAILED_DETECTED")] EpsStreeingmodeManualFromEpsFailedDetected = 3,
        [pbr::OriginalName("EPS_STREEINGMODE_TEMPORARY_INHIBITED")] EpsStreeingmodeTemporaryInhibited = 4,
        [pbr::OriginalName("EPS_STREEINGMODE_RESERVED1")] EpsStreeingmodeReserved1 = 5,
        [pbr::OriginalName("EPS_STREEINGMODE_RESERVED2")] EpsStreeingmodeReserved2 = 6,
        [pbr::OriginalName("EPS_STREEINGMODE_RESERVED3")] EpsStreeingmodeReserved3 = 7,
      }

      public enum EpscurrmodType {
        [pbr::OriginalName("EPSCURRMOD_NORMAL_MODE")] EpscurrmodNormalMode = 0,
        [pbr::OriginalName("EPSCURRMOD_SPORT_MODE")] EpscurrmodSportMode = 1,
        [pbr::OriginalName("EPSCURRMOD_COMFORT_MODE")] EpscurrmodComfortMode = 2,
        [pbr::OriginalName("EPSCURRMOD_MODESELECTIONNOTPOSSIBLE")] EpscurrmodModeselectionnotpossible = 3,
        [pbr::OriginalName("EPSCURRMOD_NO_DISPLAY")] EpscurrmodNoDisplay = 4,
        [pbr::OriginalName("EPSCURRMOD_CONDITIONNOTMEET")] EpscurrmodConditionnotmeet = 5,
        [pbr::OriginalName("EPSCURRMOD_RESERVED1")] EpscurrmodReserved1 = 6,
      }

    }
    #endregion

  }

  public sealed partial class Ads3_38e : pb::IMessage<Ads3_38e> {
    private static readonly pb::MessageParser<Ads3_38e> _parser = new pb::MessageParser<Ads3_38e>(() => new Ads3_38e());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Ads3_38e> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Canbus.WeyReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ads3_38e() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ads3_38e(Ads3_38e other) : this() {
      adsBcmWorksts_ = other.adsBcmWorksts_;
      adsBcmworkstsvalid_ = other.adsBcmworkstsvalid_;
      adsReqcontrolbcm_ = other.adsReqcontrolbcm_;
      highbeamton_ = other.highbeamton_;
      dippedbeamon_ = other.dippedbeamon_;
      turnllighton_ = other.turnllighton_;
      emergencylighton_ = other.emergencylighton_;
      ffoglampon_ = other.ffoglampon_;
      rfoglampon_ = other.rfoglampon_;
      brakelight_ = other.brakelight_;
      hornon_ = other.hornon_;
      fwindshieldwiper_ = other.fwindshieldwiper_;
      rwindshieldwiper_ = other.rwindshieldwiper_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ads3_38e Clone() {
      return new Ads3_38e(this);
    }

    /// <summary>Field number for the "ads_bcm_worksts" field.</summary>
    public const int AdsBcmWorkstsFieldNumber = 1;
    private global::Apollo.Canbus.Ads3_38e.Types.Ads_bcm_workstsType adsBcmWorksts_ = 0;
    /// <summary>
    /// The work status of ADS control unit.This signal should be contained in every message sent by ADS.  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Ads3_38e.Types.Ads_bcm_workstsType AdsBcmWorksts {
      get { return adsBcmWorksts_; }
      set {
        adsBcmWorksts_ = value;
      }
    }

    /// <summary>Field number for the "ads_bcmworkstsvalid" field.</summary>
    public const int AdsBcmworkstsvalidFieldNumber = 2;
    private global::Apollo.Canbus.Ads3_38e.Types.Ads_bcmworkstsvalidType adsBcmworkstsvalid_ = 0;
    /// <summary>
    /// This Signal reflect the ADS_WorkSts Signal is Valid OR not  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Ads3_38e.Types.Ads_bcmworkstsvalidType AdsBcmworkstsvalid {
      get { return adsBcmworkstsvalid_; }
      set {
        adsBcmworkstsvalid_ = value;
      }
    }

    /// <summary>Field number for the "ads_reqcontrolbcm" field.</summary>
    public const int AdsReqcontrolbcmFieldNumber = 3;
    private global::Apollo.Canbus.Ads3_38e.Types.Ads_reqcontrolbcmType adsReqcontrolbcm_ = 0;
    /// <summary>
    /// Vehicle Task request.If ADS request control BCM  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Ads3_38e.Types.Ads_reqcontrolbcmType AdsReqcontrolbcm {
      get { return adsReqcontrolbcm_; }
      set {
        adsReqcontrolbcm_ = value;
      }
    }

    /// <summary>Field number for the "highbeamton" field.</summary>
    public const int HighbeamtonFieldNumber = 4;
    private global::Apollo.Canbus.Ads3_38e.Types.HighbeamtonType highbeamton_ = 0;
    /// <summary>
    /// Open theHigh Beam light  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Ads3_38e.Types.HighbeamtonType Highbeamton {
      get { return highbeamton_; }
      set {
        highbeamton_ = value;
      }
    }

    /// <summary>Field number for the "dippedbeamon" field.</summary>
    public const int DippedbeamonFieldNumber = 5;
    private global::Apollo.Canbus.Ads3_38e.Types.DippedbeamonType dippedbeamon_ = 0;
    /// <summary>
    /// Open the dipped Beam light  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Ads3_38e.Types.DippedbeamonType Dippedbeamon {
      get { return dippedbeamon_; }
      set {
        dippedbeamon_ = value;
      }
    }

    /// <summary>Field number for the "turnllighton" field.</summary>
    public const int TurnllightonFieldNumber = 6;
    private global::Apollo.Canbus.Ads3_38e.Types.TurnllightonType turnllighton_ = 0;
    /// <summary>
    /// Open the Turn light  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Ads3_38e.Types.TurnllightonType Turnllighton {
      get { return turnllighton_; }
      set {
        turnllighton_ = value;
      }
    }

    /// <summary>Field number for the "emergencylighton" field.</summary>
    public const int EmergencylightonFieldNumber = 7;
    private global::Apollo.Canbus.Ads3_38e.Types.EmergencylightonType emergencylighton_ = 0;
    /// <summary>
    /// Open the emergency light  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Ads3_38e.Types.EmergencylightonType Emergencylighton {
      get { return emergencylighton_; }
      set {
        emergencylighton_ = value;
      }
    }

    /// <summary>Field number for the "ffoglampon" field.</summary>
    public const int FfoglamponFieldNumber = 8;
    private global::Apollo.Canbus.Ads3_38e.Types.FfoglamponType ffoglampon_ = 0;
    /// <summary>
    /// Open the front fog light  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Ads3_38e.Types.FfoglamponType Ffoglampon {
      get { return ffoglampon_; }
      set {
        ffoglampon_ = value;
      }
    }

    /// <summary>Field number for the "rfoglampon" field.</summary>
    public const int RfoglamponFieldNumber = 9;
    private global::Apollo.Canbus.Ads3_38e.Types.RfoglamponType rfoglampon_ = 0;
    /// <summary>
    /// Open the rear fog ligh  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Ads3_38e.Types.RfoglamponType Rfoglampon {
      get { return rfoglampon_; }
      set {
        rfoglampon_ = value;
      }
    }

    /// <summary>Field number for the "brakelight" field.</summary>
    public const int BrakelightFieldNumber = 10;
    private global::Apollo.Canbus.Ads3_38e.Types.BrakelightType brakelight_ = 0;
    /// <summary>
    /// Open the brake light  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Ads3_38e.Types.BrakelightType Brakelight {
      get { return brakelight_; }
      set {
        brakelight_ = value;
      }
    }

    /// <summary>Field number for the "hornon" field.</summary>
    public const int HornonFieldNumber = 11;
    private global::Apollo.Canbus.Ads3_38e.Types.HornonType hornon_ = 0;
    /// <summary>
    /// Open the horn voice  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Ads3_38e.Types.HornonType Hornon {
      get { return hornon_; }
      set {
        hornon_ = value;
      }
    }

    /// <summary>Field number for the "fwindshieldwiper" field.</summary>
    public const int FwindshieldwiperFieldNumber = 12;
    private global::Apollo.Canbus.Ads3_38e.Types.FwindshieldwiperType fwindshieldwiper_ = 0;
    /// <summary>
    /// Open front window shield wiper  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Ads3_38e.Types.FwindshieldwiperType Fwindshieldwiper {
      get { return fwindshieldwiper_; }
      set {
        fwindshieldwiper_ = value;
      }
    }

    /// <summary>Field number for the "rwindshieldwiper" field.</summary>
    public const int RwindshieldwiperFieldNumber = 13;
    private global::Apollo.Canbus.Ads3_38e.Types.RwindshieldwiperType rwindshieldwiper_ = 0;
    /// <summary>
    /// Open rear window shield wiper  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Ads3_38e.Types.RwindshieldwiperType Rwindshieldwiper {
      get { return rwindshieldwiper_; }
      set {
        rwindshieldwiper_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Ads3_38e);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Ads3_38e other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AdsBcmWorksts != other.AdsBcmWorksts) return false;
      if (AdsBcmworkstsvalid != other.AdsBcmworkstsvalid) return false;
      if (AdsReqcontrolbcm != other.AdsReqcontrolbcm) return false;
      if (Highbeamton != other.Highbeamton) return false;
      if (Dippedbeamon != other.Dippedbeamon) return false;
      if (Turnllighton != other.Turnllighton) return false;
      if (Emergencylighton != other.Emergencylighton) return false;
      if (Ffoglampon != other.Ffoglampon) return false;
      if (Rfoglampon != other.Rfoglampon) return false;
      if (Brakelight != other.Brakelight) return false;
      if (Hornon != other.Hornon) return false;
      if (Fwindshieldwiper != other.Fwindshieldwiper) return false;
      if (Rwindshieldwiper != other.Rwindshieldwiper) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AdsBcmWorksts != 0) hash ^= AdsBcmWorksts.GetHashCode();
      if (AdsBcmworkstsvalid != 0) hash ^= AdsBcmworkstsvalid.GetHashCode();
      if (AdsReqcontrolbcm != 0) hash ^= AdsReqcontrolbcm.GetHashCode();
      if (Highbeamton != 0) hash ^= Highbeamton.GetHashCode();
      if (Dippedbeamon != 0) hash ^= Dippedbeamon.GetHashCode();
      if (Turnllighton != 0) hash ^= Turnllighton.GetHashCode();
      if (Emergencylighton != 0) hash ^= Emergencylighton.GetHashCode();
      if (Ffoglampon != 0) hash ^= Ffoglampon.GetHashCode();
      if (Rfoglampon != 0) hash ^= Rfoglampon.GetHashCode();
      if (Brakelight != 0) hash ^= Brakelight.GetHashCode();
      if (Hornon != 0) hash ^= Hornon.GetHashCode();
      if (Fwindshieldwiper != 0) hash ^= Fwindshieldwiper.GetHashCode();
      if (Rwindshieldwiper != 0) hash ^= Rwindshieldwiper.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AdsBcmWorksts != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AdsBcmWorksts);
      }
      if (AdsBcmworkstsvalid != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) AdsBcmworkstsvalid);
      }
      if (AdsReqcontrolbcm != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) AdsReqcontrolbcm);
      }
      if (Highbeamton != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Highbeamton);
      }
      if (Dippedbeamon != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Dippedbeamon);
      }
      if (Turnllighton != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Turnllighton);
      }
      if (Emergencylighton != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Emergencylighton);
      }
      if (Ffoglampon != 0) {
        output.WriteRawTag(64);
        output.WriteEnum((int) Ffoglampon);
      }
      if (Rfoglampon != 0) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Rfoglampon);
      }
      if (Brakelight != 0) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Brakelight);
      }
      if (Hornon != 0) {
        output.WriteRawTag(88);
        output.WriteEnum((int) Hornon);
      }
      if (Fwindshieldwiper != 0) {
        output.WriteRawTag(96);
        output.WriteEnum((int) Fwindshieldwiper);
      }
      if (Rwindshieldwiper != 0) {
        output.WriteRawTag(104);
        output.WriteEnum((int) Rwindshieldwiper);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AdsBcmWorksts != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AdsBcmWorksts);
      }
      if (AdsBcmworkstsvalid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AdsBcmworkstsvalid);
      }
      if (AdsReqcontrolbcm != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AdsReqcontrolbcm);
      }
      if (Highbeamton != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Highbeamton);
      }
      if (Dippedbeamon != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Dippedbeamon);
      }
      if (Turnllighton != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Turnllighton);
      }
      if (Emergencylighton != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Emergencylighton);
      }
      if (Ffoglampon != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Ffoglampon);
      }
      if (Rfoglampon != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Rfoglampon);
      }
      if (Brakelight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Brakelight);
      }
      if (Hornon != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Hornon);
      }
      if (Fwindshieldwiper != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Fwindshieldwiper);
      }
      if (Rwindshieldwiper != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Rwindshieldwiper);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Ads3_38e other) {
      if (other == null) {
        return;
      }
      if (other.AdsBcmWorksts != 0) {
        AdsBcmWorksts = other.AdsBcmWorksts;
      }
      if (other.AdsBcmworkstsvalid != 0) {
        AdsBcmworkstsvalid = other.AdsBcmworkstsvalid;
      }
      if (other.AdsReqcontrolbcm != 0) {
        AdsReqcontrolbcm = other.AdsReqcontrolbcm;
      }
      if (other.Highbeamton != 0) {
        Highbeamton = other.Highbeamton;
      }
      if (other.Dippedbeamon != 0) {
        Dippedbeamon = other.Dippedbeamon;
      }
      if (other.Turnllighton != 0) {
        Turnllighton = other.Turnllighton;
      }
      if (other.Emergencylighton != 0) {
        Emergencylighton = other.Emergencylighton;
      }
      if (other.Ffoglampon != 0) {
        Ffoglampon = other.Ffoglampon;
      }
      if (other.Rfoglampon != 0) {
        Rfoglampon = other.Rfoglampon;
      }
      if (other.Brakelight != 0) {
        Brakelight = other.Brakelight;
      }
      if (other.Hornon != 0) {
        Hornon = other.Hornon;
      }
      if (other.Fwindshieldwiper != 0) {
        Fwindshieldwiper = other.Fwindshieldwiper;
      }
      if (other.Rwindshieldwiper != 0) {
        Rwindshieldwiper = other.Rwindshieldwiper;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            adsBcmWorksts_ = (global::Apollo.Canbus.Ads3_38e.Types.Ads_bcm_workstsType) input.ReadEnum();
            break;
          }
          case 16: {
            adsBcmworkstsvalid_ = (global::Apollo.Canbus.Ads3_38e.Types.Ads_bcmworkstsvalidType) input.ReadEnum();
            break;
          }
          case 24: {
            adsReqcontrolbcm_ = (global::Apollo.Canbus.Ads3_38e.Types.Ads_reqcontrolbcmType) input.ReadEnum();
            break;
          }
          case 32: {
            highbeamton_ = (global::Apollo.Canbus.Ads3_38e.Types.HighbeamtonType) input.ReadEnum();
            break;
          }
          case 40: {
            dippedbeamon_ = (global::Apollo.Canbus.Ads3_38e.Types.DippedbeamonType) input.ReadEnum();
            break;
          }
          case 48: {
            turnllighton_ = (global::Apollo.Canbus.Ads3_38e.Types.TurnllightonType) input.ReadEnum();
            break;
          }
          case 56: {
            emergencylighton_ = (global::Apollo.Canbus.Ads3_38e.Types.EmergencylightonType) input.ReadEnum();
            break;
          }
          case 64: {
            ffoglampon_ = (global::Apollo.Canbus.Ads3_38e.Types.FfoglamponType) input.ReadEnum();
            break;
          }
          case 72: {
            rfoglampon_ = (global::Apollo.Canbus.Ads3_38e.Types.RfoglamponType) input.ReadEnum();
            break;
          }
          case 80: {
            brakelight_ = (global::Apollo.Canbus.Ads3_38e.Types.BrakelightType) input.ReadEnum();
            break;
          }
          case 88: {
            hornon_ = (global::Apollo.Canbus.Ads3_38e.Types.HornonType) input.ReadEnum();
            break;
          }
          case 96: {
            fwindshieldwiper_ = (global::Apollo.Canbus.Ads3_38e.Types.FwindshieldwiperType) input.ReadEnum();
            break;
          }
          case 104: {
            rwindshieldwiper_ = (global::Apollo.Canbus.Ads3_38e.Types.RwindshieldwiperType) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Ads3_38e message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Control Message
      /// </summary>
      public enum Ads_bcm_workstsType {
        [pbr::OriginalName("ADS_BCM_WORKSTS_DISABLE")] AdsBcmWorkstsDisable = 0,
        [pbr::OriginalName("ADS_BCM_WORKSTS_ENABLE")] AdsBcmWorkstsEnable = 1,
        [pbr::OriginalName("ADS_BCM_WORKSTS_ACTIVE")] AdsBcmWorkstsActive = 2,
        [pbr::OriginalName("ADS_BCM_WORKSTS_FAILED")] AdsBcmWorkstsFailed = 3,
      }

      public enum Ads_bcmworkstsvalidType {
        [pbr::OriginalName("ADS_BCMWORKSTSVALID_INVALID")] AdsBcmworkstsvalidInvalid = 0,
        [pbr::OriginalName("ADS_BCMWORKSTSVALID_VALID")] AdsBcmworkstsvalidValid = 1,
      }

      public enum Ads_reqcontrolbcmType {
        [pbr::OriginalName("ADS_REQCONTROLBCM_NO_REQUEST")] AdsReqcontrolbcmNoRequest = 0,
        [pbr::OriginalName("ADS_REQCONTROLBCM_REQUEST")] AdsReqcontrolbcmRequest = 1,
      }

      public enum HighbeamtonType {
        [pbr::OriginalName("HIGHBEAMTON_TURN_OFF")] HighbeamtonTurnOff = 0,
        [pbr::OriginalName("HIGHBEAMTON_TURN_ON")] HighbeamtonTurnOn = 1,
      }

      public enum DippedbeamonType {
        [pbr::OriginalName("DIPPEDBEAMON_TURN_OFF")] DippedbeamonTurnOff = 0,
        [pbr::OriginalName("DIPPEDBEAMON_TURN_ON")] DippedbeamonTurnOn = 1,
      }

      public enum TurnllightonType {
        [pbr::OriginalName("TURNLLIGHTON_TURN_OFF")] TurnllightonTurnOff = 0,
        [pbr::OriginalName("TURNLLIGHTON_TURN_LEFT_ON")] TurnllightonTurnLeftOn = 1,
        [pbr::OriginalName("TURNLLIGHTON_TURN_RIGHT_ON")] TurnllightonTurnRightOn = 2,
        [pbr::OriginalName("TURNLLIGHTON_RESERVED")] TurnllightonReserved = 3,
      }

      public enum EmergencylightonType {
        [pbr::OriginalName("EMERGENCYLIGHTON_TURN_OFF")] EmergencylightonTurnOff = 0,
        [pbr::OriginalName("EMERGENCYLIGHTON_TURN_ON")] EmergencylightonTurnOn = 1,
      }

      public enum FfoglamponType {
        [pbr::OriginalName("FFOGLAMPON_TURN_OFF")] FfoglamponTurnOff = 0,
        [pbr::OriginalName("FFOGLAMPON_TURN_ON")] FfoglamponTurnOn = 1,
      }

      public enum RfoglamponType {
        [pbr::OriginalName("RFOGLAMPON_TURN_OFF")] RfoglamponTurnOff = 0,
        [pbr::OriginalName("RFOGLAMPON_TURN_ON")] RfoglamponTurnOn = 1,
      }

      public enum BrakelightType {
        [pbr::OriginalName("BRAKELIGHT_TURN_OFF")] BrakelightTurnOff = 0,
        [pbr::OriginalName("BRAKELIGHT_TURN_ON")] BrakelightTurnOn = 1,
      }

      public enum HornonType {
        [pbr::OriginalName("HORNON_TURN_OFF")] HornonTurnOff = 0,
        [pbr::OriginalName("HORNON_TURN_ON")] HornonTurnOn = 1,
      }

      public enum FwindshieldwiperType {
        [pbr::OriginalName("FWINDSHIELDWIPER_TURN_OFF")] FwindshieldwiperTurnOff = 0,
        [pbr::OriginalName("FWINDSHIELDWIPER_TURN_ON")] FwindshieldwiperTurnOn = 1,
      }

      public enum RwindshieldwiperType {
        [pbr::OriginalName("RWINDSHIELDWIPER_TURN_OFF")] RwindshieldwiperTurnOff = 0,
        [pbr::OriginalName("RWINDSHIELDWIPER_TURN_ON")] RwindshieldwiperTurnOn = 1,
      }

    }
    #endregion

  }

  public sealed partial class Wey : pb::IMessage<Wey> {
    private static readonly pb::MessageParser<Wey> _parser = new pb::MessageParser<Wey>(() => new Wey());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Wey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Canbus.WeyReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Wey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Wey(Wey other) : this() {
      AdsShifter115 = other.adsShifter115_ != null ? other.AdsShifter115.Clone() : null;
      AdsEps113 = other.adsEps113_ != null ? other.AdsEps113.Clone() : null;
      Status310 = other.status310_ != null ? other.Status310.Clone() : null;
      VinResp3393 = other.vinResp3393_ != null ? other.VinResp3393.Clone() : null;
      VinResp2392 = other.vinResp2392_ != null ? other.VinResp2392.Clone() : null;
      VinResp1391 = other.vinResp1391_ != null ? other.VinResp1391.Clone() : null;
      AdsReqVin390 = other.adsReqVin390_ != null ? other.AdsReqVin390.Clone() : null;
      Ads1111 = other.ads1111_ != null ? other.Ads1111.Clone() : null;
      Fbs2240 = other.fbs2240_ != null ? other.Fbs2240.Clone() : null;
      Fbs1243 = other.fbs1243_ != null ? other.Fbs1243.Clone() : null;
      Fbs4235 = other.fbs4235_ != null ? other.Fbs4235.Clone() : null;
      Fail241 = other.fail241_ != null ? other.Fail241.Clone() : null;
      Fbs3237 = other.fbs3237_ != null ? other.Fbs3237.Clone() : null;
      Ads338E = other.ads338E_ != null ? other.Ads338E.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Wey Clone() {
      return new Wey(this);
    }

    /// <summary>Field number for the "ads_shifter_115" field.</summary>
    public const int AdsShifter115FieldNumber = 1;
    private global::Apollo.Canbus.Ads_shifter_115 adsShifter115_;
    /// <summary>
    /// control message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Ads_shifter_115 AdsShifter115 {
      get { return adsShifter115_; }
      set {
        adsShifter115_ = value;
      }
    }

    /// <summary>Field number for the "ads_eps_113" field.</summary>
    public const int AdsEps113FieldNumber = 2;
    private global::Apollo.Canbus.Ads_eps_113 adsEps113_;
    /// <summary>
    /// control message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Ads_eps_113 AdsEps113 {
      get { return adsEps113_; }
      set {
        adsEps113_ = value;
      }
    }

    /// <summary>Field number for the "status_310" field.</summary>
    public const int Status310FieldNumber = 3;
    private global::Apollo.Canbus.Status_310 status310_;
    /// <summary>
    /// report message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Status_310 Status310 {
      get { return status310_; }
      set {
        status310_ = value;
      }
    }

    /// <summary>Field number for the "vin_resp3_393" field.</summary>
    public const int VinResp3393FieldNumber = 4;
    private global::Apollo.Canbus.Vin_resp3_393 vinResp3393_;
    /// <summary>
    /// report message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Vin_resp3_393 VinResp3393 {
      get { return vinResp3393_; }
      set {
        vinResp3393_ = value;
      }
    }

    /// <summary>Field number for the "vin_resp2_392" field.</summary>
    public const int VinResp2392FieldNumber = 5;
    private global::Apollo.Canbus.Vin_resp2_392 vinResp2392_;
    /// <summary>
    /// report message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Vin_resp2_392 VinResp2392 {
      get { return vinResp2392_; }
      set {
        vinResp2392_ = value;
      }
    }

    /// <summary>Field number for the "vin_resp1_391" field.</summary>
    public const int VinResp1391FieldNumber = 6;
    private global::Apollo.Canbus.Vin_resp1_391 vinResp1391_;
    /// <summary>
    /// report message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Vin_resp1_391 VinResp1391 {
      get { return vinResp1391_; }
      set {
        vinResp1391_ = value;
      }
    }

    /// <summary>Field number for the "ads_req_vin_390" field.</summary>
    public const int AdsReqVin390FieldNumber = 7;
    private global::Apollo.Canbus.Ads_req_vin_390 adsReqVin390_;
    /// <summary>
    /// control message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Ads_req_vin_390 AdsReqVin390 {
      get { return adsReqVin390_; }
      set {
        adsReqVin390_ = value;
      }
    }

    /// <summary>Field number for the "ads1_111" field.</summary>
    public const int Ads1111FieldNumber = 8;
    private global::Apollo.Canbus.Ads1_111 ads1111_;
    /// <summary>
    /// control message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Ads1_111 Ads1111 {
      get { return ads1111_; }
      set {
        ads1111_ = value;
      }
    }

    /// <summary>Field number for the "fbs2_240" field.</summary>
    public const int Fbs2240FieldNumber = 9;
    private global::Apollo.Canbus.Fbs2_240 fbs2240_;
    /// <summary>
    /// report message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Fbs2_240 Fbs2240 {
      get { return fbs2240_; }
      set {
        fbs2240_ = value;
      }
    }

    /// <summary>Field number for the "fbs1_243" field.</summary>
    public const int Fbs1243FieldNumber = 10;
    private global::Apollo.Canbus.Fbs1_243 fbs1243_;
    /// <summary>
    /// report message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Fbs1_243 Fbs1243 {
      get { return fbs1243_; }
      set {
        fbs1243_ = value;
      }
    }

    /// <summary>Field number for the "fbs4_235" field.</summary>
    public const int Fbs4235FieldNumber = 11;
    private global::Apollo.Canbus.Fbs4_235 fbs4235_;
    /// <summary>
    /// report message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Fbs4_235 Fbs4235 {
      get { return fbs4235_; }
      set {
        fbs4235_ = value;
      }
    }

    /// <summary>Field number for the "fail_241" field.</summary>
    public const int Fail241FieldNumber = 12;
    private global::Apollo.Canbus.Fail_241 fail241_;
    /// <summary>
    /// report message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Fail_241 Fail241 {
      get { return fail241_; }
      set {
        fail241_ = value;
      }
    }

    /// <summary>Field number for the "fbs3_237" field.</summary>
    public const int Fbs3237FieldNumber = 13;
    private global::Apollo.Canbus.Fbs3_237 fbs3237_;
    /// <summary>
    /// report message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Fbs3_237 Fbs3237 {
      get { return fbs3237_; }
      set {
        fbs3237_ = value;
      }
    }

    /// <summary>Field number for the "ads3_38e" field.</summary>
    public const int Ads338EFieldNumber = 14;
    private global::Apollo.Canbus.Ads3_38e ads338E_;
    /// <summary>
    /// control message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Canbus.Ads3_38e Ads338E {
      get { return ads338E_; }
      set {
        ads338E_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Wey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Wey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AdsShifter115, other.AdsShifter115)) return false;
      if (!object.Equals(AdsEps113, other.AdsEps113)) return false;
      if (!object.Equals(Status310, other.Status310)) return false;
      if (!object.Equals(VinResp3393, other.VinResp3393)) return false;
      if (!object.Equals(VinResp2392, other.VinResp2392)) return false;
      if (!object.Equals(VinResp1391, other.VinResp1391)) return false;
      if (!object.Equals(AdsReqVin390, other.AdsReqVin390)) return false;
      if (!object.Equals(Ads1111, other.Ads1111)) return false;
      if (!object.Equals(Fbs2240, other.Fbs2240)) return false;
      if (!object.Equals(Fbs1243, other.Fbs1243)) return false;
      if (!object.Equals(Fbs4235, other.Fbs4235)) return false;
      if (!object.Equals(Fail241, other.Fail241)) return false;
      if (!object.Equals(Fbs3237, other.Fbs3237)) return false;
      if (!object.Equals(Ads338E, other.Ads338E)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (adsShifter115_ != null) hash ^= AdsShifter115.GetHashCode();
      if (adsEps113_ != null) hash ^= AdsEps113.GetHashCode();
      if (status310_ != null) hash ^= Status310.GetHashCode();
      if (vinResp3393_ != null) hash ^= VinResp3393.GetHashCode();
      if (vinResp2392_ != null) hash ^= VinResp2392.GetHashCode();
      if (vinResp1391_ != null) hash ^= VinResp1391.GetHashCode();
      if (adsReqVin390_ != null) hash ^= AdsReqVin390.GetHashCode();
      if (ads1111_ != null) hash ^= Ads1111.GetHashCode();
      if (fbs2240_ != null) hash ^= Fbs2240.GetHashCode();
      if (fbs1243_ != null) hash ^= Fbs1243.GetHashCode();
      if (fbs4235_ != null) hash ^= Fbs4235.GetHashCode();
      if (fail241_ != null) hash ^= Fail241.GetHashCode();
      if (fbs3237_ != null) hash ^= Fbs3237.GetHashCode();
      if (ads338E_ != null) hash ^= Ads338E.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (adsShifter115_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AdsShifter115);
      }
      if (adsEps113_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AdsEps113);
      }
      if (status310_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status310);
      }
      if (vinResp3393_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(VinResp3393);
      }
      if (vinResp2392_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(VinResp2392);
      }
      if (vinResp1391_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(VinResp1391);
      }
      if (adsReqVin390_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(AdsReqVin390);
      }
      if (ads1111_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Ads1111);
      }
      if (fbs2240_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Fbs2240);
      }
      if (fbs1243_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Fbs1243);
      }
      if (fbs4235_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Fbs4235);
      }
      if (fail241_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Fail241);
      }
      if (fbs3237_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Fbs3237);
      }
      if (ads338E_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(Ads338E);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (adsShifter115_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdsShifter115);
      }
      if (adsEps113_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdsEps113);
      }
      if (status310_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status310);
      }
      if (vinResp3393_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VinResp3393);
      }
      if (vinResp2392_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VinResp2392);
      }
      if (vinResp1391_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VinResp1391);
      }
      if (adsReqVin390_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdsReqVin390);
      }
      if (ads1111_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ads1111);
      }
      if (fbs2240_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fbs2240);
      }
      if (fbs1243_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fbs1243);
      }
      if (fbs4235_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fbs4235);
      }
      if (fail241_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fail241);
      }
      if (fbs3237_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fbs3237);
      }
      if (ads338E_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ads338E);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Wey other) {
      if (other == null) {
        return;
      }
      if (other.adsShifter115_ != null) {
        if (adsShifter115_ == null) {
          adsShifter115_ = new global::Apollo.Canbus.Ads_shifter_115();
        }
        AdsShifter115.MergeFrom(other.AdsShifter115);
      }
      if (other.adsEps113_ != null) {
        if (adsEps113_ == null) {
          adsEps113_ = new global::Apollo.Canbus.Ads_eps_113();
        }
        AdsEps113.MergeFrom(other.AdsEps113);
      }
      if (other.status310_ != null) {
        if (status310_ == null) {
          status310_ = new global::Apollo.Canbus.Status_310();
        }
        Status310.MergeFrom(other.Status310);
      }
      if (other.vinResp3393_ != null) {
        if (vinResp3393_ == null) {
          vinResp3393_ = new global::Apollo.Canbus.Vin_resp3_393();
        }
        VinResp3393.MergeFrom(other.VinResp3393);
      }
      if (other.vinResp2392_ != null) {
        if (vinResp2392_ == null) {
          vinResp2392_ = new global::Apollo.Canbus.Vin_resp2_392();
        }
        VinResp2392.MergeFrom(other.VinResp2392);
      }
      if (other.vinResp1391_ != null) {
        if (vinResp1391_ == null) {
          vinResp1391_ = new global::Apollo.Canbus.Vin_resp1_391();
        }
        VinResp1391.MergeFrom(other.VinResp1391);
      }
      if (other.adsReqVin390_ != null) {
        if (adsReqVin390_ == null) {
          adsReqVin390_ = new global::Apollo.Canbus.Ads_req_vin_390();
        }
        AdsReqVin390.MergeFrom(other.AdsReqVin390);
      }
      if (other.ads1111_ != null) {
        if (ads1111_ == null) {
          ads1111_ = new global::Apollo.Canbus.Ads1_111();
        }
        Ads1111.MergeFrom(other.Ads1111);
      }
      if (other.fbs2240_ != null) {
        if (fbs2240_ == null) {
          fbs2240_ = new global::Apollo.Canbus.Fbs2_240();
        }
        Fbs2240.MergeFrom(other.Fbs2240);
      }
      if (other.fbs1243_ != null) {
        if (fbs1243_ == null) {
          fbs1243_ = new global::Apollo.Canbus.Fbs1_243();
        }
        Fbs1243.MergeFrom(other.Fbs1243);
      }
      if (other.fbs4235_ != null) {
        if (fbs4235_ == null) {
          fbs4235_ = new global::Apollo.Canbus.Fbs4_235();
        }
        Fbs4235.MergeFrom(other.Fbs4235);
      }
      if (other.fail241_ != null) {
        if (fail241_ == null) {
          fail241_ = new global::Apollo.Canbus.Fail_241();
        }
        Fail241.MergeFrom(other.Fail241);
      }
      if (other.fbs3237_ != null) {
        if (fbs3237_ == null) {
          fbs3237_ = new global::Apollo.Canbus.Fbs3_237();
        }
        Fbs3237.MergeFrom(other.Fbs3237);
      }
      if (other.ads338E_ != null) {
        if (ads338E_ == null) {
          ads338E_ = new global::Apollo.Canbus.Ads3_38e();
        }
        Ads338E.MergeFrom(other.Ads338E);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (adsShifter115_ == null) {
              adsShifter115_ = new global::Apollo.Canbus.Ads_shifter_115();
            }
            input.ReadMessage(adsShifter115_);
            break;
          }
          case 18: {
            if (adsEps113_ == null) {
              adsEps113_ = new global::Apollo.Canbus.Ads_eps_113();
            }
            input.ReadMessage(adsEps113_);
            break;
          }
          case 26: {
            if (status310_ == null) {
              status310_ = new global::Apollo.Canbus.Status_310();
            }
            input.ReadMessage(status310_);
            break;
          }
          case 34: {
            if (vinResp3393_ == null) {
              vinResp3393_ = new global::Apollo.Canbus.Vin_resp3_393();
            }
            input.ReadMessage(vinResp3393_);
            break;
          }
          case 42: {
            if (vinResp2392_ == null) {
              vinResp2392_ = new global::Apollo.Canbus.Vin_resp2_392();
            }
            input.ReadMessage(vinResp2392_);
            break;
          }
          case 50: {
            if (vinResp1391_ == null) {
              vinResp1391_ = new global::Apollo.Canbus.Vin_resp1_391();
            }
            input.ReadMessage(vinResp1391_);
            break;
          }
          case 58: {
            if (adsReqVin390_ == null) {
              adsReqVin390_ = new global::Apollo.Canbus.Ads_req_vin_390();
            }
            input.ReadMessage(adsReqVin390_);
            break;
          }
          case 66: {
            if (ads1111_ == null) {
              ads1111_ = new global::Apollo.Canbus.Ads1_111();
            }
            input.ReadMessage(ads1111_);
            break;
          }
          case 74: {
            if (fbs2240_ == null) {
              fbs2240_ = new global::Apollo.Canbus.Fbs2_240();
            }
            input.ReadMessage(fbs2240_);
            break;
          }
          case 82: {
            if (fbs1243_ == null) {
              fbs1243_ = new global::Apollo.Canbus.Fbs1_243();
            }
            input.ReadMessage(fbs1243_);
            break;
          }
          case 90: {
            if (fbs4235_ == null) {
              fbs4235_ = new global::Apollo.Canbus.Fbs4_235();
            }
            input.ReadMessage(fbs4235_);
            break;
          }
          case 98: {
            if (fail241_ == null) {
              fail241_ = new global::Apollo.Canbus.Fail_241();
            }
            input.ReadMessage(fail241_);
            break;
          }
          case 106: {
            if (fbs3237_ == null) {
              fbs3237_ = new global::Apollo.Canbus.Fbs3_237();
            }
            input.ReadMessage(fbs3237_);
            break;
          }
          case 114: {
            if (ads338E_ == null) {
              ads338E_ = new global::Apollo.Canbus.Ads3_38e();
            }
            input.ReadMessage(ads338E_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
