// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cyber/proto/component_conf.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Apollo.Cyber.Proto {

  /// <summary>Holder for reflection information generated from cyber/proto/component_conf.proto</summary>
  public static partial class ComponentConfReflection {

    #region Descriptor
    /// <summary>File descriptor for cyber/proto/component_conf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ComponentConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBjeWJlci9wcm90by9jb21wb25lbnRfY29uZi5wcm90bxISYXBvbGxvLmN5",
            "YmVyLnByb3RvGh1jeWJlci9wcm90by9xb3NfcHJvZmlsZS5wcm90byJwCgxS",
            "ZWFkZXJPcHRpb24SDwoHY2hhbm5lbBgBIAEoCRIzCgtxb3NfcHJvZmlsZRgC",
            "IAEoCzIeLmFwb2xsby5jeWJlci5wcm90by5Rb3NQcm9maWxlEhoKEnBlbmRp",
            "bmdfcXVldWVfc2l6ZRgDIAEoDSKEAQoPQ29tcG9uZW50Q29uZmlnEgwKBG5h",
            "bWUYASABKAkSGAoQY29uZmlnX2ZpbGVfcGF0aBgCIAEoCRIWCg5mbGFnX2Zp",
            "bGVfcGF0aBgDIAEoCRIxCgdyZWFkZXJzGAQgAygLMiAuYXBvbGxvLmN5YmVy",
            "LnByb3RvLlJlYWRlck9wdGlvbiJoChRUaW1lckNvbXBvbmVudENvbmZpZxIM",
            "CgRuYW1lGAEgASgJEhgKEGNvbmZpZ19maWxlX3BhdGgYAiABKAkSFgoOZmxh",
            "Z19maWxlX3BhdGgYAyABKAkSEAoIaW50ZXJ2YWwYBCABKA1iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Apollo.Cyber.Proto.QosProfileReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Cyber.Proto.ReaderOption), global::Apollo.Cyber.Proto.ReaderOption.Parser, new[]{ "Channel", "QosProfile", "PendingQueueSize" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Cyber.Proto.ComponentConfig), global::Apollo.Cyber.Proto.ComponentConfig.Parser, new[]{ "Name", "ConfigFilePath", "FlagFilePath", "Readers" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Cyber.Proto.TimerComponentConfig), global::Apollo.Cyber.Proto.TimerComponentConfig.Parser, new[]{ "Name", "ConfigFilePath", "FlagFilePath", "Interval" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ReaderOption : pb::IMessage<ReaderOption> {
    private static readonly pb::MessageParser<ReaderOption> _parser = new pb::MessageParser<ReaderOption>(() => new ReaderOption());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReaderOption> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Cyber.Proto.ComponentConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReaderOption() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReaderOption(ReaderOption other) : this() {
      channel_ = other.channel_;
      QosProfile = other.qosProfile_ != null ? other.QosProfile.Clone() : null;
      pendingQueueSize_ = other.pendingQueueSize_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReaderOption Clone() {
      return new ReaderOption(this);
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 1;
    private string channel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "qos_profile" field.</summary>
    public const int QosProfileFieldNumber = 2;
    private global::Apollo.Cyber.Proto.QosProfile qosProfile_;
    /// <summary>
    /// depth: used to define capacity of processed messages
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Cyber.Proto.QosProfile QosProfile {
      get { return qosProfile_; }
      set {
        qosProfile_ = value;
      }
    }

    /// <summary>Field number for the "pending_queue_size" field.</summary>
    public const int PendingQueueSizeFieldNumber = 3;
    private uint pendingQueueSize_;
    /// <summary>
    /// used to define capacity of unprocessed messages
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PendingQueueSize {
      get { return pendingQueueSize_; }
      set {
        pendingQueueSize_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReaderOption);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReaderOption other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Channel != other.Channel) return false;
      if (!object.Equals(QosProfile, other.QosProfile)) return false;
      if (PendingQueueSize != other.PendingQueueSize) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (qosProfile_ != null) hash ^= QosProfile.GetHashCode();
      if (PendingQueueSize != 0) hash ^= PendingQueueSize.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Channel.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Channel);
      }
      if (qosProfile_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(QosProfile);
      }
      if (PendingQueueSize != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(PendingQueueSize);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (qosProfile_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(QosProfile);
      }
      if (PendingQueueSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PendingQueueSize);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReaderOption other) {
      if (other == null) {
        return;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      if (other.qosProfile_ != null) {
        if (qosProfile_ == null) {
          qosProfile_ = new global::Apollo.Cyber.Proto.QosProfile();
        }
        QosProfile.MergeFrom(other.QosProfile);
      }
      if (other.PendingQueueSize != 0) {
        PendingQueueSize = other.PendingQueueSize;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Channel = input.ReadString();
            break;
          }
          case 18: {
            if (qosProfile_ == null) {
              qosProfile_ = new global::Apollo.Cyber.Proto.QosProfile();
            }
            input.ReadMessage(qosProfile_);
            break;
          }
          case 24: {
            PendingQueueSize = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ComponentConfig : pb::IMessage<ComponentConfig> {
    private static readonly pb::MessageParser<ComponentConfig> _parser = new pb::MessageParser<ComponentConfig>(() => new ComponentConfig());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComponentConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Cyber.Proto.ComponentConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComponentConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComponentConfig(ComponentConfig other) : this() {
      name_ = other.name_;
      configFilePath_ = other.configFilePath_;
      flagFilePath_ = other.flagFilePath_;
      readers_ = other.readers_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComponentConfig Clone() {
      return new ComponentConfig(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config_file_path" field.</summary>
    public const int ConfigFilePathFieldNumber = 2;
    private string configFilePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConfigFilePath {
      get { return configFilePath_; }
      set {
        configFilePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "flag_file_path" field.</summary>
    public const int FlagFilePathFieldNumber = 3;
    private string flagFilePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FlagFilePath {
      get { return flagFilePath_; }
      set {
        flagFilePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "readers" field.</summary>
    public const int ReadersFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Apollo.Cyber.Proto.ReaderOption> _repeated_readers_codec
        = pb::FieldCodec.ForMessage(34, global::Apollo.Cyber.Proto.ReaderOption.Parser);
    private readonly pbc::RepeatedField<global::Apollo.Cyber.Proto.ReaderOption> readers_ = new pbc::RepeatedField<global::Apollo.Cyber.Proto.ReaderOption>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Apollo.Cyber.Proto.ReaderOption> Readers {
      get { return readers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComponentConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComponentConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (ConfigFilePath != other.ConfigFilePath) return false;
      if (FlagFilePath != other.FlagFilePath) return false;
      if(!readers_.Equals(other.readers_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ConfigFilePath.Length != 0) hash ^= ConfigFilePath.GetHashCode();
      if (FlagFilePath.Length != 0) hash ^= FlagFilePath.GetHashCode();
      hash ^= readers_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (ConfigFilePath.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConfigFilePath);
      }
      if (FlagFilePath.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FlagFilePath);
      }
      readers_.WriteTo(output, _repeated_readers_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ConfigFilePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConfigFilePath);
      }
      if (FlagFilePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FlagFilePath);
      }
      size += readers_.CalculateSize(_repeated_readers_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComponentConfig other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ConfigFilePath.Length != 0) {
        ConfigFilePath = other.ConfigFilePath;
      }
      if (other.FlagFilePath.Length != 0) {
        FlagFilePath = other.FlagFilePath;
      }
      readers_.Add(other.readers_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            ConfigFilePath = input.ReadString();
            break;
          }
          case 26: {
            FlagFilePath = input.ReadString();
            break;
          }
          case 34: {
            readers_.AddEntriesFrom(input, _repeated_readers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TimerComponentConfig : pb::IMessage<TimerComponentConfig> {
    private static readonly pb::MessageParser<TimerComponentConfig> _parser = new pb::MessageParser<TimerComponentConfig>(() => new TimerComponentConfig());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TimerComponentConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Cyber.Proto.ComponentConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimerComponentConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimerComponentConfig(TimerComponentConfig other) : this() {
      name_ = other.name_;
      configFilePath_ = other.configFilePath_;
      flagFilePath_ = other.flagFilePath_;
      interval_ = other.interval_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimerComponentConfig Clone() {
      return new TimerComponentConfig(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config_file_path" field.</summary>
    public const int ConfigFilePathFieldNumber = 2;
    private string configFilePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConfigFilePath {
      get { return configFilePath_; }
      set {
        configFilePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "flag_file_path" field.</summary>
    public const int FlagFilePathFieldNumber = 3;
    private string flagFilePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FlagFilePath {
      get { return flagFilePath_; }
      set {
        flagFilePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "interval" field.</summary>
    public const int IntervalFieldNumber = 4;
    private uint interval_;
    /// <summary>
    /// In milliseconds.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Interval {
      get { return interval_; }
      set {
        interval_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TimerComponentConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TimerComponentConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (ConfigFilePath != other.ConfigFilePath) return false;
      if (FlagFilePath != other.FlagFilePath) return false;
      if (Interval != other.Interval) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ConfigFilePath.Length != 0) hash ^= ConfigFilePath.GetHashCode();
      if (FlagFilePath.Length != 0) hash ^= FlagFilePath.GetHashCode();
      if (Interval != 0) hash ^= Interval.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (ConfigFilePath.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConfigFilePath);
      }
      if (FlagFilePath.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FlagFilePath);
      }
      if (Interval != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Interval);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ConfigFilePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConfigFilePath);
      }
      if (FlagFilePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FlagFilePath);
      }
      if (Interval != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Interval);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TimerComponentConfig other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ConfigFilePath.Length != 0) {
        ConfigFilePath = other.ConfigFilePath;
      }
      if (other.FlagFilePath.Length != 0) {
        FlagFilePath = other.FlagFilePath;
      }
      if (other.Interval != 0) {
        Interval = other.Interval;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            ConfigFilePath = input.ReadString();
            break;
          }
          case 26: {
            FlagFilePath = input.ReadString();
            break;
          }
          case 32: {
            Interval = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
