// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cyber/proto/classic_conf.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Apollo.Cyber.Proto {

  /// <summary>Holder for reflection information generated from cyber/proto/classic_conf.proto</summary>
  public static partial class ClassicConfReflection {

    #region Descriptor
    /// <summary>File descriptor for cyber/proto/classic_conf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClassicConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5jeWJlci9wcm90by9jbGFzc2ljX2NvbmYucHJvdG8SEmFwb2xsby5jeWJl",
            "ci5wcm90byI9CgtDbGFzc2ljVGFzaxIMCgRuYW1lGAEgASgJEgwKBHByaW8Y",
            "AiABKA0SEgoKZ3JvdXBfbmFtZRgDIAEoCSK1AQoKU2NoZWRHcm91cBIMCgRu",
            "YW1lGAEgASgJEhUKDXByb2Nlc3Nvcl9udW0YAiABKA0SEAoIYWZmaW5pdHkY",
            "AyABKAkSDgoGY3B1c2V0GAQgASgJEhgKEHByb2Nlc3Nvcl9wb2xpY3kYBSAB",
            "KAkSFgoOcHJvY2Vzc29yX3ByaW8YBiABKAUSLgoFdGFza3MYByADKAsyHy5h",
            "cG9sbG8uY3liZXIucHJvdG8uQ2xhc3NpY1Rhc2siPQoLQ2xhc3NpY0NvbmYS",
            "LgoGZ3JvdXBzGAEgAygLMh4uYXBvbGxvLmN5YmVyLnByb3RvLlNjaGVkR3Jv",
            "dXBiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Cyber.Proto.ClassicTask), global::Apollo.Cyber.Proto.ClassicTask.Parser, new[]{ "Name", "Prio", "GroupName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Cyber.Proto.SchedGroup), global::Apollo.Cyber.Proto.SchedGroup.Parser, new[]{ "Name", "ProcessorNum", "Affinity", "Cpuset", "ProcessorPolicy", "ProcessorPrio", "Tasks" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Cyber.Proto.ClassicConf), global::Apollo.Cyber.Proto.ClassicConf.Parser, new[]{ "Groups" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ClassicTask : pb::IMessage<ClassicTask> {
    private static readonly pb::MessageParser<ClassicTask> _parser = new pb::MessageParser<ClassicTask>(() => new ClassicTask());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClassicTask> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Cyber.Proto.ClassicConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClassicTask() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClassicTask(ClassicTask other) : this() {
      name_ = other.name_;
      prio_ = other.prio_;
      groupName_ = other.groupName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClassicTask Clone() {
      return new ClassicTask(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "prio" field.</summary>
    public const int PrioFieldNumber = 2;
    private uint prio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Prio {
      get { return prio_; }
      set {
        prio_ = value;
      }
    }

    /// <summary>Field number for the "group_name" field.</summary>
    public const int GroupNameFieldNumber = 3;
    private string groupName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupName {
      get { return groupName_; }
      set {
        groupName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClassicTask);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClassicTask other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Prio != other.Prio) return false;
      if (GroupName != other.GroupName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Prio != 0) hash ^= Prio.GetHashCode();
      if (GroupName.Length != 0) hash ^= GroupName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Prio != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Prio);
      }
      if (GroupName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GroupName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Prio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Prio);
      }
      if (GroupName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClassicTask other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Prio != 0) {
        Prio = other.Prio;
      }
      if (other.GroupName.Length != 0) {
        GroupName = other.GroupName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Prio = input.ReadUInt32();
            break;
          }
          case 26: {
            GroupName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SchedGroup : pb::IMessage<SchedGroup> {
    private static readonly pb::MessageParser<SchedGroup> _parser = new pb::MessageParser<SchedGroup>(() => new SchedGroup());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SchedGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Cyber.Proto.ClassicConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SchedGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SchedGroup(SchedGroup other) : this() {
      name_ = other.name_;
      processorNum_ = other.processorNum_;
      affinity_ = other.affinity_;
      cpuset_ = other.cpuset_;
      processorPolicy_ = other.processorPolicy_;
      processorPrio_ = other.processorPrio_;
      tasks_ = other.tasks_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SchedGroup Clone() {
      return new SchedGroup(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "processor_num" field.</summary>
    public const int ProcessorNumFieldNumber = 2;
    private uint processorNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ProcessorNum {
      get { return processorNum_; }
      set {
        processorNum_ = value;
      }
    }

    /// <summary>Field number for the "affinity" field.</summary>
    public const int AffinityFieldNumber = 3;
    private string affinity_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Affinity {
      get { return affinity_; }
      set {
        affinity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cpuset" field.</summary>
    public const int CpusetFieldNumber = 4;
    private string cpuset_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cpuset {
      get { return cpuset_; }
      set {
        cpuset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "processor_policy" field.</summary>
    public const int ProcessorPolicyFieldNumber = 5;
    private string processorPolicy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProcessorPolicy {
      get { return processorPolicy_; }
      set {
        processorPolicy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "processor_prio" field.</summary>
    public const int ProcessorPrioFieldNumber = 6;
    private int processorPrio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProcessorPrio {
      get { return processorPrio_; }
      set {
        processorPrio_ = value;
      }
    }

    /// <summary>Field number for the "tasks" field.</summary>
    public const int TasksFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Apollo.Cyber.Proto.ClassicTask> _repeated_tasks_codec
        = pb::FieldCodec.ForMessage(58, global::Apollo.Cyber.Proto.ClassicTask.Parser);
    private readonly pbc::RepeatedField<global::Apollo.Cyber.Proto.ClassicTask> tasks_ = new pbc::RepeatedField<global::Apollo.Cyber.Proto.ClassicTask>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Apollo.Cyber.Proto.ClassicTask> Tasks {
      get { return tasks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SchedGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SchedGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (ProcessorNum != other.ProcessorNum) return false;
      if (Affinity != other.Affinity) return false;
      if (Cpuset != other.Cpuset) return false;
      if (ProcessorPolicy != other.ProcessorPolicy) return false;
      if (ProcessorPrio != other.ProcessorPrio) return false;
      if(!tasks_.Equals(other.tasks_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ProcessorNum != 0) hash ^= ProcessorNum.GetHashCode();
      if (Affinity.Length != 0) hash ^= Affinity.GetHashCode();
      if (Cpuset.Length != 0) hash ^= Cpuset.GetHashCode();
      if (ProcessorPolicy.Length != 0) hash ^= ProcessorPolicy.GetHashCode();
      if (ProcessorPrio != 0) hash ^= ProcessorPrio.GetHashCode();
      hash ^= tasks_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (ProcessorNum != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ProcessorNum);
      }
      if (Affinity.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Affinity);
      }
      if (Cpuset.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Cpuset);
      }
      if (ProcessorPolicy.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ProcessorPolicy);
      }
      if (ProcessorPrio != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ProcessorPrio);
      }
      tasks_.WriteTo(output, _repeated_tasks_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ProcessorNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProcessorNum);
      }
      if (Affinity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Affinity);
      }
      if (Cpuset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cpuset);
      }
      if (ProcessorPolicy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProcessorPolicy);
      }
      if (ProcessorPrio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProcessorPrio);
      }
      size += tasks_.CalculateSize(_repeated_tasks_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SchedGroup other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ProcessorNum != 0) {
        ProcessorNum = other.ProcessorNum;
      }
      if (other.Affinity.Length != 0) {
        Affinity = other.Affinity;
      }
      if (other.Cpuset.Length != 0) {
        Cpuset = other.Cpuset;
      }
      if (other.ProcessorPolicy.Length != 0) {
        ProcessorPolicy = other.ProcessorPolicy;
      }
      if (other.ProcessorPrio != 0) {
        ProcessorPrio = other.ProcessorPrio;
      }
      tasks_.Add(other.tasks_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            ProcessorNum = input.ReadUInt32();
            break;
          }
          case 26: {
            Affinity = input.ReadString();
            break;
          }
          case 34: {
            Cpuset = input.ReadString();
            break;
          }
          case 42: {
            ProcessorPolicy = input.ReadString();
            break;
          }
          case 48: {
            ProcessorPrio = input.ReadInt32();
            break;
          }
          case 58: {
            tasks_.AddEntriesFrom(input, _repeated_tasks_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ClassicConf : pb::IMessage<ClassicConf> {
    private static readonly pb::MessageParser<ClassicConf> _parser = new pb::MessageParser<ClassicConf>(() => new ClassicConf());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClassicConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Cyber.Proto.ClassicConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClassicConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClassicConf(ClassicConf other) : this() {
      groups_ = other.groups_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClassicConf Clone() {
      return new ClassicConf(this);
    }

    /// <summary>Field number for the "groups" field.</summary>
    public const int GroupsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Apollo.Cyber.Proto.SchedGroup> _repeated_groups_codec
        = pb::FieldCodec.ForMessage(10, global::Apollo.Cyber.Proto.SchedGroup.Parser);
    private readonly pbc::RepeatedField<global::Apollo.Cyber.Proto.SchedGroup> groups_ = new pbc::RepeatedField<global::Apollo.Cyber.Proto.SchedGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Apollo.Cyber.Proto.SchedGroup> Groups {
      get { return groups_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClassicConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClassicConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!groups_.Equals(other.groups_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= groups_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      groups_.WriteTo(output, _repeated_groups_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += groups_.CalculateSize(_repeated_groups_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClassicConf other) {
      if (other == null) {
        return;
      }
      groups_.Add(other.groups_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            groups_.AddEntriesFrom(input, _repeated_groups_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
