// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cyber/proto/parameter.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Apollo.Cyber.Proto {

  /// <summary>Holder for reflection information generated from cyber/proto/parameter.proto</summary>
  public static partial class ParameterReflection {

    #region Descriptor
    /// <summary>File descriptor for cyber/proto/parameter.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ParameterReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtjeWJlci9wcm90by9wYXJhbWV0ZXIucHJvdG8SEmFwb2xsby5jeWJlci5w",
            "cm90byLTAQoFUGFyYW0SDAoEbmFtZRgBIAEoCRIrCgR0eXBlGAIgASgOMh0u",
            "YXBvbGxvLmN5YmVyLnByb3RvLlBhcmFtVHlwZRIRCgl0eXBlX25hbWUYAyAB",
            "KAkSFAoKYm9vbF92YWx1ZRgEIAEoCEgAEhMKCWludF92YWx1ZRgFIAEoA0gA",
            "EhYKDGRvdWJsZV92YWx1ZRgGIAEoAUgAEhYKDHN0cmluZ192YWx1ZRgHIAEo",
            "CUgAEhIKCnByb3RvX2Rlc2MYCCABKAxCDQoLb25lb2ZfdmFsdWUiGQoITm9k",
            "ZU5hbWUSDQoFdmFsdWUYASABKAkiGgoJUGFyYW1OYW1lEg0KBXZhbHVlGAEg",
            "ASgJIhsKCkJvb2xSZXN1bHQSDQoFdmFsdWUYASABKAgiMgoGUGFyYW1zEigK",
            "BXBhcmFtGAEgAygLMhkuYXBvbGxvLmN5YmVyLnByb3RvLlBhcmFtKlEKCVBh",
            "cmFtVHlwZRILCgdOT1RfU0VUEAASCAoEQk9PTBABEgcKA0lOVBACEgoKBkRP",
            "VUJMRRADEgoKBlNUUklORxAEEgwKCFBST1RPQlVGEAViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Apollo.Cyber.Proto.ParamType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Cyber.Proto.Param), global::Apollo.Cyber.Proto.Param.Parser, new[]{ "Name", "Type", "TypeName", "BoolValue", "IntValue", "DoubleValue", "StringValue", "ProtoDesc" }, new[]{ "OneofValue" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Cyber.Proto.NodeName), global::Apollo.Cyber.Proto.NodeName.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Cyber.Proto.ParamName), global::Apollo.Cyber.Proto.ParamName.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Cyber.Proto.BoolResult), global::Apollo.Cyber.Proto.BoolResult.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Apollo.Cyber.Proto.Params), global::Apollo.Cyber.Proto.Params.Parser, new[]{ "Param" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ParamType {
    [pbr::OriginalName("NOT_SET")] NotSet = 0,
    [pbr::OriginalName("BOOL")] Bool = 1,
    [pbr::OriginalName("INT")] Int = 2,
    [pbr::OriginalName("DOUBLE")] Double = 3,
    [pbr::OriginalName("STRING")] String = 4,
    [pbr::OriginalName("PROTOBUF")] Protobuf = 5,
  }

  #endregion

  #region Messages
  public sealed partial class Param : pb::IMessage<Param> {
    private static readonly pb::MessageParser<Param> _parser = new pb::MessageParser<Param>(() => new Param());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Param> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Cyber.Proto.ParameterReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Param() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Param(Param other) : this() {
      name_ = other.name_;
      type_ = other.type_;
      typeName_ = other.typeName_;
      protoDesc_ = other.protoDesc_;
      switch (other.OneofValueCase) {
        case OneofValueOneofCase.BoolValue:
          BoolValue = other.BoolValue;
          break;
        case OneofValueOneofCase.IntValue:
          IntValue = other.IntValue;
          break;
        case OneofValueOneofCase.DoubleValue:
          DoubleValue = other.DoubleValue;
          break;
        case OneofValueOneofCase.StringValue:
          StringValue = other.StringValue;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Param Clone() {
      return new Param(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Apollo.Cyber.Proto.ParamType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Apollo.Cyber.Proto.ParamType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "type_name" field.</summary>
    public const int TypeNameFieldNumber = 3;
    private string typeName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TypeName {
      get { return typeName_; }
      set {
        typeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bool_value" field.</summary>
    public const int BoolValueFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool BoolValue {
      get { return oneofValueCase_ == OneofValueOneofCase.BoolValue ? (bool) oneofValue_ : false; }
      set {
        oneofValue_ = value;
        oneofValueCase_ = OneofValueOneofCase.BoolValue;
      }
    }

    /// <summary>Field number for the "int_value" field.</summary>
    public const int IntValueFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long IntValue {
      get { return oneofValueCase_ == OneofValueOneofCase.IntValue ? (long) oneofValue_ : 0L; }
      set {
        oneofValue_ = value;
        oneofValueCase_ = OneofValueOneofCase.IntValue;
      }
    }

    /// <summary>Field number for the "double_value" field.</summary>
    public const int DoubleValueFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double DoubleValue {
      get { return oneofValueCase_ == OneofValueOneofCase.DoubleValue ? (double) oneofValue_ : 0D; }
      set {
        oneofValue_ = value;
        oneofValueCase_ = OneofValueOneofCase.DoubleValue;
      }
    }

    /// <summary>Field number for the "string_value" field.</summary>
    public const int StringValueFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StringValue {
      get { return oneofValueCase_ == OneofValueOneofCase.StringValue ? (string) oneofValue_ : ""; }
      set {
        oneofValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        oneofValueCase_ = OneofValueOneofCase.StringValue;
      }
    }

    /// <summary>Field number for the "proto_desc" field.</summary>
    public const int ProtoDescFieldNumber = 8;
    private pb::ByteString protoDesc_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ProtoDesc {
      get { return protoDesc_; }
      set {
        protoDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object oneofValue_;
    /// <summary>Enum of possible cases for the "oneof_value" oneof.</summary>
    public enum OneofValueOneofCase {
      None = 0,
      BoolValue = 4,
      IntValue = 5,
      DoubleValue = 6,
      StringValue = 7,
    }
    private OneofValueOneofCase oneofValueCase_ = OneofValueOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneofValueOneofCase OneofValueCase {
      get { return oneofValueCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOneofValue() {
      oneofValueCase_ = OneofValueOneofCase.None;
      oneofValue_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Param);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Param other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if (TypeName != other.TypeName) return false;
      if (BoolValue != other.BoolValue) return false;
      if (IntValue != other.IntValue) return false;
      if (DoubleValue != other.DoubleValue) return false;
      if (StringValue != other.StringValue) return false;
      if (ProtoDesc != other.ProtoDesc) return false;
      if (OneofValueCase != other.OneofValueCase) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (TypeName.Length != 0) hash ^= TypeName.GetHashCode();
      if (oneofValueCase_ == OneofValueOneofCase.BoolValue) hash ^= BoolValue.GetHashCode();
      if (oneofValueCase_ == OneofValueOneofCase.IntValue) hash ^= IntValue.GetHashCode();
      if (oneofValueCase_ == OneofValueOneofCase.DoubleValue) hash ^= DoubleValue.GetHashCode();
      if (oneofValueCase_ == OneofValueOneofCase.StringValue) hash ^= StringValue.GetHashCode();
      if (ProtoDesc.Length != 0) hash ^= ProtoDesc.GetHashCode();
      hash ^= (int) oneofValueCase_;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (TypeName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TypeName);
      }
      if (oneofValueCase_ == OneofValueOneofCase.BoolValue) {
        output.WriteRawTag(32);
        output.WriteBool(BoolValue);
      }
      if (oneofValueCase_ == OneofValueOneofCase.IntValue) {
        output.WriteRawTag(40);
        output.WriteInt64(IntValue);
      }
      if (oneofValueCase_ == OneofValueOneofCase.DoubleValue) {
        output.WriteRawTag(49);
        output.WriteDouble(DoubleValue);
      }
      if (oneofValueCase_ == OneofValueOneofCase.StringValue) {
        output.WriteRawTag(58);
        output.WriteString(StringValue);
      }
      if (ProtoDesc.Length != 0) {
        output.WriteRawTag(66);
        output.WriteBytes(ProtoDesc);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (TypeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TypeName);
      }
      if (oneofValueCase_ == OneofValueOneofCase.BoolValue) {
        size += 1 + 1;
      }
      if (oneofValueCase_ == OneofValueOneofCase.IntValue) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(IntValue);
      }
      if (oneofValueCase_ == OneofValueOneofCase.DoubleValue) {
        size += 1 + 8;
      }
      if (oneofValueCase_ == OneofValueOneofCase.StringValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StringValue);
      }
      if (ProtoDesc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ProtoDesc);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Param other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.TypeName.Length != 0) {
        TypeName = other.TypeName;
      }
      if (other.ProtoDesc.Length != 0) {
        ProtoDesc = other.ProtoDesc;
      }
      switch (other.OneofValueCase) {
        case OneofValueOneofCase.BoolValue:
          BoolValue = other.BoolValue;
          break;
        case OneofValueOneofCase.IntValue:
          IntValue = other.IntValue;
          break;
        case OneofValueOneofCase.DoubleValue:
          DoubleValue = other.DoubleValue;
          break;
        case OneofValueOneofCase.StringValue:
          StringValue = other.StringValue;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            type_ = (global::Apollo.Cyber.Proto.ParamType) input.ReadEnum();
            break;
          }
          case 26: {
            TypeName = input.ReadString();
            break;
          }
          case 32: {
            BoolValue = input.ReadBool();
            break;
          }
          case 40: {
            IntValue = input.ReadInt64();
            break;
          }
          case 49: {
            DoubleValue = input.ReadDouble();
            break;
          }
          case 58: {
            StringValue = input.ReadString();
            break;
          }
          case 66: {
            ProtoDesc = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NodeName : pb::IMessage<NodeName> {
    private static readonly pb::MessageParser<NodeName> _parser = new pb::MessageParser<NodeName>(() => new NodeName());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NodeName> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Cyber.Proto.ParameterReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeName() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeName(NodeName other) : this() {
      value_ = other.value_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeName Clone() {
      return new NodeName(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NodeName);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NodeName other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Value);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NodeName other) {
      if (other == null) {
        return;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ParamName : pb::IMessage<ParamName> {
    private static readonly pb::MessageParser<ParamName> _parser = new pb::MessageParser<ParamName>(() => new ParamName());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParamName> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Cyber.Proto.ParameterReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParamName() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParamName(ParamName other) : this() {
      value_ = other.value_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParamName Clone() {
      return new ParamName(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParamName);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParamName other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Value);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParamName other) {
      if (other == null) {
        return;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BoolResult : pb::IMessage<BoolResult> {
    private static readonly pb::MessageParser<BoolResult> _parser = new pb::MessageParser<BoolResult>(() => new BoolResult());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BoolResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Cyber.Proto.ParameterReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolResult(BoolResult other) : this() {
      value_ = other.value_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolResult Clone() {
      return new BoolResult(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private bool value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BoolResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BoolResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != false) hash ^= Value.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value != false) {
        output.WriteRawTag(8);
        output.WriteBool(Value);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BoolResult other) {
      if (other == null) {
        return;
      }
      if (other.Value != false) {
        Value = other.Value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Value = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Params : pb::IMessage<Params> {
    private static readonly pb::MessageParser<Params> _parser = new pb::MessageParser<Params>(() => new Params());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Params> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Apollo.Cyber.Proto.ParameterReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Params() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Params(Params other) : this() {
      param_ = other.param_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Params Clone() {
      return new Params(this);
    }

    /// <summary>Field number for the "param" field.</summary>
    public const int ParamFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Apollo.Cyber.Proto.Param> _repeated_param_codec
        = pb::FieldCodec.ForMessage(10, global::Apollo.Cyber.Proto.Param.Parser);
    private readonly pbc::RepeatedField<global::Apollo.Cyber.Proto.Param> param_ = new pbc::RepeatedField<global::Apollo.Cyber.Proto.Param>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Apollo.Cyber.Proto.Param> Param {
      get { return param_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Params);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Params other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!param_.Equals(other.param_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= param_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      param_.WriteTo(output, _repeated_param_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += param_.CalculateSize(_repeated_param_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Params other) {
      if (other == null) {
        return;
      }
      param_.Add(other.param_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            param_.AddEntriesFrom(input, _repeated_param_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
